{"version":3,"sources":["../covidmodule/index.js","../covidmodule/CountyInfo.js","../covidmodule/Util.js","Splash.js","AppModule.js","models/Countries.js","GeoLocation.js","CountryContext.js","MyTabs.js","CovidUI.js","MentalHealthTab.js","Util.js","SearchBox.js","CreditHover.js","graphs/DataCredit.js","FooterDialogue.js","Footer.js","components/chrome/DonateLink.js","components/chrome/SocialMediaButtons.js","ContentWrapping.js","USInfoTopWidget.js","Routes.js","CovidAnalysis.js","NPRProjection.js","TestingData.js","PublicAllData.js","graphs/DataSeries.js","math/FitVirusCV19.js","models/DataSeries.js","UnitedStates.js","graphs/Summary.js","graphs/AntSwitch.js","MapCountyGeneric.js","MapStateGeneric.js","DateRangeSlider.js","WorldContext.js","models/BasicDataComponent.js","models/NameComponent.js","models/PopulationComponent.js","models/Path.js","MapWorldGeneric.js","MapUS.js","graphs/GraphAxisScales.js","components/graphs/AdvancedGraph.js","graphs/GraphCountyHospitalization.js","graphs/GraphHospitalizationProjection.js","graphs/AtAGlance.js","graphs/ChildrenAtAGlance.js","graphs/CovidCompare.js","graphs/GraphDaysToDoubleOverTime.js","graphs/GraphGrowthRateOverTime.js","graphs/GraphRecoveryAndDeath.js","graphs/GraphTestingEffort.js","graphs/GraphDaily.js","graphs/Graphs.js","Map.js","TableSortHelper.js","ListAllStates.js","Title.js","PageUS.js","CountyListRender.js","PageState.js","Hospitals.js","PageCounty.js","PageMetro.js","models/ChildrenComponent.js","models/DivisionTypesComponent.js","models/GeographyComponent.js","models/ProjectionsComponent.js","models/SearchIndexComponent.js","models/World.js","models/Earth.js","components/chrome/SearchInput.js","components/chrome/AppBar.js","components/chrome/Discussion.js","components/tables/SortableTable.js","components/tables/DivisionTable.js","pages/PageRegion.js","Page404.js","Theme.js","App.js","serviceWorker.js","index.js"],"names":["CountyInfo","require","Util","exports","CountyGeoData","findCountyStrict","state_two_letter","countyname","find","s","State","County","STATE_TWO_LETTER_TO_POPULATIONS","STATE_FIPS_TO_NAME","fipsToState","STATE_SHORTNAME_TO_FIPS","Object","keys","reduce","m","k","abbreviation","STATE_Name_To_FIPS","getStatePopulation","two_letter_state_name","getStateNameFromFips","state_fips","getStateAbbreviationFromFips","getFipsFromStateName","state_name","getFipsFromStateShortName","state_name_short","getAllStateFips","getFipsFromStateCountyName","county","replace","method","err","FIPS","padStart","moment","pad","n","normalize_date","p","split","length","parseInt","d","y","getValueFromLastDate","v","comment","num","newnum","values","nv","sort","a","b","toDate","last","mergeTwoMapValues","m1","m2","i","isNaN","useStyles","makeStyles","theme","grow","flexGrow","title","display","color","background","padding","margin","borderRadius","subtitle","rootSplash","justifyContent","alignItems","width","height","Splash","props","classes","className","Toolbar","Typography","variant","noWrap","firebase","firebaseConfig","initializeApp","logger","analytics","firestore","Cookies","superagent","defaultValue","location","country","Countries","state","coordinates","longitude","latitude","fetchPrecisePoliticalLocation","fetchLocationUsingMethods","askForExactLocation","fetchApproxIPLocationGoogle","apiKey","set","expires","saved","getLocationFromCookie","fetchApproxIPLocationIPDataCo","ipdataco_key","ipdataco_key2","ipdataco_key3","fetchApproxIPLocationIPGEOLOCATION","methods","safeMethods","concat","coordinateFindingError","coords","getPoliticalLocationFromCoordinates","getCensusLocationFromCoordinates","getGlobalLocationFromCoordinates","locationFindingError","result","undefined","get","query","lat","lon","format","then","res","c","body","results","county_name","state_code","stateName","logEvent","catch","country_name","googleMapsEndpoint","address_components","countryName","long_name","console","log","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","position","error","cookie","getJSON","key","post","lng","url","ipgeolocation_key","Error","country_code","country_code2","region","state_prov","region_code","apikey","CountryContext","React","createContext","TabPanel","children","value","index","other","component","role","hidden","id","aria-labelledby","Box","LinkTab","withStyles","root","textTransform","fontWeight","typography","fontWeightRegular","minHeight","fontFamily","join","opacity","fontWeightBold","selected","Tab","disableRipple","MyTabs","history","useHistory","tabs","labels","selectedTabIdx","selectedTabName","URLSearchParams","search","urlQueryKey","urlQueryValues","findIndex","name","useState","tabvalue","setTabvalue","labelcomp","map","l","label","tabscomp","tab","Tabs","onChange","event","newValue","searchParams","toString","push","aria-label","sectionHeader","palette","secondary","main","SectionHeader","MentalHealthResources","inline","ResourceSectionOne","List","item","ListItem","onClick","window","open","Url","ListItemAvatar","Avatar","src","ThumbnailURL","ListItemText","primary","Title","Fragment","Subtitle","MentalHealthResourceSection","withRouter","resmap","section","tablist","shortNumber","states","myShortNumber","Number","isFinite","filterDataToRecent","data","numDays","cutoff","subtract","filter","fulldate","isAfter","getOldestMomentInData","evaluationFunc","currentOldest","forEach","element","elementMoment","makeCountyFromDescription","myCountry","stateCountyDescription","stateForTwoLetterName","countyForName","myGoodWholeNumber","toFixed","myGoodShortNumber","CookieGetLastCounty","getDefaultCounty","county_info","CookieSetLastCounty","useStickyState","cookieId","isCookieStale","expiration","readCookie","setState","newState","getRefLines","source","stayhome","vKeyRefLines","date","unix","stayHomeOrder","StartDate","EndDate","findLocation","link","marginLeft","marginRight","gpsIcon","SearchBox","useContext","counties","allStates","flatMap","allCounties","display_name","total","totalConfirmed","newCases","twoLetterName","metros","allMetros","metro","search_list_final","x","mobilePropsBar","xs","sm","mobilePropsButton","webPropsBar","xl","md","webPropsButton","Grid","container","justify","direction","isMobile","classNamePrefix","styles","menu","provided","zIndex","placeholder","isDisabled","isLoading","isClearable","isRtl","isSearchable","options","param","route","routeTo","target","findLocationAndRedirect","fontSize","countyDescr","newCountyObj","params","to","CreditPopover","list","contributers","substring","DataCreditWidget","sources","href","rel","spacing","closeButton","right","top","grey","DialogTitle","onClose","disableTypography","IconButton","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","asDialogue","Component","handleClose","buttonText","Dialog","maxWidth","fullWidth","dividers","autoFocus","topContainer","marginTop","paddingBottom","footerLink","textAlign","linkContainer","iconRoot","githubIcon","creditParagraph","Footer","footerLinkProps","footerLinks","handleClick","openedPopoverId","setOpenedPopoverId","popoverId","preventDefault","linkPair","e","DonateLink","Link","message","SocialMediaButtons","useLocation","pathname","bgStyle","backgroundColor","fill","FacebookShareButton","FacebookIcon","TwitterShareButton","TwitterIcon","RedditShareButton","RedditIcon","WhatsappShareButton","WhatsappIcon","EmailShareButton","EmailIcon","Button","Icon","buttonClassName","quote","size","round","iconFillColor","iconColor","WhatsNewData","row","paddingRight","tagline","paddingTop","alignSelf","flexDirection","keepclam","searchContainer","paddingLeft","qpContainer","borderWidth","qpBox","flex","supportUs","buyUsACoffee","newsDate","newsTitle","commentPaper","overflow","maxHeight","WhatsNewSection","Date","slice","wrap","Feature","RouterLink","commentary","DonateButton","Banner","showNews","us_summary","summary","url_shared","match","socialMediaRow","generatedTime","QPArea","setOpen","qpid","withHeader","comp","disqusConfig","identifier","healthDiscussion","Paper","elevation","DiscussionEmbed","shortname","config","appId","tagSticky","left","tagContainer","flexWrap","tagContainerNoBeds","rowNoBeds","tag","textDecoration","tagSelected","tagTitle","tagSection","alignContent","topTag","smallTag","mainTag","table","timestamp","USInfoTopWidget","useTheme","squish","useMediaQuery","breakpoints","down","tags","cursor","parent","showBeds","Tag","shortName","hospitals","newcases","confirmed","count","bedCount","linearRegression","log2","Math","getGrowthRateLinearRegression","fips","slope","getDoubleDays7DayLinearRegression","exp","key7days","firstday","prepared_data","diff","daysToDouble","processForTimeSeries","fn","getKeysSortedByDate","getDay2DoubleTimeSeries","getGrowthRateTimeSeries","trimLastDaysData","cached","fetchNPRProjectionData","cachedStates","cachedUS","addfulldate","sourceData","t","floor","fetchTestingDataStates","fetchTestingDataUS","fetchPublicCountyData","state_short","county_fips","fetchAllUSData","fetchWorldData","mergeDataSeries","entry1","entry2","map1","e2","mitem","makeDataSeriesFromTotal","key_total","key_daily","key_moving","sorteddata","entry","lastentry","moving","sortByFullDate","dailyvalues","column","exportColumnValues","avg","ma","computeMovingAverage","exportColumnFromDataSeries","getODE","par","beta","gamma","N","I0","dCdt","C","c0","fitVirusCV19","startdate","date0","startdate_till_now","date00","n0","b0","iniGuess","K0","r","nday","Array","w1","w2","bt","bmax","parestWrapper","every","Clim","flambertw","calcEndPoint","calcClim","Cm","calcInflectionPoint","calcCm","tau1","tau2","tau","tm","integral","calcTm","tspan","calcTend","max","makeTspan","myOde45","add","odefun","y0","t0","integrator","ode45","tmax","step","tmin","dt","fun","fmin","nelderMead","fx","fminsearch","tsol","Csol","NaN","Cc","Csol_new","c1","c2","f1","f2","norm","vec_subtraction","v1","v2","dC","sum","sqrt","nn","nmax","k1","k2","k3","q","K","A","z0","EPSILON","POSITIVE_INFINITY","fzero","range","func","lowerLimit","upperLimit","errorTol","maxIter","tol_act","new_step","prev_step","fa","fb","fc","abs","t1","cb","t2","uniroot","periods","daily","doublingLabel","smoothLabel","formatter","intervalS","converter","pointConverter","DataSeries","raw","period","this","label_","raw_","period_","points_","lastPoint_","EmptySeries","point","ts","serieses","points","Map","formatters","Set","series","has","next","entries","timestampFormatter","t0_","suffix","valueByUnixTimestamp_","lastPoint","secondToLastValue","lastChange","LazyDataSeries","deltaPoints","doublingInterval","daysTo2X","lastLogs","lastDoubleValue","lastDouble","doublings","dropped","inputseries","assert","denominator","MOVING_WIN_SIZE","smoothed","SMOOTH_WINDOW_SIZE","population","capita","linear","trendFit","Ca","newstartdate","isSame","mdate","valueByUnixTimestamp","tminus1","generator","generator_","valueMapper","predictionMapper","trend","difference","CovidData","geolib","statemap","STATEFP","datesToDataPoints","days","Confirmed","sortByDate","projection","ProjectionMIT","day","death","Death","Recovered","recovery","CovidSummarizable","covidRaw_","Summary","normalizedRaw_","beds","bedsICU","bedsAvail","deathsNew","newpercent","daysToDoubleDeath","LastConfirmed","LastConfirmedNew","summarized","deaths","LastDeath","LastDeathNew","recovered","LastRecovered","recoveredNew","LastRecoveredNew","tests","totalTests","DaysToDouble","DaysToDoubleDeath","generated","Last2WeeksConfirmedDelta","Country","fetchedAllData","metroByStatesByIds_","statesById_","statesByTwoLetterName_","countiesById_","stateId","countyForId","update","metroByStates","Counties","addMetro","metroForId","Metros","reindex","countydata","stateraw","countyraw","totalTestPositive","hospitalized","hospitalizedIncreased","from","routes","dataPointsAsync","fromOldDataSourceDataPoints","location_name","geoUrl","covidRaw","country_","counties_","countiesByName_","metros_","metrosByCounty_","Metro","reverse","fromDateStr","doses_admin_total","doses_shipped_total","doses_alloc_total","StayHomeOrder","testingAsync","clear","state1","parseFloat","xmin","xmax","ymin","ymax","xscale","yscale","scale","rotate","process","toLowerCase","getProjectionConfig_","state_","population_","Population","hospitalization_","hospitalization","ca_county_status","metroContainingCounty","center_","candidates","candidate","getDistance","serverdata","_fetchServerData","d1","getConfirmedByDate","d2","aspect","innerDiv","change","maybeHospitalization","testData","maybeHospitals","jumpTo","detailed","input","pushChangeTo","pop","AntSwitch","switchBase","transform","common","white","borderColor","border","thumb","boxShadow","track","checked","Switch","stroke","strokeWidth","small","MapNew","countyMapConfig","isZoomed","setTooltipContent","data-tip","projectionConfig","zoom","geography","geographies","geo","county_id","properties","COUNTYFP","colorFunction","rsmKey","onMouseEnter","onMouseLeave","selectionCallback","MapCountyGeneric","memo","setSelectedCounty","getCountyDataPoint","perCapita","skipCapita","colorFunctionPerMillion","toolip","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","marker","MapStates","stateForId","centroid","geoCentroid","cur","indexOf","textAnchor","subject","dx","dy","alignmentBaseline","MapStateGeneric","setSelectedState","mobileDiv","webDiv","DateRangeSlider","startDate","daysBetween","currentDate","defaultMaxValue","maxValue","minOffset","valueState","setValueState","sliderPropsShared","valueLabelFormat","marks","min","valueChanged","handleValueChange","gridProps","IOSSlider","valueLabelDisplay","StyledSlider","valueLabel","mark","Slider","iOSBoxShadow","active","rail","markActive","WorldContext","BasicDataComponent","died","confirmed_","active_","recovered_","died_","doublingInterval_","NameComponent","name_","PopulationComponent","Path","components","path","substr","string","level","pattern","parse","startsWith","MapWorld","world","center","pos","ISO_A2","getMultiple","english","MapWorldGeneric","gridPadding","minWidth","dateLabel","logColors","d3","clamp","ColorScale","domain","confirmedWorld","confirmedPerMillion","confirmedNew","confirmedNewWorld","confirmedNewPerMillion","confirmedNewPerMillionWorld","deathWorld","deathPerMillion","deathPerMillionWorld","timeToDouble","testsPerMillions","CountyNavButtons","ToggleButtonGroup","exclusive","ToggleButton","CountryButton","MapUS","setPerCapita","selectedCounty","subtabs","MapUSConfirmed","MapUSConfirmedNew","MapStateDeath","MapDaysToDouble","MapUSTestCoverage","MapWorldConfirmed","MapWorldConfirmedNew","MapWorldDeath","desired","getURLParam","isDataFetched","showPastNumDays","subtab","setSubtab","ChosenMap","buttonGroup","newvalue","dataFetched","setDataFetched","showPastDays","setShowPastDays","oldestMoment","useEffect","fetchAllUSCountyData","align","val","dailygrowth","dateOrLastValue","basic","dateOrLastValueNew","getConfirmedNewByDate","getDeathsByDate","baseToggleButtonStyles","logScale","scaleSymlog","marginBottom","slider","expand","cookieStaleWhen","verticalScale","AdvancedGraph","axisScales","setStateSticky","scales","expandedSerieses","expanded","covidspecial","s_for_display","showMovingAverage","nDayAverage","dropLastPoint","stipple","last2PointSeries","suffixLabel","derived","original","seriesInfo","expandSeriesesToMap","allSerieses","alignT0","flatten","yAxisFormatter","seriesesAndEnvelopes","allLabels","known","setKnown","initial","setSelected","includes","showControls","displays","newScale","newstate","spec","future","filterData","specs","vRefLines","hRefLines","defaultProps","useDisplayStyles","option","Display","useLegendStyles","fade","action","icon","Legend","style","Chart","ordered","YAxis0Color","YAxis1Color","rightAxis","idx","lines","gethRefLines","today","enddate","x1","x2","fillOpacity","getvRefAreas","valueFormatter","labelFormatter","dataKey","tickFormatter","yAxisId","tick","orientation","strokeDasharray","lineForSpec","specToElements","baseLine","type","isAnimationActive","dot","GraphCountyHospitalization","icu","icu_avail","icu_capacity","hrefs","GraphAllBedProjectionState","GraphAllBedProjectionUS","GraphHospitalization","setData","onVentilatorCurrently","maybeHospitalizationProjectionTabFor","graph","GraphVaccinationState","GraphVaccination","admin","vaccineAdminSeries","shipped","vaccineShippedSeries","alloc","vaccineAllocSeries","DailyConfirmedNew","dataSeries","setDataSeries","confirmDataSeriesAsync","doubling","dailyGrowth","dailyGrowthRate","setLabel","DailyDeathNew","deathDataSeriesAsync","AtAGlance","newconfirm","newdeath","serverityIndex","ChildrenAtAGlance","child","PerCapitaCompare","USData","setUSdata","all","colors","color_index","dataPoints","dataColumn","CovidCompare","GraphDaysToDoubleOverTime","mydata","setMydata","daysToDoubleTimeSeries","bottom","tickItem","verticalAlign","GraphGrowthRateOverTime","show2weeks","growthRateTimeSeries","handle2WeeksToggle","show30days","BasicGraphRecoveryAndDeath","handleLogScaleToggle","CaveatStateGraph","customtooltip","CustomTooltip","tested","positive","negative","totalPositve","totalTested","totalNegative","totalPending","payload","testsThatDay","positiveThatDay","negativeThatDay","pending","totalTestResults","formatYAxis","PostiveRate7Days","setSourceData","totalTestResults_series","totalPositve_series","positveDaily","testsDialy","rate","divide","GraphTestingWidget","widget","chart","GraphTestingWidget1","useAreaChart","testTotalArray","testPostives","testNegatives","neg","total_tests","total_positives","total_negatives","stackId","content","GraphDaily","confirmedSeries","setConfimedSeries","deathSeries","setDeathSeries","hosptializationCurrentlySeries","setHospitalizationCurrentSeries","hospitalizationCurrentlyAsync","RibbonBadge","badge","Badge","UnhookedGraphSection","getDesiredState","getUnvalidated","showRibbon","maybeDaily","factory","maybeTesting","maybeAncestor","ancestor","testing","maybeFindTesting","maybeTestingTabFor","maybeMap","maybeMapTabFor","maybeRecovery","maybeRecoveryAndDeathTabFor","headings","TabContent","desire","scrollButtons","badgeContent","tabContent","GraphSection","detailedToggles","descendingComparator","orderBy","stableSort","array","comparator","stabilizedThis","el","order","getComparator","EnhancedTableHead","headCells","onRequestSort","TableHead","TableRow","headCell","TableCell","numeric","sortDirection","TableSortLabel","property","ListAllStates","ListAllStatesPerCapita","ListAllStatesTesting","prepareDataForDisplay","newrow","newEntry","statename","partsPerMil","deathsPerMil","AllStateListCapita","setOrder","setOrderBy","extendlist","Table","disablePadding","TableBody","scope","AllStateListRender","newcolumn","prepareStatesTestingDataForDisplay","stateCode","getStateNameByStateCode","positiveNumber","positiveRate","negativeNumber","negativeRate","testCoverage","AllStateListTesting","testingAllAsync","states_data","record","NEGATIVE_INFINITY","stateObject","desc","Helmet","PageUS","default_county_info","NearbyCounties","allNearby","nearby","countylist","ListCountiesForMetro","positiveCountiesIn","CountiesForStateWidget","ListStateCountiesCapita","prepCountyDataForDisplay","CountyListRender","CountyListRenderCapita","PageState","topcounty","DetailCaseListWidget","HOSPITAL_NAME","localeCompare","HQ_CITY","NUM_LICENSED_BEDS","NUM_STAFFED_BEDS","NUM_ICU_BEDS","snapshotToArray","snapshot","returnArr","childSnapshot","db","collection","where","querySnapshot","CountyHospitalsWidget","county_hospitals","setHospitals","fetchCountyHospitals","CA_statusMap","text","CA","CountySpecific","textStyle","PageCounty","BonusDashboards","PageMetro","metroByStatesForId","def","any","ChildrenComponent","children_","DivisionTypesComponent","divisions","divisions_","GeographyComponent","position_","ProjectionsComponent","SearchIndexComponent","termsToNames","namesToPaths","termsToNames_","namesToPaths_","lettersToTerms_","term","first","terms","trim","whitelist","matchTerm_","opt_whitelist","matchingTerms","matchingNames","possibleTerm","World","componentsByPath","frontier","componentType","ensure_","asStr","componentTypes","constructor","haveTarget","fetched","fetch","delete","dataKeys","cachedData","SEARCH_INDEX_PATH","BasicEarthSource","baseData","have","equals","buildSearchIndex_","matches","ourComponents","basicComponentsFor_","projectionsComponentsFor_","division","divisionUnder","divisionRoot","childrenPaths","childrenComponents","childPath","fromTimestamps","projections","namesToPath","ancestorTerms","fullName","divisionPath","passTerms","singular","plural","shape","searchIcon","pointerEvents","divider","iconButton","resultsContainer","userSelect","resultsList","outline","lineHeight","RESULT_HEIGHT","textOverflow","whiteSpace","SearchInput","setResults","resultRenderer","onChoice","ClickAwayListener","onClickAway","InputBase","placerholder","onGeolocate","Divider","disableHeight","rowCount","rowHeight","rowRenderer","appBar","nameAndSearch","appName","donations","light","expander","socialButtons","socialButton","actions","flexShrink","AppBar","NavigatingSearchInput","locationLookup","allMatches","Discussion","setSource","scrollPane","hide","squishText","hyphens","SortableTable","columns","rows","defaultSortColumn","orderingBy","setOrderingBy","defaultDirection","setDirection","sortFn","emptyLast","preferred","compareOn","attempt","compareStable","sorted","createUpdateSort","opposite","hideSortIcon","shortLabel","short","contextKey","renderShortNumber","valueFor","ak","bk","DivisionTableMain","picked","pickLowest","quantifier","lastValue","newConfirmed","confirmedChange","DivisionTableCapita","deathsPerMillion","activePerMillion","recoveredPerMillion","DivisionTableDaysToDouble","confirmedDoublingInterval","deathsDoublingInterval","recoveredDoublingInterval","DivisionTab","PageRegion","parentDivision","showNearby","showMap","types","theirGeography","distance","useTitleStyles","noOverflow","node","parentLink","numbers","number","borderLeft","borderTop","confirmNumbers","deathsNumbers","main1GTag","WilsonTitle","tagclasses","names","getNames","parentCursor","parentName","useSummaryStyle","LocationSummaryTitle","useGraphStyles","comparisons","comparisonSearch","hover","chip","Graphs","comparingWith","setComparingWith","Chip","onDelete","copied","splice","removeComparison","DailyChangeGraph","DailyTotalGraph","DoublingGraph","Graph","isCompareMode","setScale","serieseDef","seriesGen","fitVirusCV19Prediction","dropFirst","pointLargerEqualThan","graphSeries","compareSeriesSelector","colorIndex","Page404","bgcolor","compactTheme","createMuiTheme","overrides","MuiTableCell","sizeSmall","MuiToggleButton","MainApp","earth","setEarth","setCountry","myCounty","setMyCounty","nonUSCountry","setNonUSCountry","ROW_special","createBasicEarthAsync","fetchApproximatePoliticalLocation","Provider","SafeRoutes","UnhookedSafeRoutes","successStateFor","errored","info","exact","status","App","ThemeProvider","Boolean","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5c12df2.chunk.js","sourcesContent":["const { CountyInfo } = require('./CountyInfo.js');\nconst { Util } = require('./Util.js');\n\nexports.CountyInfo = CountyInfo;\nexports.Util = Util;","const CountyGeoData = require('../src/data/county_gps.json');\n\nfunction findCountyStrict(state_two_letter, countyname) {\n  return CountyGeoData.find(s => s.State == state_two_letter && s.County === countyname);\n}\n\nfunction getFipsFromStateCountyName(state_two_letter, countyname) {\n\n  const methods = [\n    () => findCountyStrict(state_two_letter, countyname),\n    () => findCountyStrict(state_two_letter, countyname.replace(\" County\", \"\")),\n    () => findCountyStrict(state_two_letter, countyname.replace(\" Parish\", \"\")),\n    () => findCountyStrict(state_two_letter, countyname.replace(\" city\", \"\")),\n    () => findCountyStrict(state_two_letter, countyname.replace(\" city\", \" City\")),\n    () => findCountyStrict(state_two_letter, countyname.replace(\" City\", \"\")),\n    () => findCountyStrict(state_two_letter, countyname.replace(\" Borough\", \"\")),\n  ];\n\n\n  let county;\n  for (const method of methods) {\n    try {\n      county = method();\n      if (county)\n        break;\n    } catch (err) {\n      continue;\n    }\n  }\n  if (county) {\n    return county.FIPS.padStart(5, \"0\");\n  }\n  return null;\n}\n\nconst STATE_TWO_LETTER_TO_POPULATIONS = {\n  \"CA\": 39937489,\n  \"TX\": 29472295,\n  \"FL\": 21992985,\n  \"NY\": 19440469,\n  \"PA\": 12820878,\n  \"IL\": 12659682,\n  \"OH\": 11747694,\n  \"GA\": 10736059,\n  \"NC\": 10611862,\n  \"MI\": 10045029,\n  \"NJ\": 8936574,\n  \"VA\": 8626207,\n  \"WA\": 7797095,\n  \"AZ\": 7378494,\n  \"MA\": 6976597,\n  \"TN\": 6897576,\n  \"IN\": 6745354,\n  \"MO\": 6169270,\n  \"MD\": 6083116,\n  \"WI\": 5851754,\n  \"CO\": 5845526,\n  \"MN\": 5700671,\n  \"SC\": 5210095,\n  \"AL\": 4908621,\n  \"LA\": 4645184,\n  \"KY\": 4499692,\n  \"OR\": 4301089,\n  \"OK\": 3954821,\n  \"CT\": 3563077,\n  \"UT\": 3282115,\n  \"IA\": 3179849,\n  \"NV\": 3139658,\n  \"AR\": 3038999,\n  \"PR\": 3032165,\n  \"MS\": 2989260,\n  \"KS\": 2910357,\n  \"NM\": 2096640,\n  \"NE\": 1952570,\n  \"ID\": 1826156,\n  \"WV\": 1778070,\n  \"HI\": 1412687,\n  \"NH\": 1371246,\n  \"ME\": 1345790,\n  \"MT\": 1086759,\n  \"RI\": 1056161,\n  \"DE\": 982895,\n  \"SD\": 903027,\n  \"ND\": 761723,\n  \"AK\": 734002,\n  \"DC\": 720687,\n  \"VT\": 628061,\n  \"WY\": 567025,\n  \"GU\": 164229,\n  \"VI\": 107268,\n  \"AS\": 55641,\n  \"MP\": 55144,\n};\nconst STATE_FIPS_TO_NAME = {\n  \"10\": \"Delaware\",\n  \"11\": \"District of Columbia\",\n  \"12\": \"Florida\",\n  \"13\": \"Georgia\",\n  \"15\": \"Hawaii\",\n  \"16\": \"Idaho\",\n  \"17\": \"Illinois\",\n  \"18\": \"Indiana\",\n  \"19\": \"Iowa\",\n  \"20\": \"Kansas\",\n  \"21\": \"Kentucky\",\n  \"22\": \"Louisiana\",\n  \"23\": \"Maine\",\n  \"24\": \"Maryland\",\n  \"25\": \"Massachusetts\",\n  \"26\": \"Michigan\",\n  \"27\": \"Minnesota\",\n  \"28\": \"Mississippi\",\n  \"29\": \"Missouri\",\n  \"30\": \"Montana\",\n  \"31\": \"Nebraska\",\n  \"32\": \"Nevada\",\n  \"33\": \"New Hampshire\",\n  \"34\": \"New Jersey\",\n  \"35\": \"New Mexico\",\n  \"36\": \"New York\",\n  \"37\": \"North Carolina\",\n  \"38\": \"North Dakota\",\n  \"39\": \"Ohio\",\n  \"40\": \"Oklahoma\",\n  \"41\": \"Oregon\",\n  \"42\": \"Pennsylvania\",\n  \"44\": \"Rhode Island\",\n  \"45\": \"South Carolina\",\n  \"46\": \"South Dakota\",\n  \"47\": \"Tennessee\",\n  \"48\": \"Texas\",\n  \"49\": \"Utah\",\n  \"50\": \"Vermont\",\n  \"51\": \"Virginia\",\n  \"53\": \"Washington\",\n  \"54\": \"West Virginia\",\n  \"55\": \"Wisconsin\",\n  \"56\": \"Wyoming\",\n  \"01\": \"Alabama\",\n  \"02\": \"Alaska\",\n  \"04\": \"Arizona\",\n  \"05\": \"Arkansas\",\n  \"06\": \"California\",\n  \"08\": \"Colorado\",\n  \"09\": \"Connecticut\",\n  \"72\": \"Puerto Rico\",\n  \"66\": \"Guam\",\n  \"78\": \"Virgin Islands\",\n  \"60\": \"American Samoa\",\n  \"69\": \"Northern Mariana Islands\",\n  \"88\": \"Grand Princess\",\n  \"96\": \"US Military\",\n  \"97\": \"Federal Prison\",\n  \"99\": \"Diamond Princess\",\n};\n\nconst fipsToState =\n{\n  \"96\": {\n    \"abbreviation\": \"AY\",\n    \"name\": \"US Military\"\n  },\n  \"97\": {\n    \"abbreviation\": \"FP\",\n    \"name\": \"Federal Prison\"\n  },\n  \"88\": {\n    \"abbreviation\": \"GP\",\n    \"name\": \"Grand Princess\"\n  },\n  \"99\": {\n    \"abbreviation\": \"DP\",\n    \"name\": \"Diamond Princess\"\n  },\n  \"01\": {\n    \"abbreviation\": \"AL\",\n    \"name\": \"Alabama\"\n  },\n  \"02\": {\n    \"abbreviation\": \"AK\",\n    \"name\": \"Alaska\"\n  },\n  \"03\": {\n    \"abbreviation\": \"AS\",\n    \"name\": \"American Samoa\"\n  },\n  \"04\": {\n    \"abbreviation\": \"AZ\",\n    \"name\": \"Arizona\"\n  },\n  \"05\": {\n    \"abbreviation\": \"AR\",\n    \"name\": \"Arkansas\"\n  },\n  \"06\": {\n    \"abbreviation\": \"CA\",\n    \"name\": \"California\"\n  },\n  \"07\": {\n    \"abbreviation\": \"CZ\",\n    \"name\": \"Canal Zone\"\n  },\n  \"08\": {\n    \"abbreviation\": \"CO\",\n    \"name\": \"Colorado\"\n  },\n  \"09\": {\n    \"abbreviation\": \"CT\",\n    \"name\": \"Connecticut\"\n  },\n  \"10\": {\n    \"abbreviation\": \"DE\",\n    \"name\": \"Delaware\"\n  },\n  \"11\": {\n    \"abbreviation\": \"DC\",\n    \"name\": \"District Of Columbia\"\n  },\n  \"12\": {\n    \"abbreviation\": \"FL\",\n    \"name\": \"Florida\"\n  },\n  \"13\": {\n    \"abbreviation\": \"GA\",\n    \"name\": \"Georgia\"\n  },\n  \"14\": {\n    \"abbreviation\": \"GU\",\n    \"name\": \"Guam\"\n  },\n  \"15\": {\n    \"abbreviation\": \"HI\",\n    \"name\": \"Hawaii\"\n  },\n  \"16\": {\n    \"abbreviation\": \"ID\",\n    \"name\": \"Idaho\"\n  },\n  \"17\": {\n    \"abbreviation\": \"IL\",\n    \"name\": \"Illinois\"\n  },\n  \"18\": {\n    \"abbreviation\": \"IN\",\n    \"name\": \"Indiana\"\n  },\n  \"19\": {\n    \"abbreviation\": \"IA\",\n    \"name\": \"Iowa\"\n  },\n  \"20\": {\n    \"abbreviation\": \"KS\",\n    \"name\": \"Kansas\"\n  },\n  \"21\": {\n    \"abbreviation\": \"KY\",\n    \"name\": \"Kentucky\"\n  },\n  \"22\": {\n    \"abbreviation\": \"LA\",\n    \"name\": \"Louisiana\"\n  },\n  \"23\": {\n    \"abbreviation\": \"ME\",\n    \"name\": \"Maine\"\n  },\n  \"24\": {\n    \"abbreviation\": \"MD\",\n    \"name\": \"Maryland\"\n  },\n  \"25\": {\n    \"abbreviation\": \"MA\",\n    \"name\": \"Massachusetts\"\n  },\n  \"26\": {\n    \"abbreviation\": \"MI\",\n    \"name\": \"Michigan\"\n  },\n  \"27\": {\n    \"abbreviation\": \"MN\",\n    \"name\": \"Minnesota\"\n  },\n  \"28\": {\n    \"abbreviation\": \"MS\",\n    \"name\": \"Mississippi\"\n  },\n  \"29\": {\n    \"abbreviation\": \"MO\",\n    \"name\": \"Missouri\"\n  },\n  \"30\": {\n    \"abbreviation\": \"MT\",\n    \"name\": \"Montana\"\n  },\n  \"31\": {\n    \"abbreviation\": \"NE\",\n    \"name\": \"Nebraska\"\n  },\n  \"32\": {\n    \"abbreviation\": \"NV\",\n    \"name\": \"Nevada\"\n  },\n  \"33\": {\n    \"abbreviation\": \"NH\",\n    \"name\": \"New Hampshire\"\n  },\n  \"34\": {\n    \"abbreviation\": \"NJ\",\n    \"name\": \"New Jersey\"\n  },\n  \"35\": {\n    \"abbreviation\": \"NM\",\n    \"name\": \"New Mexico\"\n  },\n  \"36\": {\n    \"abbreviation\": \"NY\",\n    \"name\": \"New York\"\n  },\n  \"37\": {\n    \"abbreviation\": \"NC\",\n    \"name\": \"North Carolina\"\n  },\n  \"38\": {\n    \"abbreviation\": \"ND\",\n    \"name\": \"North Dakota\"\n  },\n  \"39\": {\n    \"abbreviation\": \"OH\",\n    \"name\": \"Ohio\"\n  },\n  \"40\": {\n    \"abbreviation\": \"OK\",\n    \"name\": \"Oklahoma\"\n  },\n  \"41\": {\n    \"abbreviation\": \"OR\",\n    \"name\": \"Oregon\"\n  },\n  \"42\": {\n    \"abbreviation\": \"PA\",\n    \"name\": \"Pennsylvania\"\n  },\n  \"43\": {\n    \"abbreviation\": \"PR\",\n    \"name\": \"Puerto Rico\"\n  },\n  \"44\": {\n    \"abbreviation\": \"RI\",\n    \"name\": \"Rhode Island\"\n  },\n  \"45\": {\n    \"abbreviation\": \"SC\",\n    \"name\": \"South Carolina\"\n  },\n  \"46\": {\n    \"abbreviation\": \"SD\",\n    \"name\": \"South Dakota\"\n  },\n  \"47\": {\n    \"abbreviation\": \"TN\",\n    \"name\": \"Tennessee\"\n  },\n  \"48\": {\n    \"abbreviation\": \"TX\",\n    \"name\": \"Texas\"\n  },\n  \"49\": {\n    \"abbreviation\": \"UT\",\n    \"name\": \"Utah\"\n  },\n  \"50\": {\n    \"abbreviation\": \"VT\",\n    \"name\": \"Vermont\"\n  },\n  \"51\": {\n    \"abbreviation\": \"VA\",\n    \"name\": \"Virginia\"\n  },\n  \"52\": {\n    \"abbreviation\": \"VI\",\n    \"name\": \"Virgin Islands\"\n  },\n  \"53\": {\n    \"abbreviation\": \"WA\",\n    \"name\": \"Washington\"\n  },\n  \"54\": {\n    \"abbreviation\": \"WV\",\n    \"name\": \"West Virginia\"\n  },\n  \"55\": {\n    \"abbreviation\": \"WI\",\n    \"name\": \"Wisconsin\"\n  },\n  \"56\": {\n    \"abbreviation\": \"WY\",\n    \"name\": \"Wyoming\"\n  },\n  \"72\": {\n    \"abbreviation\": \"PR\",\n    \"name\": \"Puerto Rico\",\n  },\n  \"66\": {\n    \"abbreviation\": \"GU\",\n    \"name\": \"Guam\",\n  },\n  \"78\": {\n    \"abbreviation\": \"VI\",\n    \"name\": \"Virgin Islands\",\n  },\n  \"60\": {\n    \"abbreviation\": \"AS\",\n    \"name\": \"American Samoa\",\n  },\n  \"69\": {\n    \"abbreviation\": \"MP\",\n    \"name\": \"Northern Mariana Islands\",\n  },\n}\n\nconst STATE_SHORTNAME_TO_FIPS = (() => {\n  return Object.keys(fipsToState).reduce((m, k) => {\n    m[fipsToState[k].abbreviation] = k;\n    return m;\n  }, {});\n})();\n\nconst STATE_Name_To_FIPS = (() => {\n  return Object.keys(STATE_FIPS_TO_NAME).reduce((m, k) => {\n    m[STATE_FIPS_TO_NAME[k]] = k\n    return m;\n  }, {});\n})();\n\nfunction getStatePopulation(two_letter_state_name) {\n  return STATE_TWO_LETTER_TO_POPULATIONS[two_letter_state_name];\n}\n\nfunction getStateNameFromFips(state_fips) {\n  return STATE_FIPS_TO_NAME[state_fips];\n}\n\nfunction getStateAbbreviationFromFips(state_fips) {\n  // console.log(state_fips)\n  if (state_fips === '00') {\n    return \"NN\";\n  }\n  return fipsToState[state_fips].abbreviation;\n}\n\nfunction getFipsFromStateName(state_name) {\n  return STATE_Name_To_FIPS[state_name];\n}\n\nfunction getFipsFromStateShortName(state_name_short) {\n  return STATE_SHORTNAME_TO_FIPS[state_name_short];\n}\n\nfunction getAllStateFips() {\n  return Object.keys(STATE_FIPS_TO_NAME);\n}\n\nconst CountyInfo = {\n  getStatePopulation,\n  getStateNameFromFips,\n  getStateAbbreviationFromFips,\n  getFipsFromStateName,\n  getFipsFromStateShortName,\n  getAllStateFips,\n  getFipsFromStateCountyName,\n}\n\nexports.CountyInfo = CountyInfo;\n","\nconst moment = require(\"moment\");\nfunction pad(n) { return n < 10 ? '0' + n : n }\n\n//    3/26/20 ===> 03/26/2020\nfunction normalize_date(k) {\n  let p = k.split(\"/\");\n  if (p.length !== 3) {\n    return null;\n  }\n  let m = pad(parseInt(p[0]));\n  let d = pad(parseInt(p[1]));\n  let y = p[2];\n  if (y.length === 2) {\n    y = \"20\" + y;\n  }\n  return `${m}/${d}/${y}`;\n}\n\nfunction getValueFromLastDate(v, comment) {\n  if (!v || Object.keys(v).length === 0) {\n    return { num: 0, newnum: 0 }\n  }\n  if (Object.keys(v).length === 1) {\n    let ret = {\n      num: Object.values(v)[0],\n      newnum: Object.values(v)[0],\n    }\n    return ret;\n  }\n  let nv = Object.keys(v).sort((a, b) => moment(b, \"MM/DD/YYYY\").toDate() - moment(a, \"MM/DD/YYYY\").toDate());\n\n  let last = v[nv[0]]\n  let newnum = v[nv[0]] - v[nv[1]];\n  if (newnum < 0) {\n    newnum = 0;\n  }\n  return { num: last, newnum: newnum };\n}\n\nfunction mergeTwoMapValues(m1, m2) {\n  for (let i in m2) {\n    let a = m1[i];\n    if (isNaN(a)) {\n      a = 0;\n    }\n    if (!isNaN(m2[i])) {\n      a += m2[i];\n    }\n    m1[i] = a;\n  }\n}\n\nconst Util = {\n  normalize_date,\n  getValueFromLastDate,\n  mergeTwoMapValues,\n}\n\nexports.Util = Util;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles(theme => ({\n    grow: {\n        flexGrow: 1,\n    },\n    title: {\n        display: 'block',\n        color: '#FFFFFF',\n        background: '#00aeef',\n        padding: 25,\n        margin: 25,\n        borderRadius: 20,\n\n    },\n    subtitle: {\n        display: 'block',\n        color: '#00aeef',\n        padding: 5,\n        margin: 5,\n    },\n    rootSplash: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"60vh\",\n        flexGrow: 1,\n    },\n}));\n\nconst Splash = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.rootSplash}>\n            <div>\n                <Toolbar>\n                    <div className={classes.grow}> </div>\n                    <Typography className={classes.title} variant=\"h2\" noWrap>\n                        Keep Calm\n        </Typography>\n                    <div className={classes.grow}> </div>\n                </Toolbar>\n                <Toolbar>\n                    <div className={classes.grow}> </div>\n                    <Typography className={classes.subtitle} variant=\"h5\" noWrap>\n                        #Wear_A_Mask\n          </Typography>\n                    <div className={classes.grow}> </div>\n                </Toolbar>\n                <Toolbar>\n                    <div className={classes.grow}> </div>\n                    <Typography className={classes.subtitle} variant=\"h5\" noWrap>\n                        this too shall pass\n          </Typography>\n                    <div className={classes.grow}> </div>\n                </Toolbar>\n            </div>\n        </div>);\n}\n\nexport { Splash }\n","const firebase = require('firebase/app');\nrequire(\"firebase/firestore\");\nrequire(\"firebase/analytics\");\nconst firebaseConfig = require('./firebaseConfig.json');\nfirebase.initializeApp(firebaseConfig);\nconst logger = firebase.analytics();\nconst firedb = firebase.firestore();\n\nexport { logger, firedb, firebase }\n","export default {\n  US: \"United States of America\",\n}\n","import { logger } from \"./AppModule\"\nimport Countries from \"./models/Countries\"\n\nconst Cookies = require(\"js-cookie\");\nconst superagent = require(\"superagent\");\n\nconst firebaseConfig = require('./firebaseConfig.json');\n\nconst cookieId = \"covidLocation\"\n\nconst defaultValue = {\n  location: {\n    country: Countries.US,\n    state: \"CA\",\n    county: \"Santa Clara\",\n  },\n  coordinates: {\n    longitude: -73.968723,\n    latitude: 40.775191,\n  },\n}\n\n// Gets user's country, and if in US and availble, their county/state\nexport async function fetchPrecisePoliticalLocation() {\n  const location = await fetchLocationUsingMethods([\n    () => askForExactLocation(),\n    () => fetchApproxIPLocationGoogle(firebaseConfig.apiKey),\n  ]);\n  Cookies.set(cookieId, location, {\n    expires: 1000,\n  });\n  return location;\n}\n\n// Uses IP address to get country, and if availble, approximate country/state\nexport async function fetchApproximatePoliticalLocation() {\n  const saved = getLocationFromCookie();\n  if (saved) {\n    return saved;\n  }\n\n  const location =  await fetchLocationUsingMethods([\n    () => fetchApproxIPLocationIPDataCo(firebaseConfig.ipdataco_key),\n    () => fetchApproxIPLocationIPDataCo(firebaseConfig.ipdataco_key2),\n    () => fetchApproxIPLocationIPDataCo(firebaseConfig.ipdataco_key3),\n    () => fetchApproxIPLocationIPGEOLOCATION(),\n    () => fetchApproxIPLocationGoogle(),\n  ]);\n\n  Cookies.set(cookieId, location, {\n    expires: 1000,\n  });\n  return location;\n}\n\nasync function fetchLocationUsingMethods(methods) {\n  const safeMethods = methods.concat([\n    () => coordinateFindingError(),\n  ]);\n\n  let coords;\n  for (const method of safeMethods) {\n    try {\n      coords = await method();\n      break;\n    } catch (err) {\n      continue;\n    }\n  }\n  return await getPoliticalLocationFromCoordinates(coords);\n}\n\nasync function getPoliticalLocationFromCoordinates(coordinates) {\n  for (const method of [\n    () => getCensusLocationFromCoordinates(coordinates),\n    () => getGlobalLocationFromCoordinates(coordinates, firebaseConfig.apiKey),\n    () => locationFindingError(),\n  ]) {\n    const result = await method();\n    if (result) {\n      return result;\n    }\n  }\n  return undefined;\n}\n\nasync function getCensusLocationFromCoordinates(coordinates) {\n  return await superagent\n    .get(\"https://geo.fcc.gov/api/census/area\")\n    .query({\n      lat: coordinates.latitude,\n      lon: coordinates.longitude,\n      format: \"json\",\n    }).then(res => {\n      const c = res.body.results[0].county_name;\n      const s = res.body.results[0].state_code;\n      const stateName = res.body.results[0].state_name;\n      logger.logEvent(\"CensusCountyLookupSuccess\", {\n        location: coordinates,\n        country: Countries.US,\n        county: c,\n        state: s,\n        stateName: stateName,\n      });\n      return {\n        country: Countries.US,\n        county: c,\n        state: s,\n        stateName: stateName,\n      };\n    })\n    .catch(err => {\n      logger.logEvent(\"CensusCountyLookupFailed\", coordinates);\n      return null;\n    });\n}\n\nasync function getGlobalLocationFromCoordinates(coordinates, apiKey) {\n  // some providers have countries already set.\n  if (coordinates.country_name) {\n    return {\n      country: coordinates.country_name,\n    }\n  }\n\n  const googleMapsEndpoint = `https://maps.googleapis.com/maps/api/geocode/json`\n    + `?latlng=${coordinates.latitude},${coordinates.longitude}`\n    + `&result_type=country`\n    + `&key=${apiKey}`;\n  return await superagent\n    .get(googleMapsEndpoint)\n    .then(res => {\n      const results = res.body.results\n      if (!results || results.length < 1) {\n        return null;\n      }\n      const address_components = results[0].address_components;\n      if (!address_components || address_components.length < 1) {\n        return null;\n      }\n      const countryName = address_components[0].long_name;\n      console.log(results)\n      return {\n        country: countryName\n      }\n    })\n    .catch(err => {\n      logger.logEvent(\"GoogleMapsPoliticalLocationLookupFailed\", coordinates);\n      return null;\n    });\n}\n\nfunction locationFindingError() {\n  logger.logEvent(\"LocationFromCoordNotFoundAfterAPI\");\n  return defaultValue.location;\n}\n\nfunction askForExactLocation() {\n  return new Promise((resolve, reject) => {\n    navigator.geolocation.getCurrentPosition(\n      position => resolve({\n        latitude: position.coords.latitude,\n        longitude: position.coords.longitude,\n      }),\n      error => reject(error)\n    );\n  });\n}\n\nfunction getLocationFromCookie() {\n  const cookie = Cookies.getJSON(cookieId);\n  if (cookie && (cookie.country || cookie.county) ) {\n    logger.logEvent(\"LocationFoundInCookie\", cookie);\n    return cookie;\n  } else {\n    return null;\n  }\n}\n\nasync function fetchApproxIPLocationGoogle(key) {\n  return await superagent\n    .post(`https://www.googleapis.com/geolocation/v1/geolocate?key=${firebaseConfig.apiKey}`)\n    .then(res => {\n      console.log(res);\n      return {\n        longitude: res.body.location.lng,\n        latitude: res.body.location.lat,\n      }\n    });\n}\n\n// this one is not very good - while at Alameda, it says it's in santa clara, I guess\n// with google we are paying for precision.\n\nasync function fetchApproxIPLocationIPGEOLOCATION() {\n  const url = `https://api.ipgeolocation.io/ipgeo?apiKey=${firebaseConfig.ipgeolocation_key}`;\n  return await superagent\n    .get(url)\n    .then(res => {\n      if (!res.body.longitude) {\n        throw new Error('Bad result');\n      }\n      console.log(\"ipgeolocation\")\n      console.log(res.body);\n      return {\n        longitude: res.body.longitude,\n        latitude: res.body.latitude,\n        country_code: res.body.country_code2,\n        country_name: res.body.country_name,\n        region: res.body.state_prov,\n        region_code: res.body.region_code\n      };\n    });\n}\n\nasync function fetchApproxIPLocationIPDataCo(apikey) {\n  const url = `https://api.ipdata.co/?api-key=${apikey}`;\n  return await superagent\n    .get(url)\n    .then(res => {\n      if (!res.body || !res.body.longitude) {\n        throw new Error('Bad result');\n      }\n      console.log(\"ipgdata\")\n      console.log(res.body);\n      return {\n        longitude: res.body.longitude,\n        latitude: res.body.latitude,\n        country_code: res.body.country_code,\n        country_name: res.body.country_name,\n        region: res.body.region,\n        region_code: res.body.region_code,\n      };\n    });\n}\n\nfunction coordinateFindingError() {\n  logger.logEvent(\"LocationNoFoundAfterAPI\");\n  return defaultValue.coordinates;\n}\n","import React from 'react';\n\nexport const CountryContext = React.createContext(undefined);\n","import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom'\nimport { withStyles } from \"@material-ui/core/styles\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={1}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `nav-tab-${index}`,\n        'aria-controls': `nav-tabpanel-${index}`,\n    };\n}\n\nconst LinkTab = withStyles((theme) => ({\n    root: {\n        textTransform: 'none',\n        // minWidth: 72,\n        fontWeight: theme.typography.fontWeightRegular,\n        // marginRight: theme.spacing(4),\n        background: \"#c3c3c3\",\n        borderRadius: 25,\n        margin: 2,\n        minHeight: 0,\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:hover': {\n            color: '#40a9ff',\n            opacity: 1,\n        },\n        '&$selected': {\n            color: '#0090ff',\n            background: \"#ffffff\",\n            fontWeight: theme.typography.fontWeightBold,\n        },\n        '&:focus': {\n            color: '#00a9ff',\n        },\n    },\n    selected: {},\n}))((props) => <Tab disableRipple {...props} />);\n\n\nconst MyTabs = (props) => {\n    const history = useHistory();\n\n    const tabs = props.tabs;\n    const labels = props.labels;\n    let selectedTabIdx = 0;\n    if (history) {\n        // e.g. {'graph': 'cases', 'table': 'testing'}\n        let searchParams = new URLSearchParams(history.location.search);\n        // e.g. 'testing'\n        let selectedTabName = searchParams.get(props.urlQueryKey);\n        selectedTabIdx = props.urlQueryValues.findIndex(name => name === selectedTabName);\n        if (selectedTabIdx === -1) {\n            // The active tab is not specified in the url query\n            selectedTabIdx = 0;\n        }\n    }\n\n    const [tabvalue, setTabvalue] = React.useState(selectedTabIdx);\n\n    const handleChange = (event, newValue) => {\n        setTabvalue(newValue);\n        // Change url without reloading the page\n        let searchParams = new URLSearchParams(history.location.search);\n        searchParams.set(props.urlQueryKey, props.urlQueryValues[newValue]);\n        history.location.search = searchParams.toString();\n        history.push(history.location)\n    }\n    const labelcomp = labels.map((l, c) =>\n        <LinkTab label={l} key={c} {...a11yProps(c)} />\n    );\n    const tabscomp = tabs.map((tab, d) =>\n        <TabPanel value={tabvalue} index={d} key={d}>\n            {tab}\n        </TabPanel>\n    );\n    return <>\n        <Tabs\n            variant=\"scrollable\"\n            value={tabvalue}\n            onChange={handleChange}\n            aria-label=\"\"\n        >\n            {labelcomp}\n        </Tabs>\n        {tabscomp}\n    </>;\n}\n\nexport { MyTabs }\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    sectionHeader: {\n        \"border-left\": `.1rem solid ${theme.palette.secondary.main}`,\n        \"border-bottom\": \".1rem solid #f3f3f3\",\n        margin: 3,\n        padding: 3,\n    }\n}));\n\nconst SectionHeader = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.sectionHeader}>\n            {props.children}\n        </div>\n    );\n}\n\n\nexport { SectionHeader }\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MyTabs } from \"./MyTabs.js\"\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport { withRouter } from 'react-router-dom'\nimport Avatar from '@material-ui/core/Avatar';\n\nconst MentalHealthResources = require(\"./data/mentalhealth.json\");\n\nconst useStyles = makeStyles(theme => ({\n    inline: {\n        display: 'inline',\n        // fontWeight: \"fontWeightBold\",\n    },\n}));\n\nconst ResourceSectionOne = (props) => {\n    const classes = useStyles();\n    return <List>\n        {props.tab.map((item, i) =>\n            <ListItem onClick={() => { window.open(item.Url) }} key={i}>\n                <ListItemAvatar>\n                    <Avatar variant=\"rounded\" src={item.ThumbnailURL} />\n                </ListItemAvatar>\n                <ListItemText\n                    primary={item.Title}\n                    secondary={\n                        <React.Fragment>\n                            <Typography\n                                component=\"span\"\n                                variant=\"body2\"\n                                className={classes.inline}\n                                color=\"textPrimary\"\n                            >\n                                {item.Subtitle}\n                            </Typography>\n                        </React.Fragment>\n                    }\n                />\n            </ListItem>\n        )}\n    </List >;\n};\nconst MentalHealthResourceSection = withRouter((props) => {\n    const resmap = MentalHealthResources.reduce((m, item) => {\n        let section = m[item.Tab];\n        if (!section) {\n            section = [];\n        }\n        section.push(item);\n        m[item.Tab] = section;\n        return m;\n    }, {})\n    const tablist = [\n        <ResourceSectionOne tab={resmap[1]} />,\n        <ResourceSectionOne tab={resmap[2]} />,\n        <ResourceSectionOne tab={resmap[3]} />,\n    ]\n    let tabs = <MyTabs\n        labels={[\"Meditation\", `Stress Mgmt`, `Education/Kids`]}\n        urlQueryKey=\"resources\"\n        urlQueryValues={['medication', 'stressmgmt', 'kids']}\n        tabs={tablist}\n    />;\n    return tabs;\n});\nexport { MentalHealthResourceSection }\n","import { useState } from 'react'\n\nvar shortNumber = require('short-number');\nconst Cookies = require(\"js-cookie\");\nconst states = require('us-state-codes');\nconst moment = require(\"moment\");\n\nfunction myShortNumber(n) {\n  if (!n) {\n    return \"0\";\n  }\n  if (isNaN(n)) {\n    n = n.replace(/,/g, '');\n    n = Number(n);\n  } else if (!isFinite(n)) {\n    return \"∞\";\n  }\n  return shortNumber(n);\n}\n\nfunction filterDataToRecent(data, numDays) {\n  const cutoff = moment().subtract(numDays + 1, 'days')\n  return data.filter(d => {\n    return moment(d.fulldate, \"MM/DD/YYYY\").isAfter(cutoff)\n  });\n}\n\nfunction getOldestMomentInData(data, evaluationFunc = (data) => true) {\n  let currentOldest = moment();\n  data.forEach(element => {\n    if (evaluationFunc(element)) {\n      const elementMoment = moment(element.fulldate, \"MM/DD/YYYY\")\n      currentOldest = currentOldest.isAfter(elementMoment) ? elementMoment : currentOldest\n    }\n  })\n  return currentOldest\n}\n\nfunction makeCountyFromDescription(myCountry, stateCountyDescription) {\n  const state = myCountry.stateForTwoLetterName(stateCountyDescription.state);\n  return state.countyForName(stateCountyDescription.county);\n}\n\nfunction myGoodWholeNumber(n) {\n  if (Number.isNaN(n) || !isFinite(n)) {\n    return \"-\";\n  }\n  return n.toFixed(0);\n}\n\n\nfunction myGoodShortNumber(n) {\n  if (Number.isNaN(n) || !isFinite(n)) {\n    return \"-\";\n  }\n  return myShortNumber(n);\n}\n\nfunction CookieGetLastCounty() {\n  let county_info = Cookies.getJSON(\"LastCounty\");\n  return county_info;\n}\n\nfunction getDefaultCounty() {\n  let county_info = CookieGetLastCounty();\n  if (county_info) {\n    return county_info;\n  }\n  return {\n    county: \"Santa Clara\",\n    state: \"CA\",\n  }\n}\nfunction getDefaultCountyForState(state) {\n  let county_info = CookieGetLastCounty();\n  if (county_info) {\n    if (county_info.state === state.twoLetterName) {\n      return state.countyForName(county_info.county);\n    }\n  }\n\n  // cookie county not match, return the top county\n  let counties =\n    state\n      .allCounties()\n      .sort((a, b) => b.totalConfirmed() - a.totalConfirmed());\n  let topcounty = counties[0];\n  if (!topcounty) {\n    // some \"state\" like Puerto Rico has no counties\n    return;\n  }\n  if (topcounty.name === \"Statewide Unallocated\") {\n    topcounty = counties[1];\n  }\n  return topcounty;\n}\nfunction CookieSetLastCounty(state, county) {\n  let county_info = {\n    state: state,\n    county: county,\n  }\n\n  Cookies.set(\"LastCounty\", county_info, {\n    expires: 7  // 7 day, people are not supposed to be moving anyways\n  });\n}\n\nfunction getStateNameByStateCode(stateCode) {\n  switch (stateCode) {\n    case \"AS\":\n      return \"American Samoa\";\n    case \"GU\":\n      return \"Guam\";\n    case \"MP\":\n      return \"Northern Marianas\";\n    case \"VI\":\n      return \"Virgin Islands\";\n    default:\n      return states.getStateNameByStateCode(stateCode);\n  }\n}\n\nfunction pad(n) { return n < 10 ? '0' + n : n }\n\nfunction normalize_date(k) {\n  let p = k.split(\"/\");\n  if (p.length !== 3) {\n    return null;\n  }\n  let m = pad(parseInt(p[0]));\n  let d = pad(parseInt(p[1]));\n  let y = p[2];\n  if (y.length === 2) {\n    y = \"20\" + y;\n  }\n  return `${m}/${d}/${y}`;\n}\n\nfunction useStickyState({ defaultValue, cookieId, isCookieStale = (c) => false, expiration = null }) {\n  let readCookie = Cookies.getJSON(cookieId);\n  if (!readCookie || (isCookieStale(readCookie))) {\n    readCookie = defaultValue;\n  }\n\n  const [state, setState] = useState(readCookie);\n\n  const setStateSticky = (newState) => {\n    Cookies.set(cookieId, newState, {\n      expires: expiration\n    });\n    setState(newState);\n  }\n\n  return [state, setStateSticky];\n}\n\n\nexport function getRefLines(source) {\n  const vKeyRefLines = [\n    {\n      date: moment(\"05/25/2020\", \"MM/DD/YYYY\").unix(),\n      label: \"Memorial\",\n    },\n    {\n      date: moment(\"07/04/2020\", \"MM/DD/YYYY\").unix(),\n      label: \"July 4th\",\n    },\n    {\n      date: moment(\"09/07/2020\", \"MM/DD/YYYY\").unix(),\n      label: \"Labor Day\",\n    },\n    {\n      date: moment(\"11/26/2020\", \"MM/DD/YYYY\").unix(),\n      label: \"Thanksgiving\",\n    },\n    {\n      date: moment(\"12/25/2020\", \"MM/DD/YYYY\").unix(),\n      label: \"XMas\",\n    },\n    {\n      date: moment(\"01/01/2021\", \"MM/DD/YYYY\").unix(),\n      label: \"New Year\",\n    },\n    {\n      date: moment(\"02/15/2021\", \"MM/DD/YYYY\").unix(),\n      label: \"President's Day\",\n    },\n    {\n      date: moment(\"01/18/2021\", \"MM/DD/YYYY\").unix(),\n      label: \"MLK\",\n    },\n  ]\n  if (!source) {\n    return vKeyRefLines\n  }\n\n  let stayhome;\n  if (source.stayHomeOrder) {\n    stayhome = source.stayHomeOrder();\n  }\n  if (stayhome) {\n    if (stayhome.StartDate) {\n      vKeyRefLines.push({\n        date: moment(moment(stayhome.StartDate).format(\"MM/DD/YYYY\"), \"MM/DD/YYYY\").unix(),\n        label: \"Stay-Home-Order\",\n      });\n    }\n    if (stayhome.EndDate) {\n      vKeyRefLines.push({\n        date: moment(moment(stayhome.EndDate).format(\"MM/DD/YYYY\"), \"MM/DD/YYYY\").unix(),\n        label: \"Re-Opens\",\n      });\n    }\n  }\n  return vKeyRefLines;\n}\n\nexport {\n  myShortNumber,\n  myGoodShortNumber,\n  myGoodWholeNumber,\n\n  CookieGetLastCounty,\n  CookieSetLastCounty,\n  getDefaultCountyForState,\n  getDefaultCounty,\n  getStateNameByStateCode,\n  normalize_date,\n  makeCountyFromDescription,\n  filterDataToRecent,\n  getOldestMomentInData,\n  useStickyState,\n}\n","import React, { useContext } from 'react';\nimport { CountryContext } from \"./CountryContext\";\nimport Select from 'react-select';\nimport { useHistory } from \"react-router-dom\";\nimport { Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography'\nimport { Link as MaterialLink } from '@material-ui/core';\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { fetchPrecisePoliticalLocation } from \"./GeoLocation\"\nimport { BrowserView, MobileView, isMobile } from 'react-device-detect'\nimport { makeCountyFromDescription } from \"./Util\"\n\nconst useStyles = makeStyles(theme => ({\n    findLocation: {\n        padding: 2,\n        background: '#00aeef',\n        borderRadius: 15,\n        justifyContent: \"center\",\n        display: \"flex\",\n        color: \"white\",\n    },\n    link: {\n        marginLeft: '1vw',\n        marginRight: '1vw',\n    },\n    gpsIcon: {\n        color: '#00aeef',\n        margin: '0 auto',\n        display: 'grid'\n    },\n}));\n\nconst SearchBox = (props) => {\n    const classes = useStyles();\n    const country = useContext(CountryContext);\n    const counties =\n        country.allStates().flatMap(s => s.allCounties()).map(county => {\n            return {\n                display_name: `${county.name}, ${county.state().name}`,\n                county: county,\n                total: county.totalConfirmed() + county.newCases(),\n            };\n        });\n    const states = country.allStates().map(\n        state => {\n            return {\n                display_name: `${state.name} (${state.twoLetterName})`,\n                state: state,\n                total: state.totalConfirmed() + state.newCases(),\n            }\n        });\n    const metros = country.allMetros().map(\n        metro => {\n            return {\n                display_name: `${metro.name}, ${metro.state().name}`,\n                metro: metro,\n                total: metro.totalConfirmed() + metro.newCases(),\n            }\n        });\n    const search_list = counties.concat(states).concat(metros)\n    let search_list_sorted = search_list.sort((a, b) => {\n        let x = a.total;\n        let y = b.total;\n        if (!x) x = 0;\n        if (!y) y = 0;\n\n        return y - x;\n    });\n    let search_list_final = search_list_sorted\n        .map(c => {\n            return {\n                label: `${c.display_name} (${c.total})`,\n                value: c,\n            };\n        });\n    const history = useHistory();\n\n    const mobilePropsBar = {\n        xs: 10,\n        sm: 11\n    }\n\n    const mobilePropsButton = {\n        xs: 12 - mobilePropsBar.xs,\n        sm: 12 - mobilePropsBar.sm\n    }\n\n    const webPropsBar = {\n        xl: 11,\n        md: 10,\n        sm: 9,\n        xs: 8\n    }\n\n    const webPropsButton = {\n        xl: 12 - webPropsBar.xl,\n        md: 12 - webPropsBar.md,\n        sm: 12 - webPropsBar.sm,\n        xs: 12 - webPropsBar.md\n    }\n\n    return (\n        <Grid container justify=\"space-evenly\" alignItems=\"center\" direction=\"row\">\n            <Grid item {...(isMobile ? mobilePropsBar : webPropsBar)}>\n                <Select\n                    className=\"basic-single\"\n                    classNamePrefix=\"select\"\n                    styles={{\n                        menu: provided => ({ ...provided, zIndex: 9999 })\n                    }}\n                    defaultValue={\"\"}\n                    placeholder={\"Search for a County or a State\"}\n                    isDisabled={false}\n                    isLoading={false}\n                    isClearable={true}\n                    isRtl={false}\n                    isSearchable={true}\n                    name=\"county_or_state_selection\"\n                    options={search_list_final}\n                    onChange={param => {\n                        if (param && param.value) {\n                            let route;\n                            if (param.value.county) {\n                                route = param.value.county.routeTo();\n                            } else if (param.value.metro) {\n                                route = param.value.metro.routeTo();\n                            } else {\n                                route = param.value.state.routeTo();\n                            }\n                            history.push(route);\n                        }\n                    }}\n                />\n            </Grid>\n            <Grid item {...(isMobile ? mobilePropsButton : webPropsButton)}>\n                <BrowserView>\n                    <Typography variant=\"body2\" className={`${classes.findLocation} ${classes.link}`}>\n                        <MaterialLink target=\"_blank\" onClick={() => findLocationAndRedirect(country, history)} className={`${classes.findLocation}`} >\n                            Find My Location\n                        </MaterialLink>\n                    </Typography>\n                </BrowserView>\n                <MobileView>\n                    <MaterialLink onClick={() => findLocationAndRedirect(country, history)} className={classes.gpsIcon}>\n                        <GpsFixedIcon target=\"_blank\" fontSize=\"large\" className={classes.gpsIcon}/>\n                    </MaterialLink>\n                </MobileView>\n            </Grid>\n        </Grid>\n    );\n}\n\nconst findLocationAndRedirect = async (country, history) => {\n    const countyDescr = await fetchPrecisePoliticalLocation();\n    const newCountyObj = makeCountyFromDescription(country, countyDescr);\n    const params = new URLSearchParams(history.location.search);\n    const to = newCountyObj.routeTo() + \"?\" + params.toString();\n    history.push(to);\n}\n\nexport { SearchBox }\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\nimport contributers from './data/contributors.json'\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        display: 'block',\n        padding: '1vh'\n    }\n}));\n\nconst CreditPopover = props => {\n    const classes = useStyles();\n\n    const list = contributers.map(element => {\n        return \" \" + element.name\n    });\n\n    return (\n      <Typography variant='body2' color='textSecondary' className={classes.typography}>\n        {list.toString().substring(1, list.toString().length - 1)}\n      </Typography>\n    );\n}\n\nexport default CreditPopover;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\n\nconst DataCreditWidget = (props) => {\n  const sources = [{\n      label: \"Johns Hopkins CSSE\",\n      url: \"https://github.com/CSSEGISandData/COVID-19\",\n    }, {\n      label: \"Wikipedia county info\",\n      url: \"https://en.wikipedia.org/wiki/User:Michael_J/County_table\",\n    }, {\n      label: \"Homeland Infrastructure Foundation-Level Data (HIFLD)\",\n      url: \"https://hifld-geoplatform.opendata.arcgis.com/search?groupIds=2900322cc0b14948a74dca886b7d7cfc\",\n    }, {\n      label: \"Covid tracking API\",\n      url: \"https://covidtracking.com/api/\",\n    }, {\n      label: \"Wikidata query for country and region data\",\n      url: \"https://w.wiki/QJc\",\n    }, {\n      label: \"Wikidata query for stay-at-home orders\",\n      url: \"https://w.wiki/LeZ\",\n    }, {\n      label: \"BNO News\",\n      url: \"https://bnonews.com/index.php/2020/04/the-latest-coronavirus-cases/\",\n    }, {\n      label: \"The Institute for Health Metrics and Evaluation\",\n      url: \"http://www.healthdata.org/covid/data-downloads\",\n    }, {\n      label: \"MSA definition from NLSInfo.org\",\n      url: \"https://www.nlsinfo.org/usersvc/NLSY97/NLSY97Rnd9geocodeCodebookSupplement/gatt101.htm\",\n    }, {\n      label: \"Local Health Departments from Naccho.org\",\n      url: \"https://www.naccho.org/membership/lhd-directory\",\n    },\n  ];\n  sources.sort((a, b) => a.label < b.label ? -1 : 1);\n\n  return (\n    <div>\n      <Typography variant=\"body1\">\n        We are incredibly grateful to people working hard to make their data available.\n      </Typography>\n\n      <Typography variant=\"body2\" >\n        {sources.map(({label, url}) => (\n          <li key={url}>\n            <a target=\"_blank\" href={url} rel=\"noopener noreferrer\">{label}</a>\n          </li>\n        ))}\n      </Typography>\n    </div>\n  );\n};\n\nexport { DataCreditWidget };\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport { withStyles } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Popover from '@material-ui/core/Popover';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing(1),\n        top: theme.spacing(1),\n        color: theme.palette.grey[500],\n    },\n}));\n\nconst DialogTitle = (props) => {\n    const classes = useStyles()\n\n    const { children, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose\n                ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>)\n                : null\n            }\n        </MuiDialogTitle>\n    );\n};\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst asDialogue = (Component, title, open, handleClose, buttonText = false) => {\n\n    return (\n        <Dialog maxWidth=\"md\" fullWidth={true} onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n            <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n                {title}\n            </DialogTitle>\n            <DialogContent dividers>\n                <Component/>\n            </DialogContent>\n            {buttonText\n                ? <DialogActions>\n                    <Button autoFocus onClick={handleClose} color=\"primary\">\n                        {buttonText}\n                    </Button>\n                  </DialogActions>\n                : null\n            }\n\n        </Dialog>\n  );\n}\n\nconst asPopOver = (\n    Component,\n    open,\n    anchorEl,\n    handleClose,\n    props = {\n        anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'left'\n        },\n        transformOrigin: {\n            vertical: 'bottom',\n            horizontal: 'center'\n        }\n    }) => {\n    return (\n        <Popover\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            {...props}\n        >\n            <Component />\n        </Popover>\n    )\n}\n\nexport { asDialogue, asPopOver }\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link as MaterialLink } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport CreditPopover from './CreditHover'\nimport { DataCreditWidget } from \"./graphs/DataCredit\"\nimport { asDialogue } from \"./FooterDialogue\"\n\nconst useStyles = makeStyles(theme => ({\n    topContainer: {\n        marginTop: '2vh',\n        paddingBottom: '2vh',\n    },\n    footerLink: {\n        textAlign: 'center',\n    },\n    linkContainer: {\n        padding: '1vh'\n    },\n    iconRoot: {\n        textAlign: 'center',\n    },\n    githubIcon: {\n        color: '#00aeef',\n        margin: '0 auto',\n    },\n    creditParagraph: {\n        textAlign: 'center',\n        display: 'block',\n        padding: '1vh'\n    },\n}));\n\nconst Footer = (props) => {\n    const classes = useStyles();\n\n    const footerLinkProps = {\n        variant: 'button',\n        className: classes.footerLink,\n        color: 'textSecondary'\n    };\n    const footerLinks = [\n        [\"Terms of Service\", (event) => window.location.href=\"https://docs.google.com/document/d/10bsmpX1VVi2myFAHtP_gqHeGauDHz_9t1YQnjxMc_ng/edit?usp=sharing\"],\n        [\"Data Credits\", (event) => handleClick(event, 'data-cred')]\n    ];\n\n    const [openedPopoverId, setOpenedPopoverId] = React.useState(null);\n    const handleClick = (event, popoverId) => {\n        event.preventDefault();\n        setOpenedPopoverId(popoverId);\n    };\n    const handleClose = () => {\n        setOpenedPopoverId(null);\n    }\n\n    return (\n        <Grid container className={classes.topContainer} justify=\"space-evenly\" alignItems=\"center\" direction=\"row\" >\n            <Grid item xs={12} sm={1} />\n            <Grid item container xs={12} sm={4} className={classes.linkContainer} justify=\"center\" direction=\"column\">\n                {footerLinks.map(linkPair => {\n                    return (<MaterialLink {...footerLinkProps} key={linkPair[0]} href=\"#\" onClick={linkPair[1]}>{linkPair[0]}</MaterialLink>)\n                })}\n            </Grid>\n            <Grid item xs={12} sm={2}>\n                <Grid container justify=\"center\" className={classes.iconRoot}>\n                    <Grid item xs={3} sm={6}>\n                        <MaterialLink href=\"https://github.com/xunhuang/covid-19\" className={classes.githubIcon}>\n                            <GitHubIcon fontSize=\"large\" />\n                        </MaterialLink>\n                    </Grid>\n                    <Grid item xs={3} sm={6}>\n                        <MaterialLink href=\"https://www.facebook.com/groups/890203761415663\" className={classes.githubIcon}>\n                            <FacebookIcon fontSize=\"large\" />\n                        </MaterialLink>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n                <Typography variant='caption' color='textSecondary' className={classes.creditParagraph}>\n                    This website is is 100% volunteer developed, open source and funded by user donations.\n                    Click <MaterialLink href=\"#\" onClick={(e) => handleClick(e, 'cred-popover')}>here for volunteers</MaterialLink> that\n                    made significant contributions.\n                </Typography>\n                {asDialogue(CreditPopover, \"Special Thanks To\", openedPopoverId === 'cred-popover', handleClose)}\n                {asDialogue(DataCreditWidget, \"Data Credits\", openedPopoverId === 'data-cred', handleClose)}\n            </Grid>\n            <Grid item xs={12} sm={1} />\n        </Grid>\n    );\n\n}\n\nexport { Footer }\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Link} from '@material-ui/core';\n\nconst DONATION_URL = \"https://ko-fi.com/covid19direct\";\n\nexport const DonateLink = (props) => {\n  return (\n    <Link target=\"_blank\" href={DONATION_URL} className={props.className}>\n      {props.message || 'Buy Us A Coffee'}\n    </Link>\n  );\n}\n\nDonateLink.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {useLocation} from 'react-router-dom'\nimport {\n  EmailShareButton,\n  FacebookShareButton,\n  TwitterShareButton,\n  RedditShareButton,\n  WhatsappShareButton,\n  EmailIcon,\n  RedditIcon,\n  FacebookIcon,\n  TwitterIcon,\n  WhatsappIcon,\n} from \"react-share\";\n\nconst QUOTE = \"Best real-time county-level COVID-19 dashboard. Get the latest trends about cases, recovery, testing and hospitalization as well as resources for mental health and well-being.\";\n\nexport const SocialMediaButtons = (props) => {\n  const location = useLocation();\n\n  let url;\n  if (props.url) {\n    url = props.url;\n  } else {\n    url = 'https://covid-19.direct' + location.pathname;\n  }\n\n  const bgStyle = {};\n  if (props.backgroundColor) {\n    bgStyle.fill = props.backgroundColor;\n  }\n\n  return (\n    <div className={props.className}>\n      {[\n        [FacebookShareButton, FacebookIcon],\n        [TwitterShareButton, TwitterIcon],\n        [RedditShareButton, RedditIcon],\n        [WhatsappShareButton, WhatsappIcon],\n        [EmailShareButton, EmailIcon],\n      ].map(([Button, Icon], i) => (\n        <Button className={props.buttonClassName} url={url} quote={QUOTE} key={i}>\n          <Icon\n              size={props.size || '1em'}\n              round={true}\n              bgStyle={bgStyle}\n              iconFillColor={props.iconColor}\n          />\n        </Button>\n      ))}\n    </div>\n  );\n};\n\nSocialMediaButtons.propTypes = {\n  backgroundColor: PropTypes.string,\n  buttonClassName: PropTypes.string,\n  className: PropTypes.string,\n  iconColor: PropTypes.string,\n  quote: PropTypes.string,\n  size: PropTypes.any,\n  url: PropTypes.string,\n};\n","import React, { useContext } from 'react';\nimport { CountryContext } from \"./CountryContext\";\nimport Disqus from \"disqus-react\"\nimport { MyTabs } from \"./MyTabs.js\";\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FacebookProvider, Comments } from 'react-facebook';\nimport { useHistory } from \"react-router-dom\";\nimport { Link as MaterialLink } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { Paper } from '@material-ui/core';\nimport { SectionHeader } from \"./CovidUI\"\nimport { withRouter } from 'react-router-dom'\nimport { Link as RouterLink } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { MentalHealthResourceSection } from './MentalHealthTab';\nimport { SearchBox } from './SearchBox';\nimport { Footer } from './Footer'\nimport { DonateLink } from './components/chrome/DonateLink';\nimport { SocialMediaButtons } from './components/chrome/SocialMediaButtons';\n\nconst Cookies = require(\"js-cookie\");\nconst moment = require(\"moment\");\n\nconst NewsData = require(\"./data/news.json\");\nconst WhatsNewData = require(\"./data/whatsnew.json\");\n\nconst useStyles = makeStyles(theme => ({\n  topContainer: {\n    display: 'flex',\n    alignItems: 'baseline',\n  },\n  row: {\n    alignItems: 'baseline',\n    padding: 5,\n  },\n  title: {\n    display: 'block',\n    padding: 2,\n    paddingRight: 10,\n    margin: 2,\n  },\n  tagline: {\n    display: 'flex',\n    padding: 0,\n    paddingTop: 10,\n    paddingRight: 10,\n    margin: 0,\n    alignSelf: \"flex-start\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  keepclam: {\n    display: 'block',\n    color: '#FFFFFF',\n    background: '#00aeef',\n    borderRadius: 0,\n    padding: 2,\n    margin: 2,\n  },\n  searchContainer: {\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  qpContainer: {\n    display: 'none',\n    background: '#e3e3e3',\n    borderWidth: \"1px\",\n    padding: 15,\n    margin: 15,\n  },\n  qpBox: {\n    display: 'flex',\n    justifyContent: \"space-between\",\n    width: \"100%\",\n  },\n  grow: {\n    flex: 1,\n  },\n  supportUs: {\n    padding: 2,\n    margin: 2,\n  },\n  buyUsACoffee: {\n    padding: 2,\n    margin: 2,\n    background: '#00aeef',\n    borderRadius: 15,\n    justifyContent: \"center\",\n    display: \"flex\",\n    color: \"white\",\n  },\n  newsDate: {\n    margin: 6,\n  },\n  newsTitle: {\n    margin: 4,\n  },\n  commentPaper: {\n    overflow: 'auto',\n    width: '97%',\n    padding: 10,\n    display: 'block',\n    margin: '0 auto',\n    maxHeight: \"80vh\",\n  }\n}));\n\nconst WhatsNewSection = (props) => {\n  const classes = useStyles();\n  const data =\n    WhatsNewData.sort((a, b) => moment(b.Date, \"MM/DD/YYYY\").toDate() - moment(a.Date, \"MM/DD/YYYY\").toDate())\n      .slice(0, 5);\n  return <div>\n    <SectionHeader>\n      <Typography variant=\"h5\" noWrap>\n        What's New On Covid-19.Direct\n             </Typography>\n    </SectionHeader>\n    {data.map((item, i) =>\n      <Grid container wrap=\"nowrap\" key={item.Feature}>\n        <Grid item className={classes.newsDate}>\n          <div>{moment(item.Date, \"MM/DD/YYYY\").format(\"M/D\")}</div>\n        </Grid>\n        <Grid item className={classes.newsTitle}>\n          <Typography variant=\"body1\" noWrap>\n            {(item.Link &&\n              <MaterialLink to={item.Link} component={RouterLink}>\n                {item.Feature}\n              </MaterialLink>) ||\n              item.Feature}\n          </Typography>\n\n          <Typography variant=\"body2\" noWrap>\n            {item.commentary}\n          </Typography>\n        </Grid>\n      </Grid >\n    )}\n  </div >;\n};\n\nconst NewsSection = (props) => {\n  const classes = useStyles();\n  const data =\n    NewsData.sort((a, b) => moment(b.Date, \"MM/DD/YYYY\").toDate() - moment(a.Date, \"MM/DD/YYYY\").toDate())\n      .slice(0, 10);\n  return <div>\n    <SectionHeader id=\"news\">\n      <Typography variant=\"h5\" noWrap>\n        News\n             </Typography>\n    </SectionHeader>\n    {data.map((item, i) =>\n      <Grid container alignItems=\"center\" wrap=\"nowrap\" key={item.link}>\n        <Grid item className={classes.newsDate}>\n          <div>{moment(item.Date, \"MM/DD/YYYY\").format(\"M/D\")}</div>\n        </Grid>\n        <Grid item className={classes.newsTitle}>\n          <a href={item.link}> {item.Title}</a>\n        </Grid>\n      </Grid >\n    )}\n  </div >;\n};\n\nconst DonateButton = (props) => {\n  const classes = useStyles();\n  return (\n    <Typography noWrap variant=\"body2\" className={classes.buyUsACoffee}>\n      <DonateLink className={classes.buyUsACoffee} />\n    </Typography>);\n}\n\nconst Banner = withRouter((props) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const country = useContext(CountryContext);\n  const [showNews] = React.useState(false);\n\n  const us_summary = country.summary();\n  const url_shared =\n    \"https://covid-19.direct\" +\n    props.match.url +\n    history.location.search;\n  return (\n    <div>\n      <div className={classes.topContainer}>\n        <span className={classes.title}>\n          <Typography variant=\"h6\" >\n            COVID-19.direct\n            </Typography>\n          <SocialMediaButtons\n            className={classes.socialMediaRow}\n            url={url_shared}\n            size={32}\n          />\n          <Typography variant=\"body2\" noWrap>\n            Updated: {moment(us_summary.generatedTime).format('lll')}\n          </Typography>\n        </span>\n        <span className={classes.grow}></span>\n        {/* <span className={classes.keepclam}> Keep Clam, #StayHome</span> */}\n        <span className={classes.tagline}>\n          {/* <Typography variant=\"body1\" >\n            this too shall pass\n          </Typography> */}\n          <DonateButton />\n          <MaterialLink variant=\"body1\" to=\"/country/\" component={RouterLink} >\n            Beta: Rest of World\n          </MaterialLink>\n\n        </span>\n      </div >\n      {showNews &&\n        <WhatsNewSection />\n      }\n    </div >\n  );\n});\n\nconst QPArea = (props) => {\n  const QPID = \"qpid_metro3\";\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(Cookies.get(QPID) === undefined);\n\n  const handleClose = (qpid) => {\n    Cookies.set(qpid, 1, 10000);\n    setOpen(false);\n  }\n\n  if (!open) {\n    return null;\n  }\n\n  return <div className={classes.qpContainer}>\n    <div className={classes.qpBox} >\n      <div>\n        We added NYC and Bay Area as a \"Metro\" area with multiple counties. What new metro areas\n        should we include?\n                    <MaterialLink href=\"#discussion\">\n          Make a suggestion here.\n                    </MaterialLink>\n      </div>\n      <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => { handleClose(QPID) }}>\n        <CloseIcon fontSize=\"small\" />\n      </IconButton>\n    </div>\n  </div>\n}\n\nconst withHeader = (comp, props) => {\n\n  const disqusShortname = \"covid19direct\";\n  const disqusConfig = {\n    url: \"https://covid-19.direct\",\n    identifier: \"article-id\",\n    title: \"main page\"\n  };\n\n  const donationPageUrl = \"https://www.gofundme.com/f/covid19direct-operating-cost\";\n\n  return (props) => {\n    const classes = useStyles();\n    let component = comp({\n      // add addition things here\n      ...props,\n    });\n    let healthDiscussion = <div>\n      <SectionHeader>\n        <Typography variant=\"h5\" noWrap>\n          Resources\n                    </Typography>\n      </SectionHeader>\n      <MentalHealthResourceSection />\n      <SectionHeader id=\"discussion\">\n        <Grid container alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h5\" noWrap id=\"discussion\">\n              Discussions\n                    </Typography>\n          </Grid>\n          <Grid item xs />\n          <Grid item>\n            <Typography noWrap variant=\"body2\" className={classes.supportUs}>\n              <MaterialLink target=\"_blank\" href={donationPageUrl}>\n                Like our site? Support us!\n                        </MaterialLink>\n            </Typography>\n          </Grid>\n        </Grid>\n      </SectionHeader>\n      <Paper elevation={3} className={classes.commentPaper}>\n        <MyTabs\n          labels={['Disqus', 'FB Comments']}\n          urlQueryKey=\"discussions\"\n          urlQueryValues={['disqus', 'facebook']}\n          tabs={[\n            (\n              <Disqus.DiscussionEmbed\n                shortname={disqusShortname}\n                config={disqusConfig}\n              />\n            ), (\n              <FacebookProvider appId=\"201788627783795\">\n                <Comments href=\"https://covid-19.direct/\" />\n              </FacebookProvider>\n            )\n          ]}\n        />\n      </Paper>\n    </div>;\n\n    let header = <header className=\"App-header\">\n      <Banner />\n      <QPArea />\n      <div className={classes.searchContainer}>\n        <SearchBox />\n      </div>\n      {component}\n      {false && <NewsSection />}\n      {healthDiscussion}\n      <Footer />\n    </header >\n\n    return header;\n  }\n};\n\n\nexport { withHeader }\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { myShortNumber } from \"./Util.js\";\nimport { withRouter } from 'react-router-dom'\nimport { Typography } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nconst useStyles = makeStyles(theme => ({\n    tagSticky: {\n        backgroundColor: \"#FFFFFF\",\n        position: \"sticky\",\n        top: 0,\n        left: 0,\n        zIndex: \"1\",\n    },\n    tagContainer: {\n        padding: theme.spacing(1, 1, 0, 1),\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        // margin: '24px 0',\n    },\n    tagContainerNoBeds: {\n        flexWrap: \"nowrap\",\n    },\n    row: {\n        padding: theme.spacing(1, 1),\n        justifyContent: \"space-between\",\n        display: \"flex\",\n    },\n    rowNoBeds: {\n        justifyContent: \"center\",\n    },\n    tag: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        textAlign: \"center\",\n        backgroundColor: \"#f3f3f3\",\n        borderRadius: 10,\n        flexGrow: \"1\",\n        margin: 3,\n        color: \"black\",\n        textDecoration: \"none\",\n    },\n    tagSelected: {\n        color: \"#FFFFFF\",\n        backgroundColor: \"#00aeef\",\n    },\n    tagTitle: {\n        marginTop: 5,\n    },\n    tagSection: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        alignContent: \"flex-end\",\n    },\n    topTag: {\n        fontSize: \"0.5rem\",\n    },\n    smallTag: {\n        fontSize: \"0.5rem\",\n    },\n    mainTag: {\n        fontSize: \"1.0rem\",\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    table: {\n        width: \"100%\"\n    },\n    timestamp: {\n        // fontWeight: \"bold\",\n        padding: theme.spacing(0, 1),\n        textAlign: \"left\",\n    },\n    sectionHeader: {\n        \"border-left\": \".1rem solid #f50057\",\n        margin: 3,\n        padding: 3,\n    }\n}));\n\n\nconst USInfoTopWidget = (props) => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const squish = useMediaQuery(theme.breakpoints.down('xs'));\n\n    const tags = [];\n    let cursor = props.source;\n    while (cursor) {\n        tags.push(cursor);\n        cursor = cursor.parent();\n    }\n\n    const showBeds = tags.length < 4 && !squish;\n\n    return <div className={classes.tagSticky} >\n        <div className={`${classes.tagContainer} ${showBeds ? '' : classes.tagContainerNoBeds}`}>\n            {tags.map(source =>\n                <Tag\n                    key={source.routeTo()}\n                    source={source}\n                    squish={squish}\n                    showBeds={showBeds}\n                />\n            )}\n        </div>\n    </div>;\n};\n\nconst Tag = withRouter((props) => {\n    const { source, history, match } = props;\n\n    let title;\n    if (!props.squish || !source.shortName) {\n        title = source.name;\n    } else {\n        title = source.shortName;\n    }\n\n    const routeTo = source.routeTo();\n    const selected = match.url === routeTo;\n    const summary = source.summary();\n    const hospitals = source.hospitals();\n\n    const params = new URLSearchParams(history.location.search);\n    const to = routeTo + \"?\" + params.toString();\n    const classes = useStyles();\n    return <Link className={`${classes.tag} ${selected ? classes.tagSelected : ''}`} to={to}>\n        <div className={classes.tagTitle}> {title} </div>\n        <div className={`${classes.row} ${props.showBeds ? '' : classes.rowNoBeds}`} >\n            <section className={classes.tagSection}>\n                <div className={classes.topTag}>\n                    +{myShortNumber(summary.newcases)}\n                </div>\n                <div className={classes.mainTag}>\n                    {myShortNumber(summary.confirmed)} </div>\n                <div className={classes.smallTag}>\n                    Confirmed </div>\n            </section>\n\n            {props.showBeds && <section className={classes.tagSection}>\n                <Typography className={classes.topTag} variant=\"body2\" noWrap >\n                    {myShortNumber(hospitals.count)} Hosp.\n                </Typography>\n                <div className={classes.mainTag}>\n                    {myShortNumber(hospitals.bedCount)}</div>\n                <div className={classes.smallTag}>\n                    Beds\n                </div>\n            </section>}\n        </div>\n    </Link>;\n});\n\nexport {\n    USInfoTopWidget,\n    // Tag,\n}\n","export default {\n  county: \"/county/:state/:county\",\n  data_credit: \"/credit/data\",\n  metro: \"/metro/:metro\",\n  region: \"/country/*\",\n  state: \"/state/:state\",\n  united_states: \"/US\",\n  united_states_map: \"/US/map\",\n  united_states_recovery: \"/US/Recovery\",\n};\n","const { linearRegression } = require('simple-statistics');\n\nconst moment = require('moment');\nconst log2 = (a) => Math.log(a) / Math.log(2);\n\n/* this includes the last day */\nfunction getGrowthRateLinearRegression(data, fips) {\n  const daysToDouble = getDoubleDays7DayLinearRegression(data, fips);\n  const slope = 1 / daysToDouble;\n  return Math.exp(Math.log(2) * slope) - 1;\n}\n\n/* this includes the last day */\nfunction getDoubleDays7DayLinearRegression(data, fips) {\n  let keys = Object.keys(data).sort((a, b) => moment(a, \"MM/DD/YYYY\").toDate() - moment(b, \"MM/DD/YYYY\").toDate());\n  if (keys.length < 7) {\n    return null;\n  }\n  const key7days = keys.slice(-7);\n  const firstday = moment(key7days[0], \"MM/DD/YYYY\");\n\n  const prepared_data = key7days.map(k => {\n    let delta = moment(k, \"MM/DD/YYYY\").diff(firstday, \"days\");\n    return [delta, log2(data[k])];\n  })\n  if (prepared_data[0][1] <= log2(10)) { // number too small tomake predictions\n    return null;\n  }\n  const { m, } = linearRegression(prepared_data);\n\n  let daysToDouble = 1 / m;\n  if (daysToDouble > 365) {\n    daysToDouble = 365;\n  }\n\n  return daysToDouble;\n}\n\nfunction processForTimeSeries(data, fn) {\n  let keys = getKeysSortedByDate(data);\n  if (keys.length < 7) {\n    return null;\n  }\n  let result = {};\n  for (let i = 0; i < keys.length - 6; i++) {\n    let set = keys.slice(i, i + 7);\n    let window = set.reduce((m, k) => {\n      m[k] = data[k];\n      return m;\n    }, {});\n    let daysToDouble = fn(window);\n    result[set[set.length - 1]] = daysToDouble;\n  }\n  return result;\n}\n\nfunction getDay2DoubleTimeSeries(data) {\n  return processForTimeSeries(data, getDoubleDays7DayLinearRegression);\n}\n\nfunction getGrowthRateTimeSeries(data) {\n  return processForTimeSeries(data, getGrowthRateLinearRegression);\n}\n\nfunction getKeysSortedByDate(data) {\n  return Object.keys(data)\n    .sort((a, b) => moment(a, \"MM/DD/YYYY\").toDate() - moment(b, \"MM/DD/YYYY\").toDate());\n}\n\nfunction trimLastDaysData(data) {\n  let keys = getKeysSortedByDate(data).slice(0, -1);\n  let window = keys.reduce((m, k) => {\n    m[k] = data[k];\n    return m;\n  }, {});\n  return window;\n}\n\nexport { trimLastDaysData, getDay2DoubleTimeSeries, getGrowthRateTimeSeries }","const superagent = require(\"superagent\");\n\nvar cached;\n\nasync function fetchNPRProjectionData() {\n    if (cached) {\n        return cached;\n    }\n    cached = superagent\n        .get(\"/data/npr_projection.json\")\n        .then(res => {\n            return res.body;\n        });\n    return cached;\n}\n\nexport { fetchNPRProjectionData }","const superagent = require(\"superagent\");\n\nvar cachedStates;\nvar cachedUS;\n\nconst testingStatesURL = \"/data/state_testing.json\";\nconst testingUSURL = \"/data/us_testing.json\";\n\nfunction addfulldate(sourceData) {\n  let data = sourceData.map(t => {\n    let md = t.date % 10000;\n    let m = Math.floor(md / 100);\n    let d = md % 100;\n    t.name = `${m}/${d}`;\n\n    m = m.toString().padStart(2, \"0\");\n    d = d.toString().padStart(2, \"0\");\n    let y = Math.floor(t.date / 10000);\n\n    t.fulldate = `${m}/${d}/${y}`;\n\n    return t;\n  })\n  return data;\n}\n\nasync function fetchTestingDataStates() {\n  if (cachedStates) {\n    return cachedStates;\n  }\n  cachedStates = superagent\n    .get(testingStatesURL)\n    .then(res => {\n      return addfulldate(res.body);\n    });\n  return cachedStates;\n}\n\nasync function fetchTestingDataUS() {\n  if (cachedUS) {\n    return cachedUS;\n  }\n  cachedUS = superagent\n    .get(testingUSURL)\n    .then(res => {\n      return addfulldate(res.body);\n    });\n  return cachedUS;\n}\n\nexport { fetchTestingDataStates, fetchTestingDataUS }","const superagent = require(\"superagent\");\n\nasync function fetchPublicCountyData(state_short, county_fips) {\n  return superagent\n    .get(`/AllData/${state_short}/${county_fips}.json`)\n    .then(res => {\n      return res.body;\n    });\n}\n\nasync function fetchAllUSData() {\n  return superagent\n    .get(`/AllData/AllData.json`)\n    .then(res => {\n      return res.body;\n    });\n}\n\nasync function fetchWorldData() {\n  return superagent\n    .get(`/AllData/WorldData.json`)\n    .then(res => {\n      return res.body;\n    });\n}\n\nexport {\n  fetchPublicCountyData,\n  fetchAllUSData,\n  fetchWorldData\n}","import { ma } from 'moving-averages'\nconst moment = require(\"moment\")\n\n/*\n* merge array on \"fulldate\" keys\n*    array1 = [{ fulldate: '12/22/2292\", field1: \"xxx\"} ]\n*    array2 = [{ fulldate: '12/22/2292\", field2: \"xxx\"} ]\n\n* Result\n*\n*    = [{fulldate: '12/22/2292\", field1:\"xxx\", field2: \"xxx\"} ]\n*/\n\nexport function mergeDataSeries(entry1, entry2) {\n  if (!entry2) {\n    return entry1;\n  }\n  let map1 = entry1.reduce((m, a) => {\n    m[a.fulldate] = a;\n    return m;\n  }, {});\n\n  for (let e2 of entry2) {\n    let mitem = map1[e2.fulldate] ?? {};\n    mitem = {\n      ...mitem,\n      ...e2,\n    };\n    map1[e2.fulldate] = mitem;\n  }\n  return Object.values(map1);\n}\n\nexport function makeDataSeriesFromTotal(data, key_total, key_daily, key_moving) {\n  let sorteddata = Object.keys(data).sort((a, b) => moment(a, \"MM/DD/YYYY\").toDate() - (moment(b, \"MM/DD/YYYY\")).toDate());\n  let m = [];\n\n  for (let date of sorteddata) {\n    let entry = data[date];\n    if (entry) {\n      let item = {}\n      item.fulldate = date;\n      item[key_total] = entry;\n      let lastday = moment(date, \"MM/DD/YYYY\").subtract(1, \"days\").format(\"MM/DD/YYYY\");\n      let lastentry = data[lastday];\n      if (lastentry !== null) {\n        item[key_daily] = entry - lastentry;\n        if (item[key_daily] < 0) {\n          item[key_daily] = 0; // really don't like this as this implies data error\n        }\n      }\n      m.push(item);\n    }\n  }\n\n  if (key_moving && m.length > 0) {\n    let moving = computeMovingAverage(m, key_daily, key_moving);\n    m = mergeDataSeries(m, moving);\n  }\n\n  return m;\n}\n\nfunction exportColumnValues(data, column) {\n  let result = [];\n  for (let i = 0; i < data.length; i++) {\n    let v = data[i][column];\n    if (isNaN(v)) {\n      v = 0;\n    }\n    result.push(v);\n  }\n  return result;\n}\n\nconst MOVING_WIN_SIZE = 7;\n\nexport function computeMovingAverage(data, key_daily, key_moving) {\n  let m = sortByFullDate(data);\n  let dailyvalues = exportColumnValues(m, key_daily);\n  let avg = ma(dailyvalues, MOVING_WIN_SIZE);\n  for (let i = 0; i < m.length; i++) {\n    m[i][key_moving] = avg[i];\n  }\n  return m;\n}\n\n/*\n[\n{fulldate: \"02/28/2020\", total: 9, testsThatDay: NaN, testsThatDay_avg: NaN}\n{fulldate: \"02/29/2020\", total: 18, testsThatDay: 9, testsThatDay_avg: NaN}\n{fulldate: \"03/01/2020\", total: 40, testsThatDay: 22, testsThatDay_avg: 14.666666666666666}\n{fulldate: \"03/02/2020\", total: 53, testsThatDay: 13, testsThatDay_avg: 27.333333333333332}\n{fulldate: \"03/03/2020\", total: 100, testsThatDay: 47, testsThatDay_avg: 343.6666666666667}\n: {fulldate: \"03/04/2020\", total: 1071, testsThatDay: 971, testsThatDay_avg: 463.3333333333333}\n: {fulldate: \"03/05/2020\", total: 1443, testsThatDay: 372, testsThatDay_avg: 780}\n: {fulldate: \"03/06/2020\", total: 2440, testsThatDay: 997, testsThatDay_avg: 640}\n]\n\nexportColumnFromDataSeries (data, \"total\") \n\n===> \n\n{ \n \"02/28/2020\", : 9, \n \"02/29/2020\" : 18, \n \"03/01/2020\" : 40\n ...\n}\n\n*/\nexport function exportColumnFromDataSeries(data, column) {\n  let ret = data.reduce((m, b) => {\n    m[b.fulldate] = b[column];\n    return m;\n  }, {})\n  return ret\n}\n\nexport function sortByFullDate(data) {\n  return data.sort((a, b) => moment(a.fulldate, \"MM/DD/YYYY\").toDate() - (moment(b.fulldate, \"MM/DD/YYYY\")).toDate());\n}","import ode45 from 'ode45-cash-karp';\nimport integral from 'integrate-adaptive-simpson';\nimport fmin from 'fmin';\nimport moment from 'moment';\n\n// %ODEFUN SIR model\nfunction getODE(par) {\n  var beta = par[0];\n  var gamma = par[1];\n  var N = par[2];\n  var I0 = par[3];\n  return function (dCdt, C, t) {\n    const c0 = I0 / N;\n    const c = C[0] / N;\n    dCdt[0] = N * (1 - c) * (beta * c + gamma * Math.log((1 - c) / (1 - c0)));\n  }\n}\n\n/* eslint-disable no-unused-vars */\n\nexport function fitVirusCV19(C, startdate) {\n  var date0 = 0;\n  var startdate_till_now = moment().diff(moment.unix(startdate), 'days');\n\n  // default values\n  const Nmax = 12e6;   // max. population size\n\n  // save original data\n  const date00 = date0;\n\n  // find start\n  const nmin = 5\n  var n0 = 0;\n  for (var n = 1; n < C.length; n++) {\n    if (C[n - 1] > C[n]) {\n      throw new Error('Invalid data C(n-1)>C(n)');\n    }\n    if (C[n] === C[n - 1]) {\n      n0 = n;\n      date0 = date0 + 1;\n      continue;\n    }\n    break;\n  }\n  if (n0 === C.length - 1) {\n    throw new Error('Constant data set');\n  }\n  C = C.slice(n0);\n  if (C.length < nmin) {\n    throw new Error('Data set to small');\n  }\n\n  // initial guess\n  while (true) {\n    var b0 = iniGuess(C);\n    if (b0.length === 0) {\n      if (C.length >= nmin) {\n        date0 = date0 + 1;\n        C = C.slice(1);\n        continue;\n      } else {\n        break;\n      }\n    }\n    break;\n  }\n\n  if (b0.length === 0) {\n    return;\n  }\n\n  // ... logistic curve parameters\n  const K0 = b0[0];\n  var r = b0[1];\n  const A = b0[2];\n  const C0 = K0 / (A + 1);\n\n  // ... initial guess\n  var I0 = C0;\n  var N = 2 * K0;\n  var gamma = 2 * r;\n  var beta = 1.5 * gamma;\n\n  // main calculation =======================================================%\n\n  // set infection rate and time intervals \n  const dC = diff(C).map((d) => d < 0 ? 0 : d);\n  const nday = C.length;\n  const tt = [...Array(nday - 1).keys()]; // 0:nday-1\n\n  // initial estimate\n  b0 = [beta, gamma, N, I0];\n\n  // calculate parameters\n\n  // automatic selection of weigths\n  var bmax = Nmax;\n  var b = [];\n  var w1, w2;\n  var bt, fmin, flag;\n  for (var i = 1; i <= 3; i++) {\n    switch (i) {\n      case 1:\n        w1 = 1;\n        w2 = 0;\n        break;\n      case 2:\n        w1 = 0;\n        w2 = 1;\n        break;\n      case 3:\n        w1 = 1;\n        w2 = 1;\n        break;\n      default:\n    }\n    [bt, fmin, flag] = parestWrapper(C, w1, w2)(b0);\n    if (bt.every((x) => x > 0) && bt[2] < bmax) {\n      b = bt;\n      bmax = b[2];\n    }\n  }\n\n  if (b.length === 0) {\n    b = bt;\n  }\n\n  // % unpack results\n  beta = b[0];\n  gamma = b[1];\n  N = b[2];\n  I0 = b[3];\n\n  //   % postprocessing ======================================================== %\n\n  //   %... final value\n  var Clim = calcClim(b);\n\n  //   %... value at inflection point\n  var Cm = calcCm(b);\n\n  //   % contact numer\n  var R0 = beta / gamma; //*(1 - I0/N);\n\n  //   % critical number of S\n  var Sc = gamma * N / beta;\n\n  //   %... parameters of logistic model approximation\n  r = beta - gamma;\n  var K = 2 * (beta - gamma) / (2 * beta - gamma) * N;\n  var t2 = Math.log(2) / r;\n\n  //   %... tangent slope in inflection point\n  var k = (N - Cm) * (beta * Cm / N + gamma * Math.log((N - Cm) / (N - I0)));\n  //   k = real(k);\n\n  //   %... acceleration time\n  var tau1 = Cm / k;\n\n  //   %... deceleration time\n  var tau2 = (Clim - Cm) / k;\n\n  //   %... total duration of accelerated phase\n  var tau = tau1 + tau2;\n\n  //   %... inflection time\n  var tm = calcTm(b, Cm);\n  //   tm = real(tm);\n\n  //   %... end time\n  var tend = calcTend(b, Clim);\n  var tend5 = calcTend(b, Clim, 5);\n\n  //   %... datums\n  //   if fdata   % new 20/04/30 MB\n  //       tp0 = date00;\n  //   else\n  //       tp0 = max(tm - tau1 - tau + date0,date00);\n  //   end\n  var tp0 = Math.max(tm - tau1 - tau + date0, date00);\n  var tp1 = (tm - tau1) + date0;  // begin acceleration\n  var tp2 = (tm) + date0;         // turning point\n  var tp3 = (tm + tau2) + date0;  // end deceleration\n  var tp4 = (tm + tau2) + tau / 2 + date0; // enter final phase\n  var tpend = tend + date0; // end time\n  var tpend5 = tend5 + date0; // end time    \n  //  % tp4 = 2*tm + date0; % enter final phase\n\n  //   %... dense forcast curve\n  var dt = 1; // 0.1;  We want it one per day\n  var ttm = Math.max(tm + 2 * tau, startdate_till_now + 1); // 20/04/02, 20/04/23\n  var tspan = makeTspan(0, dt, ttm);\n  var [t, Ca] = myOde45(getODE(b), tspan, [I0]);;\n\n\n  return [Ca, moment.unix(startdate).add(date0, 'days')];\n}\n/* eslint-enable no-unused-vars */\n\n// --------- HELPER FUNCTIONS ---------------------------------------------------------\n\nfunction myOde45(odefun, tspan, y0) {\n  const dt0 = 1e-3;\n  const t0 = tspan[0];\n  const integrator = ode45(y0, odefun, t0, dt0, { 'tol': 1e-6 });\n  const t = [];\n  const C = [];\n  tspan.forEach(tmax => {\n    while (integrator.step(tmax)) { }\n    t.push(integrator.t)\n    C.push(integrator.y[0])\n  }\n  );\n  return [t, C];\n}\n\nfunction makeTspan(tmin, dt, tmax) {\n  tmax = Math.floor(tmax / dt) * dt;\n  const tspan = [];\n  for (var t = tmin; t <= tmax; t += dt) {\n    tspan.push(t);\n  }\n  return tspan;\n}\n\nfunction parestWrapper(C, w1, w2) {\n  return function (b0) {\n    const fun = function (par) {\n      // upack parameter\n      const I0 = [par[3]];\n\n      // set time span\n      const tspan = makeTspan(0, 1, C.length - 1);\n\n      // solve ODE\n      try {\n        var [tsol, Csol] = myOde45(getODE(par), tspan, I0);;\n        // [tsol,Csol] = ode45(@(t,y) odeFun(t,y,par), tspan, I0);\n      } catch (e) {\n        return NaN;\n      }\n\n      // % check if calculation time equals sample time\n      if (tsol.length !== tspan.length) {\n        return NaN;\n      }\n\n      // % clean data MB 20/04/23\n      var Cc = [];\n      var Csol_new = [];\n      for (var i = 0; i < C.length; i++) {\n        if (!isNaN(C[i])) {\n          Cc.push(C[i]);\n          Csol_new.push(Csol[i]);\n        }\n      }\n\n      // % calculate optimization function\n      const c1 = w1 / (w1 + w2);\n      const c2 = w2 / (w1 + w2);\n      var f1 = 0;\n      var f2 = 0;\n      if (c2 > 0) {\n        f2 = norm(vec_subtraction(diff(Cc), diff(Csol)));\n      }\n      if (c1 > 0) {\n        f1 = norm(vec_subtraction(Cc, Csol));\n      }\n      return c1 * f1 + c2 * f2;\n    }\n    // [b, fmin,flag] = fminsearch(@fun, b0, options);\n    return fminsearch(fun, b0);\n  }\n}\n\nfunction fminsearch(fun, b0) {\n  const res = fmin.nelderMead(fun, b0);\n  return [res.x, res.fx, 0]\n}\n\n// PAREST Parameter estimation\n// function [b,fmin,flag] = parest(b0)\n//     global maxnum\n\n//     warning('on')\n//     if ~isempty(maxnum)\n//         options = optimset('Display','off','MaxIter',maxnum,...\n//             'MaxFunEvals',maxnum);\n//     else\n//         options = optimset('Display','off');\n//     end\n//     [b, fmin,flag] = fminsearch(@fun, b0, options);\n//     warning('off')\n// end\n\n// // FUN Optimization function\n// function optimizationFun(par) {\n//     global C %dC\n//     global w1 w2\n\n//     % upack parameter\n// \tI0 = par(4);\n\n//     % set time span\n//     tspan = 0:length(C)-1;  \n\n//     % solve ODE\n//     try\n//         warning('off')\n//         [tsol,Csol] = ode45(@(t,y) odeFun(t,y,par), tspan, I0);\n//         warning('on')\n//     catch\n//         f = NaN;\n//         warning('on')\n//         return\n//     end\n\n//     % check if calculation time equals sample time\n//     if length(tsol) ~= length(tspan)\n//         f = NaN;\n//         return\n//     end\n\n//     % clean data MB 20/04/23\n//     Cc = C;\n//     Cc(isnan(C)) = [];\n//     Csol(isnan(C)) = [];\n//     Cc = Cc';\n\n//     % calculate optimization function\n//     c1 = w1/(w1 + w2);\n//     c2 = w2/(w1 + w2);\n//     f1 = 0;\n//     f2 = 0;\n//     if c2 > 0\n//         f2 = norm((diff(Cc) - diff(Csol)));\n//     end\n//     if c1 > 0\n//         f1 = norm((Cc - Csol));\n//     end\n//     f =  c1*f1  +  c2*f2;   \n// }\n\nfunction vec_subtraction(v1, v2) {\n  if (v1.length !== v2.length) {\n    return NaN;\n  }\n  const v = [];\n  for (var i = 0; i < v1.length; i++) {\n    v.push(v1[i] - v2[i]);\n  }\n  return v;\n}\n\nfunction diff(C) {\n  var dC = [];\n  for (var i = 1; i < C.length; i++) {\n    dC.push(C[i] - C[i - 1]);\n  }\n  return dC;\n}\n\nfunction norm(C) {\n  var sum = 0;\n  for (var i = 0; i < C.length; i++) {\n    sum += C[i] * C[i];\n  }\n  return Math.sqrt(sum);\n}\n\nfunction calcClim(par) {\n  // %CALCCLIM Calculate number of recoverd individuals after t=inf\n  const beta = par[0];\n  const gamma = par[1];\n  const N = par[2];\n  const I0 = par[3];\n  return calcEndPoint(beta, gamma, I0 / N) * N;\n}\n\nfunction calcCm(par) {\n  // %CALCCM Calculate number of cases at inflection point\n  const beta = par[0];\n  const gamma = par[1];\n  const N = par[2];\n  const I0 = par[3];\n  return calcInflectionPoint(beta, gamma, I0 / N) * N;\n}\n\n// %CALCTM Calculate peak time\nfunction calcTm(par, Cm) {\n  const fun = function (c) {\n    const tt = (1 - c) * (beta * c + gamma * Math.log((1 - c) / (1 - c0)));\n    return 1. / tt;\n  }\n  const beta = par[0];\n  const gamma = par[1];\n  const N = par[2];\n  const c0 = par[3] / N;\n  return integral(fun, c0, Cm / N);\n}\n\n// function res = calcTend(par,Clim,nn)\n// %CALCTM Calculate end time\nfunction calcTend(par, Clim, nn) {\n  nn = nn || 1;  // number of infected left\n\n  const fun = function (c) {\n    const tt = (1 - c) * (beta * c + gamma * Math.log((1 - c) / (1 - c0)));\n    return 1. / tt;\n  }\n  const beta = par[0];\n  const gamma = par[1];\n  const N = par[2];\n  const c0 = par[3] / N;\n  return integral(fun, c0, (Clim - nn) / N);\n}\n\nfunction calcEndPoint(beta, gamma, c0) {\n  // %CALCENDPOINT Calculate end density \n  return 1 + gamma / beta * flambertw(-beta * (1 - c0) * Math.exp(-beta / gamma) / gamma);\n}\n\nfunction calcInflectionPoint(beta, gamma, c0) {\n  // %CALCINFLECTIONPOINT Calculate inflection point for density curve\n  return 1 + (gamma / 2 / beta) * flambertw(-1, -2 * beta * (1 - c0) * Math.exp(-(1 + beta / gamma)) / gamma);\n}\n\n// INIGUESS Initial guess for logistic regression\n// calculate initial K, r, A using data from three equidistant points \n//\n// Input:\n//   C -- data\n//\n// Output:\n//   b0 -- initial guess = [K r A]' or [] if calculation fails\nfunction iniGuess(C) {\n  var b0 = [];\n  const n = C.length;\n\n  if (n <= 5) {\n    return b0;\n  }\n\n  const nmax = n - 5;\n\n  for (var i = 1; i <= nmax; i++) {\n    var k1, k2, k3;\n    // calculate time interval for equidistant points: k-2*m, k-m, k\n    if (((n - i + 1) % 2) === 0) {\n      k1 = i;\n      k3 = n - 1;\n    } else {\n      k1 = i;\n      k3 = n;\n    }\n    k2 = (k1 + k3) / 2;\n    const m = k2 - k1 - 1;\n\n    if (k1 < 1 || k2 < 1 || k3 < 1 || m < 1) {\n      break;\n    }\n\n    if (isNaN(C[k1 - 1]) || isNaN(C[k2 - 1]) || isNaN(C[k3 - 1])) {\n      continue;\n    }\n\n    // % calculate K, r, A ...\n\n    // %.. calculate K\n    const q = C[k2 - 1] ** 2 - C[k3 - 1] * C[k1 - 1];\n    if (q <= 0) {\n      // fprintf('***Warning: iniGuess q = %g  k1 = %d k2= %d k3 = %d \\n',...\n      //          q, k1, k2, k3)\n      continue;\n    }\n    const p = C[k1 - 1] * C[k2 - 1] - 2 * C[k1 - 1] * C[k3 - 1] + C[k2 - 1] * C[k3 - 1];\n    if (p <= 0) {\n      // fprintf('***Warning: iniGuess p = %g\\n',p)\n      continue;\n    }\n    const K = C[k2 - 1] * p / q;\n\n    // % ... calculate r\n    const r = Math.log(C[k3 - 1] * (C[k2 - 1] - C[k1 - 1]) / C[k1 - 1] / (C[k3 - 1] - C[k2 - 1])) / m;\n    if (r < 0) {\n      // fprintf('***Warning: iniGuess r = %g\\n',r)\n      continue;\n    }\n\n    // %... calculate A\n    const A = (C[k3 - 1] - C[k2 - 1]) * (C[k2 - 1] - C[k1 - 1]) / q * (C[k3 - 1] * (C[k2 - 1] - C[k1 - 1]) / C[k1 - 1] / (C[k3 - 1] - C[k2 - 1])) ** ((k3 - m) / m);\n    if (A <= 0) {\n      //     %   fprintf('***Warning: iniGuess A = %g\\n',r)\n      continue;\n    }\n\n    // % this is initial guess\n    b0 = [K, r, A];\n    break;\n  }\n  return b0;\n}\n\nfunction flambertw(n, x) {\n  // The lambert-w-function doesn't work for numbers less than e so manually replicating the fitVirusCV19 code\n  if (typeof (x) === \"undefined\") {\n    x = n;\n    n = 0;\n  }\n\n  const zmax = 1e6;\n  const z0 = -1 / Math.exp(1) + 10 * Number.EPSILON;  // This Epsilon matches the one in MATLAB\n\n  const fun = (y) => y * Math.exp(y) - x;\n\n  switch (n) {\n    case -1:\n      if (x < z0 || x > 0) {\n        return NaN;\n      } else if (x === 0) {\n        return Number.POSITIVE_INFINITY;\n      } else if (x < 0) {\n        return fzero(fun, [-zmax, -1]);\n      }\n      break;\n    case 0:\n      if (x < z0) {\n        return NaN;\n      } else if (x === 0) {\n        return 0;\n      } else if (x < 0) {\n        return fzero(fun, [-1, 0]);\n      } else {\n        return fzero(fun, [0, zmax]);\n      }\n    default:\n      throw new Error('**flamberw: invalid n');\n  }\n}\n\nfunction fzero(fun, range) {\n  return uniroot(fun, range[0], range[1]);\n}\n\n// From https://gist.github.com/borgar/3317728\n/**\n * Searches the interval from <tt>lowerLimit</tt> to <tt>upperLimit</tt>\n * for a root (i.e., zero) of the function <tt>func</tt> with respect to\n * its first argument using Brent's method root-finding algorithm.\n *\n * Translated from zeroin.c in http://www.netlib.org/c/brent.shar.\n *\n * Copyright (c) 2012 Borgar Thorsteinsson <borgar@borgar.net>\n * MIT License, http://www.opensource.org/licenses/mit-license.php\n *\n * @param {function} function for which the root is sought.\n * @param {number} the lower point of the interval to be searched.\n * @param {number} the upper point of the interval to be searched.\n * @param {number} the desired accuracy (convergence tolerance).\n * @param {number} the maximum number of iterations.\n * @returns an estimate for the root within accuracy.\n *\n */\nfunction uniroot(func, lowerLimit, upperLimit, errorTol, maxIter) {\n  var a = lowerLimit\n    , b = upperLimit\n    , c = a\n    , fa = func(a)\n    , fb = func(b)\n    , fc = fa\n    , tol_act   // Actual tolerance\n    , new_step  // Step at this iteration\n    , prev_step // Distance from the last but one to the last approximation\n    , p         // Interpolation step is calculated in the form p/q; division is delayed until the last moment\n    , q\n    ;\n\n  errorTol = errorTol || 0;\n  maxIter = maxIter || 1000;\n\n  while (maxIter-- > 0) {\n\n    prev_step = b - a;\n\n    if (Math.abs(fc) < Math.abs(fb)) {\n      // Swap data for b to be the best approximation\n      a = b;\n      b = c;\n      c = a;\n      fa = fb;\n      fb = fc;\n      fc = fa;\n    }\n\n    tol_act = 1e-15 * Math.abs(b) + errorTol / 2;\n    new_step = (c - b) / 2;\n\n    if (Math.abs(new_step) <= tol_act || fb === 0) {\n      return b; // Acceptable approx. is found\n    }\n\n    // Decide if the interpolation can be tried\n    if (Math.abs(prev_step) >= tol_act && Math.abs(fa) > Math.abs(fb)) {\n      // If prev_step was large enough and was in true direction, Interpolatiom may be tried\n      var t1, cb, t2;\n      cb = c - b;\n      if (a === c) { // If we have only two distinct points linear interpolation can only be applied\n        t1 = fb / fa;\n        p = cb * t1;\n        q = 1.0 - t1;\n      }\n      else { // Quadric inverse interpolation\n        q = fa / fc; t1 = fb / fc; t2 = fb / fa;\n        p = t2 * (cb * q * (q - t1) - (b - a) * (t1 - 1));\n        q = (q - 1) * (t1 - 1) * (t2 - 1);\n      }\n\n      if (p > 0) {\n        q = -q;  // p was calculated with the opposite sign; make p positive\n      }\n      else {\n        p = -p;  // and assign possible minus to q\n      }\n\n      if (p < (0.75 * cb * q - Math.abs(tol_act * q) / 2) &&\n        p < Math.abs(prev_step * q / 2)) {\n        // If (b + p / q) falls in [b,c] and isn't too large it is accepted\n        new_step = p / q;\n      }\n\n      // If p/q is too large then the bissection procedure can reduce [b,c] range to more extent\n    }\n\n    if (Math.abs(new_step) < tol_act) { // Adjust the step to be not less than tolerance\n      new_step = (new_step > 0) ? tol_act : -tol_act;\n    }\n\n    a = b; fa = fb;     // Save the previous approx.\n    b += new_step; fb = func(b);  // Do step to a new approxim.\n\n    if ((fb > 0 && fc > 0) || (fb < 0 && fc < 0)) {\n      c = a; fc = fa; // Adjust c for it to have a sign opposite to that of b\n    }\n  }\n}\n","import { fitVirusCV19 } from \"../math/FitVirusCV19\";\nimport { ma } from 'moving-averages'\nconst moment = require('moment');\nconst { linearRegression } = require('simple-statistics');\n\nconst periods = {\n  daily: {\n    doublingLabel: 'Days to Double',\n    smoothLabel: 'd',\n    formatter: (moment) => moment.format('M/D'),\n    intervalS: 24 * 60 * 60,\n    converter: (data) =>\n      data\n        .map(([timestamp, value]) => [moment.unix(timestamp), value])\n        .sort(([a,], [b,]) => a.diff(b)),\n    pointConverter: ([timestamp, value]) => [moment.unix(timestamp), value],\n  },\n};\n\nconst REGRESSION_WINDOW_SIZE = 6;\nconst SMOOTH_WINDOW_SIZE = 3;\n\n/**\n * A data series is a label with a collection of values at specific moments.\n */\nexport class DataSeries {\n\n  static fromTimestamps(label, raw) {\n    if (raw.length > 0) {\n      return new DataSeries(label, raw, periods.daily);\n    } else {\n      return new EmptySeries(label, periods.daily);\n    }\n  }\n\n  static fromOldDataSourceDataPoints(label, data, column) {\n    let raw = [];\n    for (const point of data) {\n      let ts = moment(point.fulldate, \"MM/DD/YYYY\").unix();\n      let value = point[column];\n      raw.push([ts, value]);\n    }\n    return new DataSeries(label, raw, periods.daily);\n  }\n\n  static fromDateStr(label, data) {\n    let raw = [];\n    for (var key in data) {\n      let ts = moment(key, \"MM/DD/YYYY\").unix();\n      let value = data[key];\n      raw.push([ts, value]);\n    }\n    return new DataSeries(label, raw, periods.daily);\n  }\n\n  static flatten(serieses) {\n    const points = new Map();\n    const formatters = new Set();\n\n    for (const series of serieses) {\n      if (!series) {\n        continue;\n      }\n      formatters.add(series.formatter());\n\n      if (!series.points()) {\n        continue;\n      }\n\n      for (const [moment, value] of series.points()) {\n        const key = moment.unix();\n        if (!points.has(key)) {\n          points.set(key, {});\n        }\n\n        points.get(key)[series.label()] = value;\n      }\n    }\n\n    if (formatters.size > 1) {\n      throw new Error('Multiple formatters are not allowed');\n    } else if (formatters.size === 0) {\n      throw new Error('No formatter found');\n    }\n    const formatter = formatters.values().next().value;\n\n    return {\n      data:\n        [...points.entries()]\n          .sort(([a,], [b,]) => a - b)\n          .map(([timestamp, data]) => ({\n            timestamp,\n            ...data,\n          })),\n      timestampFormatter: (timestamp) => formatter(moment.unix(timestamp)),\n    };\n  }\n\n  static alignT0(serieses) {\n    const points = new Map();\n    for (const series of serieses) {\n      if (!series.points()) {\n        continue;\n      }\n\n      for (const [moment, value] of series.points()) {\n        let t0 = series.t0_;\n        const key = moment.unix() - t0;\n        if (key >= 0) {\n          if (!points.has(key)) {\n            points.set(key, {});\n          }\n          points.get(key)[series.label()] = value;\n        }\n      }\n    }\n\n    return {\n      data:\n        [...points.entries()]\n          .sort(([a,], [b,]) => a - b)\n          .map(([timestamp, data]) => ({\n            timestamp,\n            ...data,\n          })),\n      timestampFormatter: (timestamp) => timestamp / (24 * 60 * 60),\n    };\n  }\n\n  constructor(label, raw, period) {\n    this.label_ = label;\n    this.raw_ = raw;\n    this.period_ = period;\n    this.points_ = undefined;\n    this.lastPoint_ = undefined;\n  }\n\n  label() {\n    return this.label_;\n  }\n\n  suffixLabel(suffix) {\n    this.label_ = `${this.label_} ${suffix}`;\n    return this;\n  }\n\n  setT0(t0) {\n    this.t0_ = t0;\n    return this;\n  }\n\n  formatter() {\n    return this.period_.formatter;\n  }\n\n  setLabel(label) {\n    this.label_ = label;\n    return this;\n  }\n\n  points() {\n    if (!this.points_ && this.raw_.length > 0) {\n      this.points_ = this.period_.converter(this.raw_);\n    }\n    return this.points_;\n  }\n\n  pointLargerEqualThan(x) {\n    for (const [m, v] of this.points_) {\n      if (v >= x) {\n        return [m, v];\n      }\n    }\n    return null;\n  }\n\n  valueByUnixTimestamp(date) {\n    if (!this.valueByUnixTimestamp_ && this.raw_.length > 0) {\n      this.valueByUnixTimestamp_ = this.raw_.reduce(\n        (m, a) => {\n          const [ts, v] = a;\n          m[ts] = v;\n          return m;\n        }, {});\n    }\n    const value = this.valueByUnixTimestamp_[date];\n    return value;\n  }\n\n  lastPoint() {\n    if (!this.lastPoint_ && this.raw_.length > 0) {\n      this.lastPoint_ =\n        this.period_.pointConverter(this.raw_[this.raw_.length - 1]);\n    }\n    return this.lastPoint_;\n  }\n\n  lastValue() {\n    if (this.lastPoint()) {\n      return this.lastPoint()[1];\n    } else {\n      return undefined;\n    }\n  }\n\n  change() {\n    const name = `New ${this.label_}`;\n    this.points(); // To ensure lazy dataseries are loaded\n    const entries = this.points_ || this.raw_;\n    if (entries.length < 1) {\n      return new EmptySeries(name, this.period_);\n    }\n\n    // We often only want to know the change between the last two values, so\n    // pregenerate those.\n    // Every* series has an implicit first value of 0, because places only show\n    // up in the data when they have a case. So account for it.\n    //\n    // *except for projections\n    const secondToLastValue =\n      entries.length >= 2 ? entries[entries.length - 2][1] : 0;\n    if (typeof entries[0][0] === 'number') {\n      this.lastPoint_ = this.period_.pointConverter(entries[entries.length - 1]);\n    } else {\n      this.lastPoint_ = entries[entries.length - 1];\n    }\n    const lastChange = this.lastPoint_[1] - secondToLastValue;\n\n    const generator = () => {\n      const points = this.points();\n      const deltaPoints = [];\n      deltaPoints.push([points[0][0], points[0][1]]);\n      for (let i = 1; i < points.length; ++i) {\n        deltaPoints.push([\n          points[i][0],\n          Math.max(0, points[i][1] - points[i - 1][1]),\n        ]);\n      }\n      return deltaPoints;\n    };\n\n    return new LazyDataSeries(\n      name,\n      generator,\n      [this.lastPoint_[0], lastChange],\n      this.period_);\n  }\n\n  daysTo2X() {\n    let points = this.doublingInterval().points();\n    if (points) {\n      for (let i = points.length - 1; i >= 0; i--) {\n        let v = points[i][1];\n        if (!isNaN(v)) {\n          return v;\n        }\n      }\n    }\n    return 9999;\n  }\n\n  dailyGrowthRate() {\n    return Math.exp(Math.log(2) * (1 / this.daysTo2X())) - 1;\n  }\n\n  doublingInterval() {\n    const name = `${this.label_} ${this.period_.doublingLabel}`;\n\n    const entries = this.points_ || this.raw_;\n    if (entries.length < REGRESSION_WINDOW_SIZE) {\n      return new EmptySeries(name, this.period_);\n    }\n\n    const lastWindow = entries.slice(entries.length - REGRESSION_WINDOW_SIZE);\n    const lastLogs =\n      lastWindow\n        .map(([timestamp, v]) => [timestamp, Math.log2(v)]);\n    const { m } = linearRegression(lastLogs);\n    const value = 1 / (m * this.period_.intervalS);\n    const lastDoubleValue = !isNaN(value) && 0 < value && value <= 100 ? value : NaN;\n    const lastDouble = [this.lastPoint()[0], lastDoubleValue];\n\n    const generator = () => {\n      const points = this.points();\n      const log = points.map(([m, v]) => [m.unix(), Math.log2(v)]);\n      const doublings = [];\n      for (let i = REGRESSION_WINDOW_SIZE; i < points.length - 1; ++i) {\n        const window = log.slice(i - REGRESSION_WINDOW_SIZE, i + 1);\n        const { m } = linearRegression(window);\n        const value = 1 / (m * this.period_.intervalS);\n        doublings.push([\n          points[i][0],\n          !isNaN(value) && 0 < value && value <= 100 ? value : NaN,\n        ]);\n      }\n\n      doublings.push(lastDouble);\n      return doublings;\n    };\n\n    return new LazyDataSeries(name, generator, lastDouble, this.period_);\n  }\n\n  /**\n   * Removes the first point from the series. This is useful for when taking the\n   * change of a series that does not start from 0.\n   */\n  dropFirst() {\n    const points = this.points();\n    if (!points || points.length < 1) {\n      return undefined;\n    }\n\n    const dropped = new DataSeries(this.label_, undefined, this.period_);\n    dropped.points_ = points.slice(1);\n    return dropped;\n  }\n\n  last2PointSeries() {\n    const points = this.points();\n    if (!points || points.length < 2) {\n      return new EmptySeries(\"empty\", this.period_);\n    }\n    const dropped = new DataSeries(this.label_, undefined, this.period_);\n    dropped.points_ = [\n      points[points.length - 2],\n      points[points.length - 1],\n    ];\n    return dropped;\n  }\n\n  dropLastPoint() {\n    const points = this.points();\n    if (!points || points.length < 1) {\n      return undefined;\n    }\n    const dropped = new DataSeries(this.label_, undefined, this.period_);\n    dropped.points_ = points.slice(0, points.length - 1);\n\n    return dropped;\n  }\n\n  divide(inputseries) {\n    console.assert(this.points().length === inputseries.points().length);\n    const points = this.points();\n    const denominator = inputseries.points();\n\n    const result = [];\n    for (let i = 0; i < points.length; i++) {\n      result.push([\n        points[i][0],\n        points[i][1] / denominator[i][1],\n      ]);\n    }\n\n    const series = new DataSeries(\"division\", undefined, this.period_);\n    series.points_ = result;\n    console.log(result);\n    return series;\n  }\n\n  nDayAverage(MOVING_WIN_SIZE) {\n    const name = `${this.label_} (${MOVING_WIN_SIZE}-${this.period_.smoothLabel} avg)`;\n    let points = this.points();\n    if (!points) {\n      return new EmptySeries(name, this.period_);\n    }\n\n    const values = points.map(p => p[1]);\n    let avg = ma(values, MOVING_WIN_SIZE);\n    const smoothed = [];\n\n    for (let i = 0; i < points.length; i++) {\n      smoothed.push([\n        points[i][0],\n        avg[i],\n      ]);\n    }\n\n    const series = new DataSeries(name, undefined, this.period_);\n    series.points_ = smoothed;\n    return series;\n  }\n\n  smooth() {\n    const name = `${this.label_} (${SMOOTH_WINDOW_SIZE} ${this.period_.smoothLabel} avg)`;\n\n    const points = this.points();\n    if (points.length < SMOOTH_WINDOW_SIZE) {\n      return new EmptySeries(name, this.period_);\n    }\n\n    const smoothed = [];\n    for (let i = SMOOTH_WINDOW_SIZE - 1; i < points.length; ++i) {\n      const window = points.slice(i - SMOOTH_WINDOW_SIZE + 1, i + 1)\n      const sum = window.reduce((sum, [, v]) => Math.max(v, 0) + sum, 0);\n      smoothed.push([\n        points[i][0],\n        sum / SMOOTH_WINDOW_SIZE,\n      ]);\n    }\n\n    const series = new DataSeries(name, undefined, this.period_);\n    series.points_ = smoothed;\n    return series;\n  }\n\n  capita(population) {\n    const name = `${this.label_}`;\n\n    const points = this.points();\n    const capita = [];\n    for (let i = 0; i < points.length; ++i) {\n      capita.push([\n        points[i][0],\n        points[i][1] / population,\n      ]);\n    }\n\n    const series = new DataSeries(name, undefined, this.period_);\n    series.points_ = capita;\n    return series;\n  }\n\n  sum() {\n    let sum = 0;\n    for (const [, value] of this.points()) {\n      sum += value;\n    }\n    return sum;\n  }\n\n  trend() {\n    const points = this.points();\n    if (!points || points.length < 8) {\n      return undefined;\n    }\n\n    const linear = trendFit(this.label_, points, this.period_, (v) => v, (p) => p);\n    const log =\n      trendFit(\n        this.label_,\n        points,\n        this.period_,\n        (v) => Math.log2(v),\n        (p) => Math.exp(p * Math.log(2)));\n\n    if (linear.error < log.error) {\n      return linear.series;\n    } else {\n      return log.series;\n    }\n  }\n\n  fitVirusCV19Prediction() {\n    const name = `Prediction for ${this.label_}`;\n\n    const generator = () => {\n      try {\n        const points = this.points();\n        if (points.length < 1) {\n          return new EmptySeries(name, this.period_);\n        }\n        const startdate = points[0][0].unix();\n        const C = points.map((p) => p[1]);\n        const [Ca, newstartdate] = fitVirusCV19(C, startdate);\n        return Ca.map((v, i) => [moment.unix(newstartdate.unix()).add(i, 'days'), v]);\n      } catch {\n        return new EmptySeries(name, this.period_);\n      }\n    };\n\n    return new LazyDataSeries(name, generator, this.lastPoint(), this.period_);\n  }\n\n  today() {\n    const last = this.lastPoint();\n    if (!last) {\n      return undefined;\n    }\n\n    return moment().isSame(last[0], 'day') ? last[1] : undefined;\n  }\n\n  // if ts is in the future, return the last valid datapoint\n  dateOrLastValue(ts) {\n    const [mdate, v] = this.lastPoint();\n    if (mdate.unix() < ts) {\n      return v;\n    } else {\n      return this.valueByUnixTimestamp(ts);\n    }\n  }\n\n  // if ts is in the future, return the last valid datapoint\n  dateOrLastValueNew(ts) {\n    const [mdate] = this.lastPoint();\n    let t0 = (mdate.unix() < ts) ? mdate.unix() : ts;\n    // let tminus1 = moment(t0).subtract(1, \"days\").unix();\n    let tminus1 = t0 - 24 * 60 * 60;\n    let v0 = this.valueByUnixTimestamp(t0);\n    let v1 = this.valueByUnixTimestamp(tminus1);\n    return v0 - v1;\n  }\n}\n\nclass EmptySeries extends DataSeries {\n\n  constructor(label, period) {\n    super(label, [], period);\n  }\n}\n\nclass LazyDataSeries extends DataSeries {\n\n  constructor(label, generator, lastPoint, period) {\n    super(label, undefined, period);\n    this.generator_ = generator;\n    this.lastPoint_ = lastPoint;\n  }\n\n  points() {\n    if (!this.points_) {\n      this.points_ = this.generator_();\n    }\n    return this.points_;\n  }\n}\n\nfunction positiveOrNothing(value) {\n  return value >= 0 ? value : NaN;\n}\n\nfunction trendFit(label, points, period, valueMapper, predictionMapper) {\n  const { m, b } =\n    linearRegression(\n      points.slice(-1 - REGRESSION_WINDOW_SIZE, -1)\n        .map(([moment, v]) => [moment.unix(), valueMapper(v)]));\n  if (isNaN(m) || isNaN(b)) {\n    return { series: undefined, error: 9999999999 };\n  }\n\n  const trend =\n    new DataSeries(`${label} (Trend)`, undefined, period);\n  trend.points_ =\n    points.map(([moment,]) =>\n      [moment, predictionMapper(positiveOrNothing(m * moment.unix() + b))]);\n\n  let error = 0;\n  for (let i = 0; i < points.length; ++i) {\n    const difference = points[i][1] - (trend.points_[i][1] || 0);\n    error += difference * difference;\n  }\n\n  return { series: trend, error };\n}\n","import routes from \"./Routes\";\nimport { reverse } from 'named-urls';\nimport { trimLastDaysData, getDay2DoubleTimeSeries, getGrowthRateTimeSeries } from \"./CovidAnalysis\";\nimport { CountyInfo } from 'covidmodule';\nimport { fetchNPRProjectionData } from \"./NPRProjection\"\nimport { fetchTestingDataStates, fetchTestingDataUS } from \"./TestingData\"\nimport { fetchPublicCountyData, fetchAllUSData } from \"./PublicAllData\"\nimport { mergeDataSeries, makeDataSeriesFromTotal } from \"./graphs/DataSeries\";\nimport { DataSeries } from './models/DataSeries';\n\nconst CovidData = require('./data/AllData.slim.json');\nconst CountyGeoData = require('./data/county_gps.json');\nconst geolib = require('geolib');\nconst moment = require('moment');\nconst stateBounds = require(\"./data/states-bounding.json\");\n\nconst statemap = stateBounds.reduce((m, b) => {\n  m[b.STATEFP] = b;\n  return m;\n}, {});\n\nconst UNKNOWN_COUNTY_NAME = \"Unknown\";\n\nfunction datesToDataPoints(raw) {\n  const days = Object.keys(raw.Confirmed).sort(sortByDate);\n  let projection = null;\n  if (raw.ProjectionMIT) {\n    projection = makeDataSeriesFromTotal(raw.ProjectionMIT.Confirmed, \"confirmed_projected\", \"confirmed_new_projected\");\n  }\n\n  let data = days.map(day => {\n    const entry = {};\n    entry.confirmed = raw.Confirmed[day];\n    entry.death = raw.Death[day];\n    if (raw.Recovered) {\n      entry.recovery = raw.Recovered[day];\n    }\n    entry.fulldate = day;\n    return entry;\n  });\n\n  data = mergeDataSeries(data, projection);\n  return data;\n}\n\nfunction sortByDate(a, b) {\n  return moment(a, 'MM/DD/YYYY').toDate() - moment(b, 'MM/DD/YYYY').toDate();\n}\n\nexport class CovidSummarizable {\n  constructor(raw) {\n    this.covidRaw_ = raw;\n    if (this.covidRaw_) {\n      if (this.covidRaw_.Summary) {\n        this.normalizedRaw_ = this.covidRaw_.Summary;\n      } else {\n        this.normalizedRaw_ = this.covidRaw_;\n      }\n    }\n  }\n\n  hospitals() {\n    if (!this.normalizedRaw_) {\n      return {\n        'bedCount': \"N/A\",\n        'count': \"N/A\",\n      };\n    }\n\n    return {\n      count: this.normalizedRaw_.hospitals, // to be deprecated\n      bedCount: this.normalizedRaw_.beds,   // to be deprecated\n      bedsICU: this.normalizedRaw_.bedsICU,\n      bedsAvail: this.normalizedRaw_.bedsAvail,\n      hospitals: this.normalizedRaw_.hospitals,\n      beds: this.normalizedRaw_.beds,\n    };\n  }\n\n  summary() {\n    if (!this.normalizedRaw_) {\n      return {\n        confirmed: 0,\n        newcases: 0,\n        deathsNew: 0,\n        death: 0,\n        newpercent: 0,\n        daysToDouble: null,\n        daysToDoubleDeath: null,\n      };\n    }\n\n    const confirmed = this.normalizedRaw_.LastConfirmed;\n    const newcases = this.normalizedRaw_.LastConfirmedNew;\n    const summarized = {\n      confirmed: confirmed,\n      deaths: this.normalizedRaw_.LastDeath,\n      deathsNew: this.normalizedRaw_.LastDeathNew,\n      newcases: newcases,\n      newpercent: newcases / (confirmed - newcases),\n      recovered: this.normalizedRaw_.LastRecovered,\n      recoveredNew: this.normalizedRaw_.LastRecoveredNew,\n      tests: this.normalizedRaw_.totalTests,\n    };\n\n    if (this.normalizedRaw_.DaysToDouble) {\n      summarized.daysToDouble = this.normalizedRaw_.DaysToDouble;\n    }\n    if (this.normalizedRaw_.DaysToDoubleDeath) {\n      summarized.daysToDoubleDeath = this.normalizedRaw_.DaysToDoubleDeath;\n    }\n    if (this.normalizedRaw_.generated) {\n      summarized.generatedTime =\n        (new Date(this.normalizedRaw_.generated)).toString();\n    }\n\n    return summarized;\n  }\n\n  totalConfirmed() {\n    return this.summary().confirmed;\n  }\n\n  serverityIndex() {\n    if (!this.population()) {\n      return 0;\n    }\n    return this.normalizedRaw_.Last2WeeksConfirmedDelta / this.population();\n  }\n}\n\nexport class Country extends CovidSummarizable {\n\n  constructor() {\n    super(CovidData);\n    this.fetchedAllData = false;\n\n    // Metros span state lines, but we have a notion of a hierarchy in\n    // header:\n    // county -> metro (maybe) -> state -> country\n    //\n    // To make this work, we make a Metro object for every state a metro\n    // intersects. metroByStatesByIds_ is a\n    // Map<metro id, Map<state two letter code, Metro>>\n    this.metroByStatesByIds_ = new Map();\n    this.statesById_ = new Map();\n    this.statesByTwoLetterName_ = new Map();\n    this.countiesById_ = new Map();\n    this.name = \"United States\";\n    this.shortName = \"US\";\n\n    for (const [id, data] of Object.entries(this.covidRaw_)) {\n      // Check if this looks like a state FIPS id\n      if (isNaN(id)) {\n        continue;\n      }\n\n      const state = new State(id, data, this);\n      this.statesById_.set(id, state);\n      this.statesByTwoLetterName_.set(state.twoLetterName, state);\n    }\n\n    for (const data of CountyGeoData) {\n      const id = data.FIPS.padStart(5, '0');\n      const stateId = id.substring(0, 2);\n      this.statesById_.get(stateId).countyForId(id).update(data);\n    }\n\n    for (const state of this.statesById_.values()) {\n      for (const county of state.allCounties()) {\n        this.countiesById_.set(county.id, county);\n      }\n    }\n\n    for (const [id, data] of Object.entries(this.covidRaw_.Metros)) {\n      const metroByStates = new Map();\n      this.metroByStatesByIds_.set(id, metroByStates);\n\n      const states = new Set();\n      for (const county of data.Counties) {\n        states.add(this.countiesById_.get(county).state());\n      }\n      states.forEach(state => {\n        state.addMetro(id, data, this);\n        metroByStates.set(state.id, state.metroForId(id));\n      });\n    }\n\n    this.statesById_.forEach(state => state.reindex());\n  }\n\n  async fetchAllUSCountyData() {\n    if (this.fetchedAllData) {\n      return;\n    }\n    let countydata = await fetchAllUSData();\n    for (const [id, stateraw] of Object.entries(countydata)) {\n      // Check if this looks like a state FIPS id\n      if (isNaN(id)) {\n        continue;\n      }\n\n      for (const [fips, countyraw] of Object.entries(stateraw)) {\n        if (isNaN(fips)) {\n          continue;\n        }\n        const county = this.countiesById_.get(fips);\n        county.covidRaw_ = countyraw;\n      }\n    }\n    this.fetchedAllData = true;\n  }\n\n  parent() {\n    return undefined;\n  }\n\n  children() {\n    return this.allStates();\n  }\n\n  testData() {\n    return {\n      totalTests: this.covidRaw_.Summary.totalTests,\n      totalTestPositive: this.covidRaw_.Summary.totalTestPositive,\n      hospitalized: this.covidRaw_.Summary.hospitalized,\n      hospitalizedIncreased: this.covidRaw_.Summary.hospitalizedIncreased,\n    }\n  }\n\n  countyForId(id) {\n    return this.countiesById_.get(id);\n  }\n\n  allStates() {\n    return [...this.statesById_.values()];\n  }\n\n  allCounties() {\n    return [...this.countiesById_.values()];\n  }\n\n  metroByStatesForId(id) {\n    return this.metroByStatesByIds_.get(id);\n  }\n\n  allMetros() {\n    return Array.from(this.metroByStatesByIds_.values())\n      .map(\n        metroByStates =>\n          // Only grab one state if it spans state lines\n          metroByStates.values().next().value);\n  }\n\n  stateForId(id) {\n    return this.statesById_.get(id);\n  }\n\n  stateForTwoLetterName(id) {\n    return this.statesByTwoLetterName_.get(id);\n  }\n\n  routeTo() {\n    return routes.united_states;\n  }\n\n  async dataPointsAsync() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n\n  dataPoints() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n\n  async confirmDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Confirmed\", data, \"confirmed\");\n  }\n\n  async deathDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Death\", data, \"death\");\n  }\n\n  async deathsAsync() {\n    return this.covidRaw_.Summary.Death;\n  }\n\n  async projectionsAsync() {\n    let data = await fetchNPRProjectionData();\n    return data.filter(d => d.location_name === \"United States of America\");\n  }\n\n  async testingAsync() {\n    return await fetchTestingDataUS();\n  }\n\n  async testingAllAsync() {\n    let data = await fetchTestingDataStates();\n    return data;\n  }\n\n  async hospitalizationCurrentlyAsync() {\n    const data = await fetchTestingDataUS();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\n        \"Hospitalized Currently\",\n        data,\n        \"hospitalizedCurrently\"\n      );\n  }\n\n  async daysToDoubleTimeSeries() {\n    let confirmed = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Confirmed)\n    );\n    let death = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n\n  population() {\n    return 331002651;\n  }\n\n  async growthRateTimeSeries() {\n    let confirmed = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Confirmed)\n    );\n    let death = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n\n  countyMapConfig() {\n    return {\n      geoUrl: \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\",\n      projection: {\n        projection: \"geoAlbersUsa\",\n      }\n    }\n  }\n}\n\nexport class State extends CovidSummarizable {\n  constructor(id, covidRaw, country) {\n    super(covidRaw);\n\n    this.id = id;\n    this.country_ = country;\n    this.name = CountyInfo.getStateNameFromFips(id);\n    this.twoLetterName = Object.values(covidRaw)[0]['StateName']\n    this.shortName = this.twoLetterName;\n\n    if (!this.twoLetterName) {\n      this.twoLetterName = CountyInfo.getStateAbbreviationFromFips(this.id);\n    }\n    this.counties_ = new Map();\n    this.countiesByName_ = new Map();\n    this.metros_ = new Map();\n    this.metrosByCounty_ = new Map();\n\n    // Force load counties so nearby works properly and we get \"Statewide\n    // Unallocated\"s.\n    for (const id of Object.keys(this.covidRaw_)) {\n      // Check if this looks like a county FIPS id\n      if (isNaN(id)) {\n        continue;\n      }\n\n      this.countyForId(id);\n    }\n    this.reindex();\n  }\n\n  fips() {\n    return this.id;\n  }\n\n  country() {\n    return this.country_;\n  }\n\n  parent() {\n    return this.country();\n  }\n\n  children() {\n    return this.allCounties();\n  }\n\n  addMetro(id, data, country) {\n    this.metros_.set(id, new Metro(id, data, this, country));\n  }\n\n  allCounties() {\n    return [...this.counties_.values()];\n  }\n\n  countyForId(id) {\n    if (!this.counties_.has(id)) {\n      this.counties_.set(id, new County(id, this.covidRaw_[id], this));\n    }\n    return this.counties_.get(id);\n  }\n\n  countyForName(name) {\n    return this.countiesByName_.get(name);\n  }\n\n  metroForId(id) {\n    return this.metros_.get(id);\n  }\n\n  metroContainingCounty(county) {\n    return this.metrosByCounty_.get(county);\n  }\n\n  routeTo() {\n    return reverse(routes.state, { state: this.twoLetterName });\n  }\n\n  confirmed() {\n    return this.covidRaw_.Summary.confirmed;\n  }\n\n  testData() {\n    return {\n      totalTests: this.covidRaw_.Summary.totalTests,\n      totalTestPositive: this.covidRaw_.Summary.totalTestPositive,\n      hospitalized: this.covidRaw_.Summary.hospitalized,\n      hospitalizedIncreased: this.covidRaw_.Summary.hospitalizedIncreased,\n    }\n  }\n\n  async dataPointsAsync() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n\n  dataPoints() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n\n  async confirmDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Confirmed\", data, \"confirmed\");\n  }\n\n  async deathDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Death\", data, \"death\");\n  }\n\n  async deathsAsync() {\n    return this.covidRaw_.Summary.Death;\n  }\n\n  newCases() {\n    return this.covidRaw_.Summary.LastConfirmedNew;\n  }\n\n  vaccineAdminSeries() {\n    return DataSeries.fromDateStr(\"Vaccine Admin\", this.covidRaw_.Summary.doses_admin_total);\n  }\n  vaccineShippedSeries() {\n    return DataSeries.fromDateStr(\"Vaccine Shippped\", this.covidRaw_.Summary.doses_shipped_total);\n  }\n  vaccineAllocSeries() {\n    return DataSeries.fromDateStr(\"Vaccine Allocated\", this.covidRaw_.Summary.doses_alloc_total);\n  }\n\n  population() {\n    return CountyInfo.getStatePopulation(this.twoLetterName);\n  }\n\n  async projectionsAsync() {\n    let data = await fetchNPRProjectionData();\n    return data.filter(d => d.location_name === this.name);\n  }\n\n  stayHomeOrder() {\n    return this.covidRaw_.Summary.StayHomeOrder;\n  }\n\n  async testingAsync() {\n    let data = await fetchTestingDataStates();\n    return data.filter(d => d.state === this.twoLetterName)\n      .sort((a, b) => a.date - b.date);\n  }\n\n  async hospitalizationCurrentlyAsync() {\n    const data = await this.testingAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\n        \"Hospitalized Currently\",\n        data,\n        \"hospitalizedCurrently\"\n      );\n  }\n\n  reindex() {\n    this.countiesByName_.clear();\n    this.counties_.forEach(county => {\n      if (county.name !== UNKNOWN_COUNTY_NAME) {\n        this.countiesByName_.set(county.name, county);\n      }\n    });\n\n    this.metrosByCounty_.clear();\n    this.metros_.forEach(metro => {\n      metro.counties_.forEach(county => {\n        this.metrosByCounty_.set(county, metro);\n      });\n    });\n  }\n  async daysToDoubleTimeSeries() {\n    let confirmed = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Confirmed)\n    );\n    let death = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n\n  async growthRateTimeSeries() {\n    let confirmed = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Confirmed)\n    );\n    let death = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n\n  getProjectionConfig_(state_fips) {\n    let state1 = statemap[state_fips];\n    let x = (parseFloat(state1.xmin) + parseFloat(state1.xmax)) / 2;\n    let y = (parseFloat(state1.ymin) + parseFloat(state1.ymax)) / 2;\n    let xscale =\n      (800 * 180) / (parseFloat(state1.xmax) - parseFloat(state1.xmin));\n    let yscale =\n      (600 * 180) / (parseFloat(state1.ymax) - parseFloat(state1.ymin));\n    let scale = xscale > yscale ? yscale : xscale;\n    scale = scale * 0.3;\n\n    // manually tune some state that doens't show up well.\n    if (state_fips === \"02\") {\n      return {\n        scale: 2000,\n        rotate: [149.4937, -64.2008, 0]\n      };\n    }\n    if (state_fips === \"15\") {\n      return {\n        scale: 5836,\n        rotate: [157.57, -19.65624, 0]\n      };\n    }\n    return {\n      scale: scale,\n      rotate: [-x, -y, 0]\n    };\n  }\n\n  countyMapConfig() {\n    const fips = this.fips();\n    if (fips === \"88\" || fips === \"99\" || fips === \"97\" || fips === \"98\" || fips === \"96\") {\n      return null;\n    }\n    return {\n      geoUrl: process.env.PUBLIC_URL + `/topojson/us-states/${this.twoLetterName}-${this.fips()}-${this.name.toLowerCase().replace(\" \", \"-\")}-counties.json`,\n      projection: {\n        projection: \"geoMercator\",\n        config: this.getProjectionConfig_(this.fips()),\n      }\n    }\n  }\n}\n\nexport class Metro extends CovidSummarizable {\n  constructor(id, covidRaw, state, country) {\n    super(covidRaw);\n\n    this.id = id;\n    this.state_ = state;\n    this.name = covidRaw['Name'];\n    this.counties_ = this.covidRaw_.Counties.map(id => {\n      // not all counties in a metro belong to the same state\n      // can't call state.countyForId() directly\n      return country.countyForId(id);\n    }).filter(c => c); // some county may not have data\n  }\n\n  children() {\n    return this.allCounties();\n  }\n\n  allCounties() {\n    return this.counties_;\n  }\n\n  state() {\n    return this.state_;\n  }\n\n  parent() {\n    return this.state();\n  }\n\n  population() {\n    let p = 0;\n    for (let c of this.counties_) {\n      p = p + c.population();\n    }\n    return p;\n\n  }\n\n  routeTo() {\n    return reverse(routes.metro, { metro: this.id });\n  }\n\n  async dataPointsAsync() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n  dataPoints() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n  async confirmDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Confirmed\", data, \"confirmed\");\n  }\n\n  async deathDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Death\", data, \"death\");\n  }\n  async deathsAsync() {\n    return this.covidRaw_.Summary.Death;\n  }\n\n  newCases() {\n    return this.covidRaw_.Summary.LastConfirmedNew;\n  }\n\n  async daysToDoubleTimeSeries() {\n    let confirmed = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Confirmed)\n    );\n    let death = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n\n  async growthRateTimeSeries() {\n    let confirmed = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Confirmed)\n    );\n    let death = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Summary.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n}\n\nexport class County extends CovidSummarizable {\n  constructor(id, covidRaw, state) {\n    super(covidRaw);\n\n    this.id = id;\n\n    if (covidRaw) {\n      this.name = covidRaw['CountyName'];\n      this.population_ = covidRaw.Population;\n      this.hospitalization_ = covidRaw.hospitalization;\n      this.ca_county_status = covidRaw.ca_county_status;\n\n    } else {\n      this.name = UNKNOWN_COUNTY_NAME;\n    }\n\n    if (this.name === \"New York City\") {\n      this.name = \"New York\";\n    }\n\n    this.state_ = state;\n  }\n\n  ca_status() {\n    return this.ca_county_status;\n  }\n\n  metro() {\n    return this.state_.metroContainingCounty(this);\n  }\n\n  state() {\n    return this.state_;\n  }\n\n  parent() {\n    return this.metro() || this.state();\n  }\n\n  children() {\n    return null;\n  }\n\n  fips() {\n    return this.id;\n  }\n\n  hospitalization() {\n    return this.hospitalization_;\n  }\n\n  nearby() {\n    if (!this.center_) {\n      return undefined;\n    }\n\n    const candidates = [];\n    for (const state of this.state_.country().allStates()) {\n      for (const candidate of state.allCounties()) {\n        // Shouldn't we check to make sure we aren't counting ourselves as\n        // nearby too?\n        if (!candidate.center_) {\n          continue;\n        }\n\n        if (Math.abs(this.center_.lat - candidate.center_.lat) < 1.5\n          && Math.abs(this.center_.lng - candidate.center_.lng) < 1.5) {\n          candidates.push(candidate);\n        }\n      }\n    }\n\n    return candidates.sort((a, b) => {\n      const da =\n        geolib.getDistance({\n          latitude: this.center_.lat,\n          longitude: this.center_.lng,\n        }, {\n          latitude: a.center_.lat,\n          longitude: a.center_.lng,\n        });\n      const db =\n        geolib.getDistance({\n          latitude: this.center_.lat,\n          longitude: this.center_.lng,\n        }, {\n          latitude: b.center_.lat,\n          longitude: b.center_.lng,\n        });\n      return da - db;\n    });\n  }\n\n  routeTo() {\n    return reverse(routes.county, {\n      county: this.name,\n      state: this.state_.twoLetterName,\n    });\n  }\n\n  async _fetchServerData() {\n    let serverdata = await fetchPublicCountyData(this.state().fips(), this.id);\n    if (serverdata) {\n      this.covidRaw_ = serverdata;\n    }\n  }\n\n  async dataPointsAsync() {\n    if (!this.covidRaw_.Confirmed) {\n      await this._fetchServerData();\n    }\n    return datesToDataPoints(this.covidRaw_);\n  }\n  dataPoints() {\n    return datesToDataPoints(this.covidRaw_.Summary);\n  }\n  async confirmDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Confirmed\", data, \"confirmed\");\n  }\n\n  async deathDataSeriesAsync() {\n    const data = await this.dataPointsAsync();\n    return DataSeries\n      .fromOldDataSourceDataPoints(\"Death\", data, \"death\");\n  }\n\n  getConfirmedByDate(date) {\n    if (!date || !this.covidRaw_) {\n      return this.summary().confirmed;\n    }\n    const confirmed = this.covidRaw_.Confirmed;\n    if (confirmed) {\n      return confirmed[date];\n    }\n    return undefined;\n  }\n\n  getDeathsByDate(date) {\n    if (!date || !this.covidRaw_) {\n      return this.summary().deaths;\n    }\n    const death = this.covidRaw_.Death;\n    if (death) {\n      return death[date];\n    }\n    return undefined;\n  }\n\n  getConfirmedNewByDate(date) {\n    if (!date || !this.covidRaw_) {\n      return this.summary().newcases;\n    }\n    const d1 = this.getConfirmedByDate(date);\n    const d2 = this.getConfirmedByDate(moment(date, \"MM/DD/YYYY\").subtract(1, \"days\").format(\"MM/DD/YYYY\"));\n    if (!d1) {\n      return 0;\n    }\n    if (!d2) {\n      return d1\n    }\n    return d1 - d2;\n  }\n\n  async deathsAsync() {\n    if (!this.covidRaw_.Death) {\n      await this._fetchServerData();\n    }\n    return this.covidRaw_.Death;\n  }\n\n  population() {\n    return this.population_;\n  }\n\n  stayHomeOrder() {\n    return this.covidRaw_.StayHomeOrder;\n  }\n\n  newCases() {\n    if (!this.covidRaw_) {\n      return 0;\n    }\n\n    return this.covidRaw_.LastConfirmedNew;\n  }\n\n  update(data) {\n    if (data['County']) {\n      this.name = data['County'];\n    }\n\n    this.center_ = {};\n    if (data['Latitude']) {\n      this.center_['lat'] = parseFloat(data['Latitude']);\n    }\n    if (data['Longitude']) {\n      this.center_['lng'] = parseFloat(data['Longitude']);\n    }\n  }\n\n  async daysToDoubleTimeSeries() {\n    if (!this.covidRaw_.Confirmed) {\n      await this._fetchServerData();\n    }\n\n    let confirmed = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Confirmed)\n    );\n    let death = getDay2DoubleTimeSeries(\n      trimLastDaysData(this.covidRaw_.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n\n  async growthRateTimeSeries() {\n    if (!this.covidRaw_.Confirmed) {\n      await this._fetchServerData();\n    }\n\n    let confirmed = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Confirmed)\n    );\n    let death = getGrowthRateTimeSeries(\n      trimLastDaysData(this.covidRaw_.Death)\n    );\n\n    let result = [];\n    for (let k in confirmed) {\n      result.push({\n        fulldate: k,\n        confirmed: confirmed[k],\n        death: death ? death[k] : null,\n      });\n    }\n    return result;\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { withStyles } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport { County } from '../UnitedStates';\nimport { myShortNumber } from '../Util';\nimport { useHistory } from 'react-router-dom'\n// import Badge from '@material-ui/core/Badge';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        alignItems: 'center',\n        justifyContent: \"space-around\",\n    },\n    aspect: {\n        flexDirection: \"column\",\n        display: 'flex',\n        flexWrap: 'wrap',\n        padding: '4px',\n        margin: '5px 5px',\n        flexGrow: 1,\n        overflow: 'hidden',\n    },\n    innerDiv: {\n        flexDirection: \"column\",\n        alignContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        flexWrap: 'wrap',\n        // padding: '4px',\n        // margin: '5px 5px',\n        flexGrow: 1,\n    },\n    label: {\n        fontSize: '.7em',\n    },\n    total: {\n        flexGrow: 1,\n        fontSize: '1.1em',\n    },\n    change: {\n        flexGrow: 1,\n        fontSize: '0.5em',\n        minHeight: \"0.5em\"\n    },\n}));\n\n/*\nconst ClickRibbonBadge = withStyles({\n    badge: {\n        display: 'flex',\n        flexGrow: 1,\n        borderRadius: '0px',\n        fontSize: '0.3rem',\n        transform: 'rotate(25deg)',\n        height: '8px',\n        minWidth: '10px',\n        left: '-15px',\n        bottom: '8px',\n        '&::before': {\n            content: \"''\",\n            display: 'block',\n            border: '4px solid #f00',\n            width: '-2px',\n        },\n        '&::after': {\n            content: \"''\",\n            display: 'block',\n            border: '4px solid #f00',\n        },\n    }\n})(Badge);\n*/\n\nexport const Summary = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const source = props.source;\n    const summary = source.summary();\n\n    let maybeHospitalization = source.testData && source.testData();\n\n    // Where does this even belong...\n    let maybeHospitals = !maybeHospitalization && source.hospitals && source.hospitals();\n    if (!maybeHospitals && source instanceof County) {\n        maybeHospitals = {\n            'bedCount': \"N/A\",\n            'count': \"N/A\",\n        };\n    }\n\n    function jumpTo(target, detailed) {\n        if (target) {\n            pushChangeTo(history, { \"tab\": target, \"detailed\": detailed });\n        }\n    }\n\n    const pop = (label, total, change, target, detailed) =>\n        <Paper className={classes.aspect} onClick={() => { jumpTo(target, detailed) }}>\n            {/* <ClickRibbonBadge anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }} badgeContent='Click' color=\"error\"> */}\n            <div className={classes.innerDiv}>\n                <div className={classes.change}>\n                    {change ? change : \"-\"}\n                </div>\n                <div className={classes.total}>\n                    {total}\n                </div>\n                <div className={classes.label}>\n                    {label}\n                </div>\n            </div>\n            {/* </ClickRibbonBadge> */}\n        </Paper>;\n    return (\n        <div className={classes.container}>\n            {pop(\n                'Confirmed',\n                myShortNumber(summary.confirmed),\n                `+ ${myShortNumber(summary.newcases)}`)}\n            {summary.recovered > 0 &&\n                pop(\n                    'Recovered',\n                    myShortNumber(summary.recovered),\n                    `+${myShortNumber(summary.recoveredNew)}`,\n                    'detailed',\n                    'Recovery'\n                )}\n            {pop(\n                'Deaths',\n                myShortNumber(summary.deaths),\n                `+${myShortNumber(summary.deathsNew)}`,\n                \"peakdeath\")}\n            {maybeHospitals &&\n                pop(\n                    'Beds',\n                    myShortNumber(maybeHospitals.bedCount),\n                    `${maybeHospitals.bedsICU} ICU Beds`)}\n            {maybeHospitalization &&\n                pop(\n                    'Tests',\n                    myShortNumber(maybeHospitalization.totalTests),\n                    `${Math.floor(maybeHospitalization.totalTestPositive / maybeHospitalization.totalTests * 100)}% pos `,\n                    'detailed',\n                    \"Tests\",\n                )}\n            {maybeHospitalization &&\n                pop(\n                    'Hospitalized',\n                    myShortNumber(maybeHospitalization.hospitalized),\n                    `+ ${maybeHospitalization.hospitalizedIncreased}`,\n                    \"peakhospitalization\"\n                )}\n        </div>\n    );\n};\n\nfunction pushChangeTo(history, input) {\n    const params = new URLSearchParams(history.location.search);\n    for (const [key, value] of Object.entries(input)) {\n        console.log(key);\n        console.log(value);\n        if (value) {\n            params.set(key, value);\n        }\n    }\n    history.location.search = params.toString();\n    history.push(history.location)\n    return history.location;\n}\n","import { withStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\n\nconst AntSwitch = withStyles(theme => ({\n    root: {\n        width: 28,\n        height: 16,\n        padding: 0,\n        display: 'flex',\n    },\n    switchBase: {\n        padding: 2,\n        color: theme.palette.grey[500],\n        '&$checked': {\n            transform: 'translateX(12px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                opacity: 1,\n                backgroundColor: \"#00aeef\",\n                borderColor: theme.palette.primary.main,\n                border: `0px solid ${theme.palette.grey[500]}`,\n            },\n        },\n    },\n    thumb: {\n        width: 12,\n        height: 12,\n        boxShadow: 'none',\n    },\n    track: {\n        border: `1px solid ${theme.palette.grey[500]}`,\n        borderRadius: 16 / 2,\n        opacity: 1,\n        height: \"auto\",\n        backgroundColor: theme.palette.common.white,\n    },\n    checked: {},\n}))(Switch);\n\nexport { AntSwitch };","import React from \"react\";\nimport { ZoomableGroup, ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport { Metro } from \"./UnitedStates\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst NO_DATA_COLOR = '#fcfcfc';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  map: {\n    maxHeight: '50vh',\n    stroke: '#DDD',\n    strokeWidth: 1,\n    width: '100vh',\n    minHeight: 300,\n  },\n  small: {\n    // maxHeight: '50vh',\n  },\n}));\n\nconst MapNew = (props) => {\n  const classes = useStyles();\n\n  const source = props.source instanceof Metro ? props.source.state() : props.source;\n  const config = source.countyMapConfig();\n  if (!config) {\n    return null;\n  }\n  // Gross!\n  const isZoomed = !!config.projection.config;\n\n  const setTooltipContent = props.setTooltipContent;\n  return (\n    <ComposableMap\n      className={`${classes.map} ${isZoomed ? classes.small : ''}`}\n      data-tip=\"\"\n      projection={config.projection.projection}\n      projectionConfig={config.projection.config}\n    >\n      <ZoomableGroup zoom={1}>\n      <Geographies geography={config.geoUrl}>\n        {({ geographies }) =>\n          geographies.map(geo => {\n            const county_id = geo.id ?? geo.properties.STATEFP + geo.properties.COUNTYFP;\n            const county = source.countyForId(county_id);\n            const color = props.colorFunction(county);\n            return (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                fill={color}\n                onMouseEnter={() => {\n                  setTooltipContent(county);\n                }}\n                onMouseLeave={() => {\n                  setTooltipContent(null);\n                }}\n                onClick={() => {\n                  if (props.selectionCallback) {\n                    props.selectionCallback(county);\n                  }\n                }\n\n                }\n              />\n            );\n          })\n        }\n      </Geographies>\n        </ZoomableGroup>\n    </ComposableMap >\n  );\n};\n\nconst MapCountyGeneric = React.memo((props) => {\n  const [county, setSelectedCounty] = React.useState(\"\");\n  const source = props.source;\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <MapNew setTooltipContent={setSelectedCounty}\n        source={source}\n        selectionCallback={props.selectionCallback}\n        colorFunction={(county) => {\n          if (!county || !props.getCountyDataPoint(county)) {\n            return NO_DATA_COLOR;\n          }\n          let data = props.getCountyDataPoint(county);\n          let population = county.population();\n          return (props.perCapita && !props.skipCapita)\n            ? props.colorFunctionPerMillion(data / population * 1000000)\n            : props.colorFunction(data);\n        }\n        }\n      />\n      {county &&\n        <ReactTooltip>\n          {\n            props.toolip(county)\n          }\n        </ReactTooltip>\n      }\n    </div>\n  );\n});\n\nexport { NO_DATA_COLOR, MapCountyGeneric }\n","import React from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Annotation\n} from \"react-simple-maps\";\nimport ReactTooltip from \"react-tooltip\";\nimport { geoCentroid } from \"d3-geo\";\nimport { CountyInfo } from 'covidmodule';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\nconst offsets = {\n  VT: [50, -8],\n  NH: [34, 2],\n  MA: [30, -1],\n  RI: [28, 2],\n  CT: [35, 10],\n  NJ: [34, 1],\n  DE: [33, 0],\n  MD: [47, 10],\n  DC: [49, 21]\n};\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  map: {\n    fontFamily: theme.typography.fontFamily,\n    maxHeight: '100vh',\n    stroke: \"#DDD\",\n    strokeWidth: 0.1,\n    width: '95vw',\n    minHeight: 300,\n  },\n  marker: {\n    fill: '#303030',\n  },\n}));\n\nconst MapStates = (props) => {\n  const classes = useStyles();\n  const setTooltipContent = props.setTooltipContent;\n  return (\n    <ComposableMap className={classes.map} data-tip=\"\" projection=\"geoAlbersUsa\">\n      <Geographies geography={geoUrl}>\n        {({ geographies }) => (\n          <>\n            {geographies.map(geo => {\n              const state_fips = geo.id;\n              const state = props.source.stateForId(state_fips);\n              const color = props.colorFunction(state);\n              return <Geography\n                key={geo.rsmKey}\n                stroke=\"#DDD\"\n                geography={geo}\n                fill={color}\n                onMouseEnter={() => {\n                  setTooltipContent(state);\n                }}\n                onMouseLeave={() => {\n                  setTooltipContent(null);\n                }}\n              />\n            })}\n            {geographies.map(geo => {\n              const centroid = geoCentroid(geo);\n              // const cur = allStates.find(s => s.val === geo.id);\n              let cur = {\n                id: CountyInfo.getStateAbbreviationFromFips(geo.id),\n              }\n              return (\n                <g key={geo.rsmKey + \"-name\"}\n                >\n                  {cur &&\n                    centroid[0] > -160 &&\n                    centroid[0] < -67 &&\n                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n                      <Marker coordinates={centroid} className={classes.marker}>\n                        <text y=\"2\" fontSize={14} textAnchor=\"middle\">\n                          {cur.id}\n                        </text>\n                      </Marker>\n                    ) : (\n                        <Annotation\n                          subject={centroid}\n                          dx={offsets[cur.id][0]}\n                          dy={offsets[cur.id][1]}\n                        >\n                          <text x={4} fontSize={14} alignmentBaseline=\"middle\">\n                            {cur.id}\n                          </text>\n                        </Annotation>\n                      ))}\n                </g>\n              );\n            })}\n          </>\n        )}\n      </Geographies>\n    </ComposableMap>\n  );\n};\n\nconst MapStateGeneric = React.memo((props) => {\n  const [state, setSelectedState] = React.useState(\"\");\n  const source = props.source;\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <MapStates setTooltipContent={setSelectedState}\n        source={source}\n        selectionCallback={props.selectionCallback}\n        stroke={props.stroke ?? \"#FFF\"}\n        colorFunction={(state) => {\n          if (!state || !props.getCountyDataPoint(state)) {\n            return \"#FFF\";\n          }\n          let data = props.getCountyDataPoint(state);\n          let population = state.population();\n          return (props.perCapita && !props.skipCapita)\n            ? props.colorFunctionPerMillion(data / population * 1000000)\n            : props.colorFunction(data);\n        }\n        }\n      />\n      {state &&\n        <ReactTooltip>\n          {\n            props.toolip(state)\n          }\n        </ReactTooltip>\n      }\n    </div>\n  );\n});\n\nexport { MapStateGeneric }\n","import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { isMobile } from 'react-device-detect'\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\n\nconst moment = require(\"moment\");\n\nconst useStyles = makeStyles(theme => ({\n    mobileDiv: {\n    },\n    webDiv: {\n    },\n    container: {\n        height: 35\n    }\n}));\n\nconst DateRangeSlider = (props) => {\n\n    const classes = useStyles();\n    // takes a start date, and current date\n    //\n    // reports an offset from currentdate (eg. current - start - value)\n\n    const startDate = moment(props.startDate);\n    const currentDate = moment(props.currentDate);\n    const daysBetween = currentDate.diff(startDate, 'days');\n\n    let defaultValue = props.defaultValue !== undefined ? (daysBetween - props.defaultValue) : daysBetween - 30\n    defaultValue = (defaultValue > -1) ? defaultValue : 0;\n\n    const defaultMaxValue = (daysBetween > 13) ? daysBetween - 14 : daysBetween;\n    const maxValue = props.minOffset !== undefined ? daysBetween - props.minOffset : defaultMaxValue\n\n    const [valueState, setValueState] = React.useState(defaultValue)\n\n    const constLabelFormat = (value) => {\n        return moment(startDate).add(value, 'days').format(\"MM/DD\");\n    }\n\n    const handleValueChange = (value) => {\n        if (value !== valueState) {\n            setValueState(value);\n            props.valueChanged(daysBetween - value);\n        }\n    }\n\n    const marks = [{ value: (daysBetween - 30 > -1) ? daysBetween - 30 : daysBetween }];\n\n    const sliderPropsShared = {\n        \"aria-label\":\"Start Date\",\n        track: false,\n        \"aria-labelledby\": \"discrete-slider\",\n        valueLabelFormat: constLabelFormat,\n        step: 1,\n        marks: marks,\n        min: 0,\n        max: maxValue,\n        value: valueState,\n        onChange: (event, value) => handleValueChange(value)\n    }\n\n    const sliderPropsMobile = {\n        valueLabelDisplay:\"off\",\n    }\n    const sliderPropsWeb = {\n        valueLabelDisplay:\"auto\",\n    }\n\n    const gridProps = {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"flex-end\"\n    }\n\n    return (isMobile ?\n        <Grid {...gridProps} className={`${classes.mobileDiv} ${classes.container}`}>\n            <IOSSlider {...sliderPropsShared} {...sliderPropsMobile} />\n        </Grid>\n        :\n        <Grid {...gridProps} className={`${classes.webDiv} ${classes.container}`}>\n            <StyledSlider {...sliderPropsShared} {...sliderPropsWeb} />\n        </Grid>);\n}\n\nDateRangeSlider.propTypes = {\n    currentDate: PropTypes.any.isRequired,\n    startDate: PropTypes.any.isRequired,\n    valueChanged: PropTypes.any.isRequired,\n}\n\nconst StyledSlider = withStyles({\n    root: {\n      color: '#00aeef',\n      height: 2,\n      padding: '15px 0',\n    },\n    valueLabel: {\n        left: 'calc(-50% - 4px)',\n    },\n    thumb: {\n        backgroundColor: '#3880ff',\n    },\n    mark: {\n      backgroundColor: '#bfbfbf',\n      height: 8,\n      width: 1,\n      marginTop: -3,\n    },\n})(Slider)\n\nconst iOSBoxShadow =\n  '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst IOSSlider = withStyles({\n  root: {\n    color: '#00aeef',\n    height: 2,\n    padding: '15px 0',\n  },\n  thumb: {\n    height: 28,\n    width: 28,\n    backgroundColor: '#fff',\n    boxShadow: iOSBoxShadow,\n    marginTop: -14,\n    marginLeft: -14,\n    '&:focus, &:hover, &$active': {\n      boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        boxShadow: iOSBoxShadow,\n      },\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 11px)',\n    top: -22,\n    '& *': {\n      background: 'transparent',\n      color: '#000',\n    },\n  },\n  track: {\n    height: 2,\n  },\n  rail: {\n    height: 2,\n    opacity: 0.5,\n    backgroundColor: '#3880ff',\n  },\n  mark: {\n    backgroundColor: '#bfbfbf',\n    height: 8,\n    width: 1,\n    marginTop: -3,\n  },\n  markActive: {\n    opacity: 1,\n    backgroundColor: 'currentColor',\n  },\n})(Slider);\n\nexport { DateRangeSlider }\n","import React from 'react';\n\nexport const WorldContext = React.createContext(undefined);\n","export class BasicDataComponent {\n\n  constructor(confirmed, active, recovered, died) {\n    this.confirmed_ = confirmed;\n    this.active_ = active;\n    this.recovered_ = recovered;\n    this.died_ = died;\n    this.doublingInterval_ = confirmed.doublingInterval();\n  }\n\n  confirmed() {\n    return this.confirmed_;\n  }\n\n  active() {\n    return this.active_;\n  }\n\n  recovered() {\n    return this.recovered_;\n  }\n\n  died() {\n    return this.died_;\n  }\n\n  doublingInterval() {\n    return this.doublingInterval_;\n  }\n}\n","export class NameComponent {\n  constructor(name) {\n    this.name_ = name;\n  }\n\n  english() {\n    return this.name_;\n  }\n}\n","export class PopulationComponent {\n\n  constructor(population) {\n    this.population_ = population;\n  }\n\n  population() {\n    return this.population_;\n  }\n}\n","/** Paths are the ID type for entities, and encode hierarchical information. */\nexport class Path {\n\n  static parse(path) {\n    if (path === '/') {\n      return Path.root();\n    } else {\n      return new Path(path.substr(1).split('/'));\n    }\n  }\n\n  static root() {\n    return new Path([]);\n  }\n\n  constructor(components) {\n    this.components = components;\n  }\n\n  child(name) {\n    return new Path(this.components.concat(name));\n  }\n\n  equals(other) {\n    return this.string() === other.string();\n  }\n\n  parent() {\n    if (this.level() > 0) {\n      return new Path(this.components.slice(0, this.components.length - 1));\n    } else {\n      return undefined;\n    }\n  }\n\n  lastComponent() {\n    return this.components[this.components.length - 1];\n  }\n\n  level() {\n    return this.components.length;\n  }\n\n  matches(pattern) {\n    if (pattern === '/') {\n      return this.components.length === 0;\n    }\n\n    const components = Path.parse(pattern).components;\n    if (this.components.length !== components.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.components.length; ++i) {\n      if (components[i].startsWith(':') || this.components[i] === components[i]) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  string() {\n    return '/' + this.components.join('/');\n  }\n}\n\n","import React from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Sphere,\n  Graticule,\n  ZoomableGroup,\n  Marker,\n} from \"react-simple-maps\";\nimport { geoCentroid } from \"d3-geo\";\n\nimport ReactTooltip from \"react-tooltip\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { WorldContext } from './WorldContext';\nimport { BasicDataComponent } from './models/BasicDataComponent';\nimport { NameComponent } from './models/NameComponent';\nimport { PopulationComponent } from './models/PopulationComponent';\nimport { Path } from './models/Path';\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  map: {\n    fontFamily: theme.typography.fontFamily,\n    maxHeight: '50vh',\n    stroke: \"#DDD\",\n    strokeWidth: 0.1,\n    width: '95vw',\n    minHeight: 300,\n  },\n}));\n\nconst MapWorld = (props) => {\n  const classes = useStyles();\n  const setTooltipContent = props.setTooltipContent;\n  const world = React.useContext(WorldContext);\n\n  let center = [0, 0];\n  let zoom = 1;\n  if (props.geography) {\n    const pos = props.geography.position();\n    center = [pos.longitude, pos.latitude];\n    zoom = 4;\n  }\n\n  return (\n    <ComposableMap\n      className={classes.map}\n      data-tip=\"\"\n    >\n      <ZoomableGroup zoom={zoom} center={center} >\n        <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\n        <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\n\n\n        <Geographies geography={geoUrl}\n        >\n          {({ geographies }) => (\n            <>\n              {geographies.map(geo => {\n                const path = Path.parse('/' + geo.properties.ISO_A2);\n                let country;\n                try {\n                  country = world.getMultiple(path, [NameComponent, BasicDataComponent, PopulationComponent]);\n                } catch (e) {\n\n                }\n                const color = props.colorFunction(country);\n\n                return <Geography\n                  key={geo.rsmKey}\n                  stroke=\"#000\"\n                  geography={geo}\n                  fill={color}\n                  onMouseEnter={() => {\n                    setTooltipContent(country);\n                  }}\n                  onMouseLeave={() => {\n                    setTooltipContent(null);\n                  }}\n                  onClick={() => {\n                    if (props.selectionCallback) {\n                      props.selectionCallback(path);\n                    }\n                  }}\n                />\n              })}\n              {geographies.map(geo => {\n                const centroid = geoCentroid(geo);\n                const path = Path.parse('/' + geo.properties.ISO_A2);\n                let country;\n                try {\n                  country = world.getMultiple(path, [NameComponent, BasicDataComponent, PopulationComponent]);\n                } catch (e) {\n\n                }\n                return (\n                  <g key={geo.rsmKey + \"-name\"}>\n                    {country &&\n                      <Marker coordinates={centroid}>\n                        <text fontSize={3} textAnchor=\"middle\">\n                          {country[0].english()}\n                        </text>\n                      </Marker>\n                    }\n                  </g>);\n              })}\n            </>\n          )}\n        </Geographies>\n      </ZoomableGroup>\n\n    </ComposableMap>\n  );\n};\n\nconst MapWorldGeneric = React.memo((props) => {\n  const [state, setSelectedState] = React.useState(\"\");\n  const source = props.source;\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <MapWorld setTooltipContent={setSelectedState}\n        source={source}\n        geography={props.geography}\n        selectionCallback={props.selectionCallback}\n        stroke={props.stroke ?? \"#000000\"}\n        colorFunction={(country) => {\n          if (!country || !props.getCountyDataPoint(country)) {\n            return \"#FFF\";\n          }\n          let data = props.getCountyDataPoint(country);\n          const [, , pop] = country;\n          let population = pop.population();\n          return (props.perCapita && !props.skipCapita)\n            ? props.colorFunctionPerMillion(data / population * 1000000)\n            : props.colorFunction(data);\n        }\n        }\n      />\n      {state &&\n        <ReactTooltip>\n          {\n            props.toolip(state)\n          }\n        </ReactTooltip>\n      }\n    </div>\n  );\n});\n\nexport { MapWorldGeneric }\n","import React from \"react\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { Typography } from '@material-ui/core';\nimport * as d3 from \"d3-scale\";\n\nimport Button from '@material-ui/core/Button';\n\nimport { AntSwitch } from \"./graphs/AntSwitch\"\nimport { Grid, makeStyles } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom'\nimport { NO_DATA_COLOR, MapCountyGeneric } from \"./MapCountyGeneric\"\nimport { MapStateGeneric } from \"./MapStateGeneric\";\nimport { Country } from \"./UnitedStates\";\nimport { CountryContext } from \"./CountryContext\"\nimport { DateRangeSlider } from \"./DateRangeSlider\"\nimport { MapWorldGeneric } from \"./MapWorldGeneric\";\nimport { BasicDataComponent } from './models/BasicDataComponent';\nimport { NameComponent } from './models/NameComponent';\nimport { County } from './UnitedStates'\nimport { WorldContext } from './WorldContext';\n\nconst moment = require(\"moment\");\n\nconst useStyles = makeStyles(theme => ({\n  gridPadding: {\n    minWidth: '1vw'\n  },\n  container: {\n    minHeight: 45\n  },\n  dateLabel: {\n    width: 45\n  }\n}));\n\nconst logColors = () => {\n  return d3.scaleLog().clamp(true);\n}\n\nconst ColorScale = {\n  confirmed: logColors()\n    .domain([1, 200, 10000])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  confirmedWorld: logColors()\n    .domain([1000, 10000, 1000000])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  confirmedPerMillion: logColors()\n    .domain([1000, 20000, 40000])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  confirmedNew: logColors()\n    .domain([1, 200, 2000])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  confirmedNewWorld: logColors()\n    .domain([50, 3000, 30000])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  confirmedNewPerMillion: logColors()\n    .domain([1, 200, 2000])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  confirmedNewPerMillionWorld: logColors()\n    .domain([1, 30, 130])\n    .range([NO_DATA_COLOR, \"#f44336\", \"#2f0707\"]),\n  death: logColors()\n    .domain([1, 100, 1000])\n    .range([NO_DATA_COLOR, \"#5d99c6\", \"#002171\"]),\n  deathWorld: logColors()\n    .domain([1, 7000, 70000])\n    .range([NO_DATA_COLOR, \"#5d99c6\", \"#002171\"]),\n  deathPerMillion: logColors()\n    .domain([10, 100, 1000])\n    .range([NO_DATA_COLOR, \"#5d99c6\", \"#002171\"]),\n  deathPerMillionWorld: logColors()\n    .domain([1, 80, 800])\n    .range([NO_DATA_COLOR, \"#5d99c6\", \"#002171\"]),\n  timeToDouble: logColors()\n    .domain([1, 15, 300])\n    .range([\"#004d40\", \"#4db6ac\", NO_DATA_COLOR]),\n  tests: logColors()\n    .domain([10000, 650000])\n    .range([NO_DATA_COLOR, \"#3f51b5\", \"#000051\"]),\n  testsPerMillions: logColors()\n    .domain([7200, 33000])\n    .range([NO_DATA_COLOR, \"#3f51b5\", \"#000051\"]),\n}\n\nconst CountyNavButtons = withRouter((props) => {\n  const county = props.county;\n  const state = county.state();\n  const metro = county.metro();\n  const history = props.history;\n  return <ToggleButtonGroup\n    value={null}\n    exclusive\n    size=\"large\"\n    onChange={(e, route) => {\n      history.push(route);\n    }}\n  >\n    <ToggleButton size=\"small\" value={county.routeTo()} >\n      {county.name}\n    </ToggleButton>\n    {metro &&\n      <ToggleButton value={metro.routeTo()} >\n        {metro.name} </ToggleButton>\n    }\n    <ToggleButton value={state.routeTo()} >\n      {state.name}</ToggleButton>\n  </ToggleButtonGroup>;\n});\n\nconst CountryButton = withRouter((props) => {\n\n  const history = props.history;\n  const world = React.useContext(WorldContext);\n  const [name] = world.getMultiple(props.country, [NameComponent, BasicDataComponent]);\n\n  return (\n    <Button variant=\"contained\" color=\"primary\"\n      onClick={(e, route) => {\n        history.push(\"/country\" + props.country.string());\n      }}\n    >\n      {name.english()}\n    </Button>)\n});\n\nconst MapUS = withRouter((props) => {\n  const classes = useStyles()\n\n  const source = props.source;\n  const [perCapita, setPerCapita] = React.useState(true);\n  const [selectedCounty, setSelectedCounty] = React.useState(null);\n\n  let subtabs = new Map([\n    ['confirmed', {\n      label: \"Confirmed\",\n      map: MapUSConfirmed,\n    }],\n    ['confirmedNew', {\n      label: \"New\",\n      map: MapUSConfirmedNew,\n    }],\n    ['death', {\n      label: \"Death\",\n      map: MapStateDeath,\n    }],\n    ['daysToDouble', {\n      label: \"Growth\",\n      map: MapDaysToDouble,\n    }],\n  ]);\n  if (source instanceof Country) {\n    subtabs.set('testCoverage', {\n      label: \"Tests\",\n      map: MapUSTestCoverage,\n    });\n  }\n\n  if (source instanceof BasicDataComponent) {\n\n    subtabs = new Map([\n      ['confirmed', {\n        label: \"Confirmed\",\n        map: MapWorldConfirmed,\n      }],\n      ['confirmedNew', {\n        label: \"New\",\n        map: MapWorldConfirmedNew,\n      }],\n      ['death', {\n        label: \"Death\",\n        map: MapWorldDeath,\n      }],\n    ]);\n\n  }\n\n  let desired = getURLParam(props.history.location.search, \"detailed\");\n  if (!subtabs.has(desired)) {\n    desired = subtabs.keys().next().value;\n  }\n  const [subtab, setSubtab] = React.useState(desired);\n  const ChosenMap = subtabs.get(desired).map;\n\n  const buttonGroup = <ToggleButtonGroup\n    value={subtab}\n    exclusive\n    size=\"small\"\n    onChange={(e, newvalue) => {\n      setSubtab(newvalue)\n      pushChangeTo(props.history, \"detailed\", newvalue);\n    }}\n  >\n    {[...subtabs].map(([id, { label }]) =>\n      <ToggleButton key={id} value={id}>{label}</ToggleButton>\n    )}\n  </ToggleButtonGroup>;\n\n  const [dataFetched, setDataFetched] = React.useState(null);\n  const [showPastDays, setShowPastDays] = React.useState(0);\n  const oldestMoment = moment(\"03/10/2020\", \"MM/DD/YYYY\");\n\n  const getDate = (isDataFetched, showPastNumDays) => {\n    return isDataFetched ? moment().subtract(showPastNumDays, 'days').format('MM/DD/YYYY') : null\n  }\n\n  const country = React.useContext(CountryContext);\n\n  React.useEffect(() => {\n    if (country) {\n      country.fetchAllUSCountyData().then(() => {\n        setDataFetched(true);\n      });\n    }\n  }, [country]);\n\n\n  if (!dataFetched) {\n    return <div>Loading</div>;\n  }\n\n  return <div>\n    {buttonGroup}\n    <Grid container alignItems=\"center\" spacing={1} className={classes.container}>\n      <Grid item>\n        <AntSwitch checked={perCapita} onClick={() => { setPerCapita(!perCapita) }} />\n      </Grid>\n      <Grid item>\n        <Typography>Per Capita</Typography>\n      </Grid>\n      {dataFetched && oldestMoment && (desired === \"confirmed\" || desired === \"confirmedNew\" || desired === \"death\") &&\n        <Grid item>\n          <Typography align=\"right\" className={classes.dateLabel}>{moment().subtract(showPastDays, 'days').format('M/D')}:</Typography>\n        </Grid>\n      }\n      {dataFetched && oldestMoment && (desired === \"confirmed\" || desired === \"confirmedNew\" || desired === \"death\") &&\n        <Grid item xs sm={3}>\n          <DateRangeSlider\n            startDate={moment(oldestMoment)}\n            currentDate={moment()}\n            minOffset={0}\n            defaultValue={showPastDays}\n            valueChanged={(val) => {\n              setShowPastDays(val);\n            }}\n          />\n        </Grid>\n      }\n      <Grid item sm></Grid>\n      <Grid className={classes.gridPadding}></Grid>\n    </Grid>\n    <ChosenMap {...props} date={getDate(dataFetched, showPastDays)} source={source} perCapita={perCapita} selectionCallback={setSelectedCounty} />\n    {\n      selectedCounty && selectedCounty instanceof County &&\n      <CountyNavButtons county={selectedCounty} />\n    }\n    {\n      selectedCounty && !(selectedCounty instanceof County) &&\n      <CountryButton country={selectedCounty} />\n    }\n  </div >\n});\n\nconst MapDaysToDouble = React.memo((props) => {\n  return (\n    <MapCountyGeneric\n      {...props}\n      skipCapita={true}\n      getCountyDataPoint={(county) => {\n        return county.summary().daysToDouble > 0 ? county.summary().daysToDouble : 0;\n      }}\n      colorFunction={(data) => {\n        return ColorScale.timeToDouble(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.timeToDouble(data);\n      }}\n      toolip={county => {\n        let days = county.summary().daysToDouble;\n        let dailygrowth = Math.exp(Math.log(2) * (1 / days)) - 1;\n        if (!days) {\n          return `${county.name} no data`;\n        }\n        days = days.toFixed(1) + \" days\";\n        return `${county.name}, Daily Growth: ${(dailygrowth * 100).toFixed(1)}%, Days to 2x: \\n${days}`\n      }}\n    />\n  );\n});\n\nconst MapWorldConfirmed = React.memo((props) => {\n  const ts = moment(props.date, \"MM/DD/YYYY\").unix();\n  return (\n    <MapWorldGeneric\n      {...props}\n      getCountyDataPoint={(country) => {\n        if (country) {\n          const [, basic] = country;\n          return basic.confirmed().dateOrLastValue(ts);\n        }\n      }}\n      colorFunction={(data) => {\n        return ColorScale.confirmedWorld(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.confirmedPerMillion(data);\n      }}\n      toolip={country => {\n        const [name, basic, population] = country;\n        let confirmed = basic.confirmed().dateOrLastValue(ts);\n        return `${name.english()}, Confirmed: ${confirmed}, \\n` +\n          `Confirm/Mil: ${(confirmed / population.population() * 1000000).toFixed(0)}`\n      }}\n    />\n  );\n});\n\nconst MapWorldDeath = React.memo((props) => {\n  const ts = moment(props.date, \"MM/DD/YYYY\").unix();\n  return (\n    <MapWorldGeneric\n      {...props}\n      getCountyDataPoint={(country) => {\n        if (country) {\n          const [, basic] = country;\n          return basic.died().dateOrLastValue(ts);\n        }\n      }}\n      colorFunction={(data) => {\n        return ColorScale.deathWorld(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.deathPerMillionWorld(data);\n      }}\n      toolip={country => {\n        const [name, basic, population] = country;\n        let confirmed = basic.died().dateOrLastValue(ts);\n        return `${name.english()}, Deaths: ${confirmed}, \\n` +\n          `Deaths/Mil: ${(confirmed / population.population() * 1000000).toFixed(0)}`\n      }}\n    />\n  );\n});\n\nconst MapWorldConfirmedNew = React.memo((props) => {\n  const ts = moment(props.date, \"MM/DD/YYYY\").unix();\n  return (\n    <MapWorldGeneric\n      {...props}\n      getCountyDataPoint={(country) => {\n        if (country) {\n          const [, basic] = country;\n          return basic.confirmed().dateOrLastValueNew(ts);\n        }\n      }}\n      colorFunction={(data) => {\n        return ColorScale.confirmedNew(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.confirmedNewPerMillionWorld(data);\n      }}\n      toolip={country => {\n        const [name, basic, population] = country;\n        let confirmed = basic.confirmed().dateOrLastValueNew(ts);\n        return `${name.english()}, New: ${confirmed}, \\n` +\n          `New/Mil: ${(confirmed / population.population() * 1000000).toFixed(0)}`\n      }}\n    />\n  );\n});\n\nconst MapUSConfirmed = React.memo((props) => {\n  return (\n    <MapCountyGeneric\n      {...props}\n      getCountyDataPoint={(county) => {\n        return county.getConfirmedByDate(props.date);\n      }}\n      colorFunction={(data) => {\n        return ColorScale.confirmed(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.confirmedPerMillion(data);\n      }}\n      toolip={county => {\n        let confirmed = county.getConfirmedByDate(props.date);\n        return `${county.name}, Confirmed: ${confirmed}, \\n` +\n          `Confirm/Mil: ${(confirmed / county.population() * 1000000).toFixed(0)}`\n      }}\n    />\n  );\n});\n\nconst MapUSConfirmedNew = React.memo((props) => {\n  return (\n    <MapCountyGeneric\n      {...props}\n      getCountyDataPoint={(county) => {\n        return county.getConfirmedNewByDate(props.date);\n      }}\n      colorFunction={(data) => {\n        return ColorScale.confirmedNewWorld(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.confirmedNewPerMillion(data);\n      }}\n      toolip={county => {\n        let newcases = county.getConfirmedNewByDate(props.date);\n        return `${county.name}, New: ${newcases}, \\n` +\n          `New/Mil: ${(newcases / county.population() * 1000000).toFixed(0)}`\n      }}\n    />\n  );\n});\n\nconst MapStateDeath = React.memo((props) => {\n  return (\n    <MapCountyGeneric\n      {...props}\n      getCountyDataPoint={(county) => {\n        return county.getDeathsByDate(props.date);\n      }}\n      colorFunction={(data) => {\n        return ColorScale.death(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.deathPerMillion(data);\n      }}\n      toolip={county => {\n        const deaths = county.getDeathsByDate(props.date);\n        return `${county.name}, Deaths: ${deaths}, \\n` +\n          `Deaths/Mil: ${(deaths / county.population() * 1000000).toFixed(0)}`\n      }}\n    />\n  );\n});\n\nconst MapUSTestCoverage = React.memo((props) => {\n  return (\n    <MapStateGeneric\n      {...props}\n      getCountyDataPoint={(county) => {\n        return county.summary().tests;\n      }}\n      colorFunction={(data) => {\n        return ColorScale.tests(data);\n      }}\n      colorFunctionPerMillion={(data) => {\n        return ColorScale.testsPerMillions(data);\n      }}\n      toolip={county => {\n        return `${county.name}, Tests: ${county.summary().tests}, \\n` +\n          `Tests % : ${(county.summary().tests / county.population() * 100).toFixed(1)}%`\n      }}\n    />\n  );\n});\n\nfunction getURLParam(url, key) {\n  const params = new URLSearchParams(url);\n  if (params.has(key)) {\n    return params.get(key);\n  } else {\n    return undefined;\n  }\n}\n\nfunction pushChangeTo(history, key, value) {\n  const params = new URLSearchParams(history.location.search);\n  params.set(key, value);\n  history.location.search = params.toString();\n  history.push(history.location)\n}\n\nexport { MapUS }\n","export default {\n    linear: 'Linear',\n    log: 'Log'\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { LineChart, ReferenceLine, ReferenceArea, Label, CartesianGrid, Line, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { scaleSymlog } from 'd3-scale';\nimport { myShortNumber } from '../../Util';\nimport { DateRangeSlider } from \"../../DateRangeSlider\"\nimport { useStickyState } from '../../Util';\nimport { SectionHeader } from \"../../CovidUI\"\nimport Typography from '@material-ui/core/Typography'\n\nimport { DataSeries } from '../../models/DataSeries';\nimport axisScales from '../../graphs/GraphAxisScales'\n\nconst moment = require('moment');\n\nconst baseToggleButtonStyles = {\n  height: 'initial',\n  textTransform: 'initial',\n};\n\n// This scale for logs works consistenly, whereas setting ReCharts to use the\n// scale 'log' only works sometimes under certain mystery situations.\nconst logScale = scaleSymlog().domain([0, 'dataMax']);\n\nconst useStyles = makeStyles(theme => ({\n  options: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginBottom: '16px',\n    '& > *': {\n      margin: '0 8px 8px 0',\n    },\n  },\n  slider: {\n    display: \"flex\",\n    width: 200,\n    alignItems: \"center\",\n  },\n  expand: {\n    flexGrow: 1,\n  },\n}));\n\nconst cookieStaleWhen = (cookie) => !cookie.verticalScale || !cookie.showPastDays;\n\n/** A graph that allows the user to click series on and off. */\nexport const AdvancedGraph = (props) => {\n  const classes = useStyles();\n\n  const [state, setStateSticky] = useStickyState({\n    defaultValue: {\n      verticalScale: axisScales.linear,\n      showPastDays: 30,\n    },\n    cookieId: \"AdvanceGraphPreference1\",\n    isCookieStale: cookieStaleWhen\n  });\n  const handleLogScaleToggle = (newScale) => {\n    setStateSticky({\n      ...state,\n      verticalScale: newScale,\n    });\n  };\n\n  const handleSliderValueChange = (value) => {\n    let newstate = { ...state, showPastDays: value }\n    setStateSticky(newstate)\n  }\n\n  function filterData(data) {\n    const cutoff = moment().subtract(state.showPastDays, 'days').unix();\n    const future = moment().add(14, 'days').unix();\n    return data.filter((p) => p.timestamp >= cutoff && p.timestamp <= future);\n  }\n\n  const scales = new Map([\n    ['Linear', {\n      label: 'Linear',\n      scale: 'Linear',\n    }],\n    ['Log', {\n      label: 'Log',\n      scale: 'Log',\n    }],\n  ]);\n  const scale = state.verticalScale;\n\n  // Expands series that are supposed to have trend lines into an entry for the\n  // original series and one for the trend line.\n  const expandedSerieses = expandSeriesesToMap(props.serieses);\n\n  // Okay, here's where it gets terrible. We have raw serieses and envelopes.\n  // We want the user to be able to toggle serieses and evelopes on and off one\n  // by one, but not to toggle the serieses inside of a envelope. So for the\n  // purposes of Recharts we're going to decompose the envelopes to be raw\n  // serieses. But for our code, we're going to merge them and be confused a\n  // lot.\n\n  const allSerieses = [...expandedSerieses.values()];\n\n  let { data, timestampFormatter } = (props.alignT0)\n    ? DataSeries.alignT0([...allSerieses.values()].map(({ series }) => series))\n    : DataSeries.flatten([...allSerieses.values()].map(({ series }) => series));\n\n  let yAxisFormatter = (props.yAxisFormatter)\n    ? props.yAxisFormatter\n    : myShortNumber;\n\n  const seriesesAndEnvelopes = [...expandedSerieses.entries()];\n  const allLabels = seriesesAndEnvelopes.map(([label,]) => label);\n  const [known, setKnown] = React.useState(allLabels);\n  const [selected, setSelected] =\n    React.useState(\n      () => seriesesAndEnvelopes.filter((item) => item[1].initial !== 'off')\n        .map(([label,]) => label));\n\n  // As the user switches pages, graphs that were previously unknown may become\n  // available. So turn them off if they default to on when they appear.\n  if (known.join() !== allLabels.join()) {\n    const add = [];\n    for (const [key, { initial }] of seriesesAndEnvelopes) {\n      if (!known.includes(key) && !selected.includes(key) && initial !== 'off') {\n        add.push(key);\n      }\n    }\n\n    if (add.length > 0) {\n      // We might as well just do this in here, even though technically we\n      // should probably do it in the else branch too.\n      setKnown(allLabels);\n      setSelected(selected.concat(add));\n    }\n  }\n\n  return (\n    <div className={props.className}>\n      {props.title &&\n        <SectionHeader>\n          <Typography variant=\"h5\" noWrap>\n            {props.title}\n            <Typography variant=\"body1\" noWrap>\n              {props.subtitle}\n            </Typography>\n          </Typography>\n        </SectionHeader>\n      }\n      {props.showControls &&\n        <div className={classes.options}>\n          <Display\n            displays={scales}\n            selected={scale}\n            onChange={handleLogScaleToggle}\n          />\n          <div className={classes.slider} >\n            <div>\n              Date:</div>\n            <DateRangeSlider\n              currentDate={moment()}\n              startDate={moment(\"02/01/2020\", \"MM/DD/YYYY\")}\n              valueChanged={handleSliderValueChange}\n              defaultValue={state.showPastDays}\n            />\n          </div>\n          <div className={classes.expand} />\n          <Legend\n            spec={seriesesAndEnvelopes}\n            selected={selected}\n            onChange={setSelected} />\n        </div>\n      }\n      <Chart\n        data={filterData(data)}\n        scale={scales.get(scale).scale}\n        timestampFormatter={timestampFormatter}\n        yAxisFormatter={yAxisFormatter}\n        specs={\n          seriesesAndEnvelopes\n            .filter(([label,]) => selected.includes(label))\n            .map(([label, s]) => ({ label, ...s }))\n        }\n        vRefLines={props.vRefLines}\n        hRefLines={props.hRefLines}\n      />\n    </div>);\n};\n\nAdvancedGraph.propTypes = {\n  className: PropTypes.string,\n  serieses:\n    PropTypes.arrayOf(\n      PropTypes.exact({\n        series: PropTypes.instanceOf(DataSeries).isRequired,\n        color: PropTypes.string.isRequired,\n        initial: PropTypes.oneOf([undefined, 'off', 'on']),\n        trend: PropTypes.string,\n        stipple: PropTypes.bool,\n        rightAxis: PropTypes.bool,\n        lastDayIncomplete: PropTypes.bool,\n        covidspecial: PropTypes.bool,\n        showMovingAverage: PropTypes.bool,\n      })).isRequired,\n  showControls: PropTypes.bool,\n};\n\nAdvancedGraph.defaultProps = {\n  showControls: true,\n};\n\nfunction expandSeriesesToMap(serieses) {\n  const expanded = serieses.flatMap(s => {\n    const result = [];\n    if (s.covidspecial) {\n\n      let s_for_display;\n      if (s.showMovingAverage) {\n        s_for_display = s.series.nDayAverage(7);\n      } else {\n        s_for_display = s.series;\n      }\n\n      let main = {\n        ...s,\n        series: s_for_display.dropLastPoint(),\n        stipple: false,\n      };\n      let last = {\n        ...s,\n        series: s_for_display.last2PointSeries().suffixLabel(\"*\"),\n        stipple: true,\n        derived: true,\n      }\n      result.push(main);\n      result.push(last);\n\n      if (s.showMovingAverage) {\n        let original = {\n          ...s,\n          series: s.series,\n          // derived: true,\n          stipple: true,\n        }\n        result.push(original);\n      }\n\n    } else {\n      result.push(s);\n    }\n    return result;\n  });\n\n  return new Map(expanded.map((seriesInfo) => {\n    let series = seriesInfo.series;\n    let label = \"empty\";\n    if (series) {\n      label = series.label();\n    }\n    return [label, seriesInfo];\n  }));\n}\n\nconst useDisplayStyles = makeStyles(theme => ({\n  options: {\n    display: 'initial',\n  },\n  option: {\n    ...baseToggleButtonStyles,\n  },\n}));\n\nconst Display = (props) => {\n  const classes = useDisplayStyles();\n\n  return (\n    <ToggleButtonGroup\n      exclusive\n      value={props.selected}\n      onChange={(event, desired) => desired && props.onChange(desired)}\n      className={classes.options}>\n      {[...props.displays.entries()].map(([key, data]) =>\n        <ToggleButton key={key} value={key} className={classes.option}>\n          {data.label}\n        </ToggleButton>\n      )}\n    </ToggleButtonGroup>\n  );\n};\n\nconst useLegendStyles = makeStyles(theme => ({\n  serieses: {\n    border: `1px solid ${fade(theme.palette.action.active, 0.12)}`,\n    display: 'flex',\n    flexWrap: 'wrap',\n    maxWidth: '500px',\n  },\n  series: {\n    border: 'none',\n    color: fade(theme.palette.action.active, 0.12),\n    '&.selected': {\n      backgroundColor: 'initial',\n      color: fade(theme.palette.action.active, 0.8),\n      fontWeight: 'initial',\n    },\n    ...baseToggleButtonStyles,\n  },\n  icon: {\n    paddingRight: '4px',\n  },\n}));\n\nconst Legend = (props) => {\n  const classes = useLegendStyles();\n\n  return (\n    <ToggleButtonGroup\n      value={props.selected}\n      onChange={(event, desired) => props.onChange(desired)}\n      className={classes.serieses}>\n      {props.spec\n        .filter(([label, { derived }]) => !derived)\n        .map(([label, { color, stipple }]) =>\n          <ToggleButton\n            key={label}\n            value={label}\n            classes={{ root: classes.series, selected: 'selected' }}>\n            <span\n              className={classes.icon}\n              style={\n                props.selected.includes(label) ? { color } : {}\n              }>\n              {stipple ? '···' : '—'}\n            </span>\n            {label}\n          </ToggleButton>\n        )}\n    </ToggleButtonGroup>\n  );\n};\n\nconst Chart = (props) => {\n  const ordered = (props.specs || []).sort((a, b) => {\n    if (a.derived && !b.derived) {\n      return -1;\n    } else if (!a.derived && b.derived) {\n      return 1;\n    } else {\n      return a.label < b.label ? -1 : 1;\n    }\n  });\n\n  let YAxis0Color = \"black\";\n  let YAxis1Color = undefined;\n  for (const s of ordered) {\n    if (s.rightAxis) {\n      YAxis1Color = s.color;\n    } else {\n      YAxis0Color = s.color;\n    }\n  }\n\n  function getvRefLines(lines) {\n    let result = (lines || []).map((l, idx) => {\n      return <ReferenceLine key={`vrefline${idx}`}\n        x={l.date}\n        stroke=\"#e3e3e3\"\n        strokeWidth={1}\n      >\n        <Label value={l.label} position={\"insideTop\"} fill=\"#b3b3b3\" />\n      </ReferenceLine>\n    }\n    );\n    return result;\n  }\n\n  function getvRefAreas(lines) {\n    let result = (lines || []).map((l, idx) => {\n      const startdate = l.date;\n      const today = moment().unix();\n      let enddate = startdate + 14 * 24 * 60 * 60;\n      while (enddate > today) {\n        enddate -= 24 * 60 * 60;\n      }\n      return <ReferenceArea key={`vrefarea${idx}`}\n        x1={startdate} x2={enddate}\n        // stroke=\"red\"\n        // strokeOpacity={0.3}\n        fillOpacity={0.15}\n      />\n    }\n    );\n    return result;\n  }\n\n\n  function gethRefLines(lines) {\n    let result = (lines || []).map((l, idx) => {\n      return <>\n        <ReferenceLine key={`vrefline${idx}`}\n          y={l.value}\n          stroke=\"#e3e3e3\"\n          strokeWidth={1}\n        >\n          <Label value={l.label} position={\"insideLeft\"} ></Label>\n        </ReferenceLine>\n      </>\n    }\n    );\n    return result;\n  }\n\n  let vRefLines = getvRefLines(props.vRefLines);\n  let hRefLines = gethRefLines(props.hRefLines);\n\n  return (\n    <ResponsiveContainer height={300}>\n      <LineChart data={props.data} margin={{ left: -4, right: 8 }}>\n        {vRefLines}\n        {hRefLines}\n        {getvRefAreas(props.vRefLines)}\n        <Tooltip\n          formatter={valueFormatter}\n          labelFormatter={props.timestampFormatter}\n        />\n        <XAxis\n          dataKey=\"timestamp\"\n          tickFormatter={props.timestampFormatter}\n        />\n        <YAxis\n          yAxisId={0}\n          tick={{ fill: YAxis0Color }}\n          scale={props.scale === 'Log' ? logScale : props.scale}\n          width={50}\n          tickFormatter={props.yAxisFormatter}\n        />\n        {YAxis1Color &&\n          <YAxis\n            yAxisId={1}\n            tickFormatter={props.yAxisFormatter}\n            width={35}\n            tick={{ fill: YAxis1Color }}\n            orientation=\"right\"\n          />\n        }\n        <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"5 5\" />\n\n        {ordered.flatMap(spec => specToElements(spec))}\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n\nfunction specToElements(spec) {\n  return [lineForSpec(spec)];\n};\n\nfunction lineForSpec(spec) {\n  return (\n    <Line\n      key={spec.label}\n      baseLine={10000}\n      type=\"monotone\"\n      dataKey={spec.label}\n      isAnimationActive={false}\n      fill={spec.color}\n      stroke={spec.color}\n      strokeDasharray={spec.stipple ? '1 2' : undefined}\n      dot={false}\n      strokeWidth={2}\n      yAxisId={spec.rightAxis ? 1 : 0}\n    />\n  );\n};\n\nfunction valueFormatter(value) {\n  if (isNaN(value)) {\n    return 'unknown';\n  } else {\n    if (value < 1) {\n      return (value * 100).toFixed(1) + \"%\";\n    }\n    return value.toFixed(1).replace(/\\.?0+$/, '');\n  }\n}\n","import React from 'react';\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\nimport { DataSeries } from '../models/DataSeries';\nimport { getRefLines } from \"../Util\"\n\nconst GraphCountyHospitalization = (props) => {\n  let data = props.hospitalization;\n  let hospitalized =\n    DataSeries.fromOldDataSourceDataPoints(\"Hospitalized\", data, \"hospitalized_covid_patients\");\n  let icu =\n    DataSeries.fromOldDataSourceDataPoints(\"In ICU\", data, \"icu_covid_patients\");\n  let icu_avail =\n    DataSeries.fromOldDataSourceDataPoints(\"Available ICU Beds\", data, \"icu_available_beds\");\n  const vKeyRefLines = getRefLines(props.source);\n  let icu_capacity = props.source.hospitals().bedsICU;\n\n  let hrefs = icu_capacity ? [\n    {\n      value: icu_capacity,\n      label: \"100% ICU\",\n    },\n    {\n      value: icu_capacity / 4,\n      label: \"25% ICU\",\n    },\n    {\n      value: icu_capacity / 2,\n      label: \"50% ICU\",\n    },\n    {\n      value: icu_capacity / 4 * 3,\n      label: \"75% ICU\",\n    },\n  ] : null;\n\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: hospitalized,\n          color: \"blue\",\n          // covidspecial: true,\n        },\n        {\n          series: icu,\n          color: \"red\",\n          // covidspecial: true,\n        },\n        {\n          series: icu_avail,\n          color: \"#387908\",\n          stipple: true,\n          // covidspecial: true,\n        },\n      ]\n    }\n    vRefLines={vKeyRefLines}\n    hRefLines={hrefs}\n  />;\n};\n\nexport {\n  GraphCountyHospitalization,\n}\n","import React, { useContext } from 'react';\nimport { CountryContext } from \"../CountryContext\"\nimport { Country, State, County } from '../UnitedStates';\nimport { GraphCountyHospitalization } from \"./GraphCountyHospitalization\"\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\nimport { DataSeries } from '../models/DataSeries';\nimport { getRefLines } from \"../Util\"\n\nconst GraphAllBedProjectionState = (props) => {\n  return <GraphHospitalization {...props} source={props.state} />\n}\n\nconst GraphAllBedProjectionUS = (props) => {\n  const country = useContext(CountryContext);\n  return <GraphHospitalization {...props} source={country} />\n}\n\nconst GraphHospitalization = (props) => {\n  const source = props.source\n  const [data, setData] = React.useState(null);\n  React.useEffect(() => {\n    source.testingAsync().then(data => setData(data));\n  }, [source]);\n\n  if (!data || data.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  let hospitalized = DataSeries.fromOldDataSourceDataPoints(\"Hospitalized\", data, \"hospitalizedCurrently\");\n  let icu =\n    DataSeries.fromOldDataSourceDataPoints(\"In ICU\", data, \"inIcuCurrently\");\n  let onVentilatorCurrently =\n    DataSeries.fromOldDataSourceDataPoints(\"On Ventilator\", data, \"onVentilatorCurrently\")\n\n  let icu_capacity = source.hospitals().bedsICU;\n\n  let hrefs = icu_capacity ? [\n    {\n      value: icu_capacity,\n      label: \"100% ICU\",\n    },\n    {\n      value: icu_capacity / 4,\n      label: \"25% ICU\",\n    },\n    {\n      value: icu_capacity / 2,\n      label: \"50% ICU\",\n    },\n    {\n      value: icu_capacity / 4 * 3,\n      label: \"75% ICU\",\n    },\n  ] : null;\n\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: hospitalized,\n          color: \"blue\",\n        },\n        {\n          series: icu,\n          color: \"#387908\",\n        },\n        {\n          series: onVentilatorCurrently,\n          color: \"red\",\n        },\n      ]\n    }\n    vRefLines={getRefLines(source)}\n    hRefLines={hrefs}\n  />;\n}\n\nfunction maybeHospitalizationProjectionTabFor(source) {\n  // Fuck this\n  if (source instanceof Country) {\n    return {\n      id: 'peakhospitalization',\n      label: 'Hospitalization',\n      graph: (props) => <GraphAllBedProjectionUS />,\n    };\n  } else if (source instanceof State) {\n    return {\n      id: 'peakhospitalization',\n      label: 'Hospitalization',\n      graph: (props) => <GraphAllBedProjectionState state={props.source} />,\n    };\n  } else if (source instanceof County) {\n    if (source.hospitalization()) {\n      return {\n        id: 'peakhospitalization',\n        label: 'Hospitalization',\n        graph: (props) => <GraphCountyHospitalization\n          hospitalization={source.hospitalization()}\n          source={source}\n        />,\n      };\n    }\n    return undefined;\n  } else {\n    return undefined;\n  }\n}\n\n// cut here ---\n\nconst GraphVaccinationState = (props) => {\n  return <GraphVaccination {...props} source={props.state} />\n}\n\nconst GraphVaccination = (props) => {\n\n  let admin = props.source.vaccineAdminSeries();\n  let shipped = props.source.vaccineShippedSeries();\n  let alloc = props.source.vaccineAllocSeries();\n\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: admin,\n          color: \"blue\",\n        },\n        {\n          series: alloc,\n          color: \"green\",\n        },\n        {\n          series: shipped,\n          color: \"grey\",\n        },\n      ]\n    }\n  // vRefLines={getRefLines(source)}\n  // hRefLines={hrefs}\n  />;\n}\n\nexport {\n  maybeHospitalizationProjectionTabFor,\n  GraphAllBedProjectionState,\n  GraphAllBedProjectionUS,\n  GraphVaccinationState\n}\n","import React from 'react'\nimport { Summary } from './Summary'\nimport { County, Country, State } from \"../UnitedStates\";\nimport { MapUS } from \"../MapUS\"\nimport { GraphAllBedProjectionState, GraphAllBedProjectionUS, GraphVaccinationState } from \"./GraphHospitalizationProjection\"\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\nimport { getRefLines } from \"../Util\"\nimport { GraphCountyHospitalization } from \"./GraphCountyHospitalization\"\n\nconst DailyConfirmedNew = (props) => {\n  const [dataSeries, setDataSeries] = React.useState(null);\n  React.useEffect(() => {\n    props.source.confirmDataSeriesAsync().then(data => setDataSeries(data));\n  }, [props.source])\n\n  if (!dataSeries || dataSeries.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  // end of init\n  let doubling = Math.round(dataSeries.daysTo2X());\n  let dailyGrowth = Math.round(dataSeries.dailyGrowthRate() * 100);\n\n  const vKeyRefLines = getRefLines(props.source);\n\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: dataSeries,\n          color: \"#ff7300\",\n          covidspecial: true,\n        },\n        {\n          series: dataSeries.change().setLabel(\"New\"),\n          color: \"#387908\",\n          rightAxis: true,\n          covidspecial: true,\n          showMovingAverage: true,\n        },\n        {\n          series: dataSeries.trend().setLabel(`${doubling} Days to 2X (+${dailyGrowth}% Daily)`),\n          color: \"#ff7300\",\n          stipple: true,\n          initial: 'off',\n        },\n      ]\n    }\n    vRefLines={vKeyRefLines}\n  />;\n};\n\nconst DailyDeathNew = (props) => {\n  const [dataSeries, setDataSeries] = React.useState(null);\n  React.useEffect(() => {\n    props.source.deathDataSeriesAsync().then(data => setDataSeries(data));\n  }, [props.source])\n\n  if (!dataSeries || dataSeries.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  let doubling = Math.round(dataSeries.daysTo2X());\n  let dailyGrowth = Math.round(dataSeries.dailyGrowthRate() * 100);\n  const vKeyRefLines = getRefLines(props.source);\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: dataSeries,\n          color: \"black\",\n          covidspecial: true,\n        },\n        {\n          series: dataSeries.change().setLabel(\"New\"),\n          color: \"red\",\n          rightAxis: true,\n          covidspecial: true,\n          showMovingAverage: true,\n        },\n        {\n          series: dataSeries.trend().setLabel(`${doubling} Days to 2X (+${dailyGrowth}% Daily)`),\n          color: \"black\",\n          stipple: true,\n          initial: 'off',\n        },\n      ]\n    }\n    vRefLines={vKeyRefLines}\n  />;\n};\n\nconst AtAGlance = (props) => {\n\n  const newconfirm = <DailyConfirmedNew\n    source={props.source}\n  />;\n  const newdeath = <DailyDeathNew\n    source={props.source}\n  />;\n\n  if (props.source instanceof Country) {\n    return <div>\n      <Summary source={props.source} />\n      {newconfirm}\n      {newdeath}\n      <MapUS source={props.source} />\n      <GraphAllBedProjectionUS />\n    </div >;\n  }\n\n  if (props.source instanceof State) {\n    return <div>\n      <Summary source={props.source} />\n      {newconfirm}\n      {newdeath}\n      <MapUS source={props.source} />\n      <GraphAllBedProjectionState state={props.source} />\n      <GraphVaccinationState state={props.source} />\n    </div >;\n  }\n\n  if (props.source instanceof County) {\n    return <div>\n      <Summary source={props.source} />\n      {newconfirm}\n      {newdeath}\n      {props.source.hospitalization() &&\n        <GraphCountyHospitalization\n          hospitalization={props.source.hospitalization()}\n          source={props.source}\n        />\n      }\n    </div >;\n  }\n\n  return <div>\n    <Summary source={props.source} />\n    {newconfirm}\n    {newdeath}\n  </div >;\n}\n\nexport { AtAGlance };\n","import React from 'react'\nimport { Summary } from './Summary'\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\nimport { getRefLines } from \"../Util\"\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst DailyConfirmedNew = (props) => {\n  const [dataSeries, setDataSeries] = React.useState(null);\n  React.useEffect(() => {\n    props.source.confirmDataSeriesAsync().then(data => setDataSeries(data));\n  }, [props.source])\n\n  if (!dataSeries || dataSeries.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  const vKeyRefLines = getRefLines(props.source);\n\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: dataSeries.change().setLabel(\"New\"),\n          color: \"#387908\",\n          covidspecial: true,\n          showMovingAverage: true,\n        },\n      ]\n    }\n    vRefLines={vKeyRefLines}\n    showControls={false}\n    title={props.source.name}\n    subtitle={`Avg ${Math.round(props.source.serverityIndex() * 100000 / 14)}/100K/day past 2 weeks`}\n  />;\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  graph: {\n    // maxWidth: 400,\n    minWidth: 350,\n  }\n}));\n\nconst ChildrenAtAGlance = (props) => {\n  const classes = useStyles();\n\n  const children_sorted = props.source.children().sort((a, b) => {\n    // return b.summary().confirmed - a.summary().confirmed;\n    return b.serverityIndex() - a.serverityIndex();\n  });\n\n  const display = children_sorted.map(child => {\n    return <div className={classes.graph}>\n      <DailyConfirmedNew\n        source={child}\n      />\n    </div>\n  });\n\n  return <div>\n    <Summary source={props.source} />\n    <div className={classes.container}>\n      {display}\n    </div>\n  </div >;\n}\n\nexport { ChildrenAtAGlance };\n","import React from 'react'\nimport { Summary } from './Summary'\nimport { County } from \"../UnitedStates\";\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\nimport { DataSeries } from '../models/DataSeries';\nimport { getRefLines } from \"../Util\"\n\nconst PerCapitaCompare = (props) => {\n  const [USData, setUSdata] = React.useState(null);\n  React.useEffect(() => {\n    props.source.dataPointsAsync().then(data => setUSdata(data));\n  }, [props.source])\n\n  if (!USData || USData.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  let all = [props.source];\n  let metro = props.source.metro();\n  if (metro) {\n    all.push(metro);\n  }\n  all.push(props.source.state())\n  all.push(props.source.state().country());\n  const colors = [\n    \"#387908\",\n    \"#ff7300\",\n    \"blue\",\n    \"black\",\n  ]\n  let color_index = 0;\n  const serieses = all.map(s => {\n    let data = (s === props.source) ? USData : s.dataPoints();\n    let series = DataSeries\n      .fromOldDataSourceDataPoints(\"data\", data, props.dataColumn)\n      .change()\n      .nDayAverage(7)\n      .capita(s.population() / 100000)\n      .setLabel(s.name);\n    return {\n      series: series,\n      color: colors[color_index++],\n      stipple: s !== props.source,\n    };\n  })\n\n  const vKeyRefLines = getRefLines(props.source);\n  return <AdvancedGraph\n    title={props.title}\n    serieses={serieses}\n    vRefLines={vKeyRefLines}\n  />\n};\n\nconst CovidCompare = (props) => {\n  if (props.source instanceof County) {\n    return <div>\n      <Summary source={props.source} />\n      <PerCapitaCompare\n        title={\"New Cases/100K (7-day average)\"}\n        source={props.source}\n        dataColumn={\"confirmed\"}\n      />\n      <PerCapitaCompare\n        title={\"Deaths/100K (7-day average)\"}\n        source={props.source}\n        dataColumn={\"death\"}\n      />\n    </div >;\n  }\n\n  return <div>\n    Not Implemented\n  </div >;\n}\n\nexport { CovidCompare };\n","import React from 'react';\nimport { ResponsiveContainer, Tooltip, LineChart, Line, YAxis, XAxis, CartesianGrid, Legend } from 'recharts';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { myShortNumber, filterDataToRecent, getOldestMomentInData, useStickyState } from '../Util';\nimport { DateRangeSlider } from \"../DateRangeSlider\"\n\nconst moment = require(\"moment\");\n\nconst GraphDaysToDoubleOverTime = (props) => {\n\n    const [state, setState] = useStickyState({\n        defaultValue: {\n            showPastDays: 30,\n        },\n        cookieId: \"DaysToDoubleOverTimeGraphPreferences\"\n    });\n\n    const [mydata, setMydata] = React.useState(null);\n    React.useEffect(() => {\n        props.source.daysToDoubleTimeSeries()\n            .then(data => setMydata(data));\n    }, [props.source])\n\n    if (!mydata || mydata.length === 0) {\n        return <div>loading</div>;\n    }\n\n    let data = mydata;\n\n    data = data.map(d => {\n        d.name = moment(d.fulldate, \"MM/DD/YYYY\").format(\"M/D\");\n        d.confirmed = d.confirmed ? parseFloat(d.confirmed.toFixed(1)) : null;\n        d.death = d.death ? parseFloat(d.death.toFixed(1)) : null;\n        return d;\n    });\n\n    const handleSliderValueChange = (value) => {\n        let newstate = { ...state, showPastDays: value }\n        setState(newstate)\n    }\n\n    const oldestMoment = getOldestMomentInData(data);\n    data = filterDataToRecent(data, state.showPastDays)\n\n    const formatYAxis = (tickItem) => {\n        return myShortNumber(tickItem);\n    }\n\n    data = data.sort((a, b) => moment(a.fulldate, \"MM/DD/YYYY\").toDate() - (moment(b.fulldate, \"MM/DD/YYYY\")).toDate());\n\n    return <>\n        <Grid container alignItems=\"center\" spacing={1}>\n            <Grid xs sm=\"auto\"></Grid>\n            <Grid item xs=\"auto\">\n                <Typography>\n                  Date:\n                </Typography>\n            </Grid>\n            <Grid item xs={5} sm={3}>\n              <DateRangeSlider\n                  currentDate={moment()}\n                  startDate={oldestMoment}\n                  valueChanged={handleSliderValueChange}\n                  defaultValue={state.showPastDays}\n              />\n            </Grid>\n            <Grid xs></Grid>\n            <Grid item xs={12} sm=\"auto\">\n                <Typography align=\"center\">\n                    High Days-to-2x means slower spread.\n                </Typography>\n            </Grid>\n        </Grid >\n        <ResponsiveContainer height={300} >\n            <LineChart\n                data={data}\n                margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\n            >\n                <XAxis dataKey=\"name\" />\n                <YAxis yAxisId={0} tickFormatter={formatYAxis} />\n                <Tooltip />\n\n                <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"5 5\" />\n                <Line type=\"monotone\" dataKey=\"confirmed\" stroke=\"#387908\" yAxisId={0} strokeWidth={2} dot={{ r: 1 }} />\n                <Line type=\"monotone\" dataKey=\"death\" stroke=\"#000000\" yAxisId={0} strokeWidth={3} dot={{ r: 1 }} />\n                <Legend verticalAlign=\"top\" />\n\n            </LineChart></ResponsiveContainer>\n    </>\n}\n\nexport { GraphDaysToDoubleOverTime };\n","import React from 'react';\nimport { ResponsiveContainer, Tooltip, LineChart, Line, YAxis, XAxis, CartesianGrid, Legend } from 'recharts';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { myShortNumber } from '../Util';\nimport { AntSwitch } from \"./AntSwitch.js\"\n\nconst moment = require(\"moment\");\n\nconst GraphGrowthRateOverTime = (props) => {\n\n    const [state, setState] = React.useState({\n        show2weeks: false,\n    });\n\n    const [mydata, setMydata] = React.useState(null);\n    React.useEffect(() => {\n        props.source.growthRateTimeSeries()\n            .then(data => setMydata(data));\n    }, [props.source])\n\n    if (!mydata || mydata.length === 0) {\n        return <div>loading</div>;\n    }\n\n    let data = mydata;\n\n    const handle2WeeksToggle = event => {\n        setState({ ...state, show2weeks: !state.show2weeks });\n    };\n\n    data = data.map(d => {\n        return {\n            fulldate: d.fulldate,\n            name: moment(d.fulldate, \"MM/DD/YYYY\").format(\"M/D\"),\n            confirmed: d.confirmed && isFinite(d.confirmed) ? parseFloat((100 * d.confirmed).toFixed(1)) : null,\n            death: d.death && isFinite(d.death) ? parseFloat((100 * d.death).toFixed(1)) : null,\n        };\n    });\n\n    if (state.show2weeks) {\n        // const cutoff = moment().subtract(14, 'days')\n        // data = data.filter(d => {\n        // return moment(d.fulldate, \"MM/DD/YYYY\").isAfter(cutoff)\n        // });\n    } else {\n        const cutoff = moment().subtract(30, 'days')\n        data = data.filter(d => {\n            return moment(d.fulldate, \"MM/DD/YYYY\").isAfter(cutoff)\n        });\n    }\n    const formatYAxis = (tickItem) => {\n        return myShortNumber(tickItem) + ' %';\n    }\n\n    data = data.sort((a, b) => moment(a.fulldate, \"MM/DD/YYYY\").toDate() - (moment(b.fulldate, \"MM/DD/YYYY\")).toDate());\n\n    return <>\n        <Grid container alignItems=\"center\" spacing={1}>\n            <Grid item >\n                <Typography variant=\"body1\">\n                    Daily Growth Rate\n                </Typography>\n            </Grid>\n            <Grid item xs />\n            <Grid item>\n                <AntSwitch checked={state.show30days} onClick={handle2WeeksToggle} />\n            </Grid>\n            <Grid item onClick={handle2WeeksToggle}>\n                <Typography>\n                    All Dates\n                </Typography>\n            </Grid>\n        </Grid >\n        <ResponsiveContainer height={300} >\n            <LineChart\n                data={data}\n                margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\n            >\n                <XAxis dataKey=\"name\" />\n                <YAxis yAxisId={0} tickFormatter={formatYAxis} />\n                <Tooltip formatter={(value) => `${value}%`} />\n\n                <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"5 5\" />\n                <Line type=\"monotone\" dataKey=\"confirmed\" stroke=\"#387908\" yAxisId={0} strokeWidth={2} dot={{ r: 1 }} />\n                <Line type=\"monotone\" dataKey=\"death\" stroke=\"#000000\" yAxisId={0} strokeWidth={3} dot={{ r: 1 }} />\n                <Legend verticalAlign=\"top\" />\n\n            </LineChart>\n        </ResponsiveContainer>\n    </>\n}\n\nexport { GraphGrowthRateOverTime };\n","import React from 'react';\nimport { ResponsiveContainer, Tooltip, LineChart, Line, YAxis, XAxis, CartesianGrid } from 'recharts';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { scaleSymlog } from 'd3-scale';\nimport { myShortNumber, filterDataToRecent, getOldestMomentInData, useStickyState } from '../Util';\nimport { AntSwitch } from \"./AntSwitch.js\"\nimport { State } from '../UnitedStates';\nimport { DateRangeSlider } from \"../DateRangeSlider\"\nimport axisScales from './GraphAxisScales'\n\nconst moment = require(\"moment\");\n\nconst scale = scaleSymlog().domain([0, 'dataMax']);\n\nconst BasicGraphRecoveryAndDeath = (props) => {\n    const [state, setState] = useStickyState({\n        defaultValue: {\n            verticalScale: axisScales.linear,\n            showPastDays: 30,\n        },\n        cookieId: \"RecoveryAndDeathGraphPreferences\"\n    });\n\n    const [USData, setUSdata] = React.useState(null);\n    React.useEffect(() => {\n        props.source.dataPointsAsync().then(data => setUSdata(data));\n    }, [props.source])\n\n    if (!USData || USData.length === 0) {\n        return <div> Loading</div>;\n    }\n\n    let data = USData;\n\n    const handleLogScaleToggle = event => {\n        setState({\n            ...state,\n            verticalScale: state.verticalScale === axisScales.log ? axisScales.linear : axisScales.log\n        });\n    };\n\n    data = data.map(d => {\n        d.name = moment(d.fulldate, \"MM/DD/YYYY\").format(\"M/D\");\n        return d;\n    });\n\n\n    const formatYAxis = (tickItem) => {\n        return myShortNumber(tickItem);\n    }\n\n    const handleSliderValueChange = (value) => {\n        let newstate = { ...state, showPastDays: value }\n        setState(newstate)\n    }\n\n    const oldestMoment = getOldestMomentInData(data);\n    data = filterDataToRecent(data, state.showPastDays)\n\n    data = data.sort((a, b) => moment(a.fulldate, \"MM/DD/YYYY\").toDate() - (moment(b.fulldate, \"MM/DD/YYYY\")).toDate());\n\n    return <>\n        <Grid container alignItems=\"center\" spacing={1}>\n            <Grid item>\n                <AntSwitch checked={state.verticalScale === axisScales.log} onClick={handleLogScaleToggle} />\n            </Grid>\n            <Grid item onClick={handleLogScaleToggle}>\n                <Typography>\n                    Log\n                </Typography>\n            </Grid>\n            <Grid item > </Grid>\n            <Grid item>\n                <Typography>\n                  Show Data From:\n                </Typography>\n            </Grid>\n            <Grid item xs>\n              <DateRangeSlider\n                  currentDate={moment()}\n                  startDate={oldestMoment}\n                  valueChanged={handleSliderValueChange}\n                  defaultValue={state.showPastDays}\n              />\n            </Grid>\n            <Grid item > </Grid>\n        </Grid>\n        <ResponsiveContainer height={300} >\n            <LineChart\n                data={data}\n                margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\n            >\n                <XAxis dataKey=\"name\" />\n\n                {\n                    state.verticalScale === axisScales.log ?\n                        <YAxis yAxisId={0} scale={scale} /> :\n                        <YAxis yAxisId={0} tickFormatter={formatYAxis} />\n                }\n\n                <Tooltip />\n\n                <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"5 5\" />\n                <Line type=\"monotone\" dataKey=\"recovery\" stroke=\"#387908\" yAxisId={0} strokeWidth={2} />\n                <Line type=\"monotone\" dataKey=\"death\" stroke=\"#000000\" yAxisId={0} strokeWidth={3} />\n\n            </LineChart></ResponsiveContainer>\n    </>\n}\n\nconst CaveatStateGraph = (props) => {\n    return (\n        <>\n            <Typography variant=\"body2\">\n                Recovery data collection started on 4/2.\n              {props.source.summary().recovered > 0 ||\n                    \" No recovery data for this state yet.\"\n                }\n            </Typography>\n            <BasicGraphRecoveryAndDeath source={props.source} />\n        </>\n    );\n}\n\nfunction maybeRecoveryAndDeathTabFor(source) {\n    let graph;\n    if (source instanceof State) {\n        graph = CaveatStateGraph;\n    } else if (source.summary().recovered) {\n        graph = BasicGraphRecoveryAndDeath;\n    } else {\n        // Avoid showing hopeless graphs\n        return undefined;\n    }\n\n    return {\n        id: 'recovery',\n        label: 'Recovery',\n        graph,\n    };\n}\n\nexport { maybeRecoveryAndDeathTabFor };\n","import React from 'react';\nimport {\n  ResponsiveContainer, AreaChart, Area, YAxis, XAxis, Tooltip,\n  CartesianGrid, Legend, LineChart, Line\n} from 'recharts';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport { myShortNumber } from '../Util.js';\nimport { mergeDataSeries, makeDataSeriesFromTotal, exportColumnFromDataSeries } from \"./DataSeries\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { withRouter } from 'react-router-dom'\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\nimport { DataSeries } from '../models/DataSeries';\nimport { getRefLines } from \"../Util\"\n\nconst useStyles = makeStyles(theme => ({\n  customtooltip: {\n    backgroundColor: \"#FFFFFF\",\n  }\n}));\n\nconst CustomTooltip = (props) => {\n  const classes = useStyles();\n  const { active } = props;\n  if (active) {\n    const { payload, label } = props;\n    let tested;\n    let positive;\n    let negative;\n    let totalPositve;\n    let totalTested;\n    let totalNegative;\n    let totalPending;\n\n    payload.map(p => {\n      p = p.payload;\n      if (\"testsThatDay\" in p) {\n        tested = p.testsThatDay;\n      }\n      if (\"positiveThatDay\" in p) {\n        positive = p.positiveThatDay;\n      }\n      if (\"negativeThatDay\" in p) {\n        negative = p.negativeThatDay;\n      }\n      if (\"positive\" in p) {\n        totalPositve = p.positive;\n      }\n      if (\"negative\" in p) {\n        totalNegative = p.negative;\n      }\n      if (\"pending\" in p) {\n        totalPending = p.pending;\n      }\n      if (\"total\" in p) {\n        totalTested = p.total;\n        if (totalTested === 0) {\n          totalTested = p.totalTestResults;\n        }\n      }\n      return null;\n    });\n\n    return (\n      <div className={classes.customtooltip}>\n        <Typography variant=\"body1\" noWrap>\n          {label}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          {`Daily Tested: ${tested}`}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          {`Daily Positve : ${positive}`}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          {`Daily Negative : ${negative}`}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          {`Cumulative Positve Rate : ${(totalPositve / totalTested * 100).toFixed(1)} %`}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          {`Cumulative Negative Rate : ${(totalNegative / totalTested * 100).toFixed(1)} %`}\n        </Typography>\n        <Typography variant=\"body2\" noWrap>\n          {`Pending: ${totalPending ? totalPending : 0}`}\n        </Typography>\n      </div>\n    );\n  }\n  return null;\n}\n\nconst formatYAxis = (tickItem) => {\n  return myShortNumber(tickItem);\n}\n\nfunction maybeFindTesting(source) {\n  let ancestor = source;\n  while (!ancestor.testing && ancestor.parent) {\n    ancestor = ancestor.parent();\n  }\n  return ancestor;\n}\n\n\nconst PostiveRate7Days = (props) => {\n\n  const [sourceData, setSourceData] = React.useState(null);\n\n  React.useEffect(() => {\n    props.source.testingAsync()\n      .then(data => setSourceData(data));\n  }, [props.source])\n\n  if (!sourceData || sourceData.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  let totalTestResults_series = DataSeries.fromOldDataSourceDataPoints(\"Tests\", sourceData, \"totalTestResults\");\n  let totalPositve_series = DataSeries.fromOldDataSourceDataPoints(\"Positive\", sourceData, \"positive\");\n\n  let positveDaily = totalPositve_series.change().nDayAverage(7);\n  let testsDialy = totalTestResults_series.change().nDayAverage(7);\n  let rate = positveDaily.divide(testsDialy).setLabel(\"Positive Rate 7-days\");\n\n  const vRefLines = getRefLines();\n\n  return <AdvancedGraph\n    serieses={\n      [\n        {\n          series: totalPositve_series.change().nDayAverage(7),\n          color: 'red',\n          initial: 'off',\n          rightAxis: true,\n        },\n        {\n          series: totalTestResults_series.change().nDayAverage(7),\n          color: 'blue',\n          initial: 'off',\n          rightAxis: true,\n        },\n        {\n          series: rate,\n          color: 'orange',\n        },\n      ]\n    }\n    vRefLines={vRefLines}\n    yAxisFormatter={(y) => {\n      return y * 100 + \"%\";\n    }}\n  />;\n}\n\nconst GraphTestingWidget = withRouter((props) => {\n  let subtabs = new Map([\n    ['positverate', {\n      label: \"Positive Rate 7-days\",\n      widget: <PostiveRate7Days {...props} />\n    }],\n    ['effort', {\n      label: \"Test Effort\",\n      widget: <GraphTestingWidget1 {...props} />\n    }],\n    ['result', {\n      label: \"Results\",\n      widget: <GraphTestingWidget1 {...props} chart=\"result\" />\n    }],\n  ]);\n\n  let desired = getURLParam(props.history.location.search, \"detailed\");\n  if (!subtabs.has(desired)) {\n    desired = subtabs.keys().next().value;\n  }\n  const [subtab, setSubtab] = React.useState(desired);\n\n  const buttonGroup = <ToggleButtonGroup\n    value={subtab}\n    exclusive\n    size=\"small\"\n    onChange={(e, newvalue) => {\n      setSubtab(newvalue)\n      pushChangeTo(props.history, \"detailed\", newvalue);\n    }}\n  >\n    {[...subtabs].map(([id, { label }]) =>\n      <ToggleButton key={id} value={id}>{label}</ToggleButton>\n    )}\n  </ToggleButtonGroup>;\n\n  return <div>\n    {buttonGroup}\n    {subtabs.get(desired).widget}\n  </div>;\n});\n\nconst GraphTestingWidget1 = (props) => {\n  const [sourceData, setSourceData] = React.useState(null);\n  const useAreaChart = props.chart === \"result\";\n\n  React.useEffect(() => {\n    props.source.testingAsync()\n      .then(data => setSourceData(data));\n  }, [props.source])\n\n  if (!sourceData || sourceData.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  let data = sourceData.sort(function (a, b) {\n    return a.date - b.date;\n  });\n\n  let testTotalArray = exportColumnFromDataSeries(data, \"total\");\n  let testPostives = exportColumnFromDataSeries(data, \"positive\");\n  let testNegatives = exportColumnFromDataSeries(data, \"negative\");\n  let total = makeDataSeriesFromTotal(testTotalArray, \"total\", \"testsThatDay\", \"testsThatDay_avg\");\n  let pos = makeDataSeriesFromTotal(testPostives, \"postive\", \"positiveThatDay\", \"positiveThatDay_avg\");\n  let neg = makeDataSeriesFromTotal(testNegatives, \"negative\", \"negativeThatDay\", \"negativeThatDay_avg\");\n\n  data = mergeDataSeries(data, total);\n  data = mergeDataSeries(data, pos);\n  data = mergeDataSeries(data, neg);\n\n  let total_tests = data.reduce((m, a) => { return a.total > m ? a.total : m }, 0);\n  let total_positives = data.reduce((m, a) => { return a.positive > m ? a.positive : m }, 0);\n  let total_negatives = data.reduce((m, a) => { return a.negative > m ? a.negative : m }, 0);\n  if (total_tests === 0) {\n    total_tests = data.reduce((m, a) => { return a.totalTestResults > m ? a.totalTestResults : m }, 0);\n    let testTotalArray = exportColumnFromDataSeries(data, \"totalTestResults\");\n    let total = makeDataSeriesFromTotal(testTotalArray, \"totalTestResults\", \"testsThatDay\", \"testsThatDay_avg\");\n    data = mergeDataSeries(data, total);\n  }\n  // If true, show area chart.\n  // If false, show line chart.\n  let chart = useAreaChart ?\n    <AreaChart\n      data={data}\n      margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\n    >\n      <YAxis tickFormatter={formatYAxis} />\n      <XAxis dataKey=\"name\" />\n      <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"5 5\" />\n      {/* <Line type=\"monotone\" name=\"Total Tested\" dataKey=\"total\" stroke=\"#387908\" yAxisId={0} strokeWidth={3} />\n        <Line type=\"monotone\" name=\"Tested Positive\" dataKey=\"positive\" stroke=\"#ff7300\" yAxisId={0} strokeWidth={3} /> */}\n      <Area stackId=\"1\" type=\"monotone\" name=\"Positive\" dataKey=\"positiveThatDay\" stroke=\"#ff7300\" fill=\"#ff7300\" yAxisId={0} strokeWidth={3} />\n      <Area stackId=\"1\" type=\"monotone\" name=\"Negative\" dataKey=\"negativeThatDay\" stroke=\"#00aeef\" fill=\"#00aeef\" yAxisId={0} strokeWidth={3} />\n      {/* <Area stackId=\"1\" type=\"monotone\" name=\"Pending\" dataKey=\"pendingThatDay\" stroke=\"#387908\" fill=\"#387908\" yAxisId={0} strokeWidth={3} /> */}\n      <Legend verticalAlign=\"top\" />\n      <Tooltip content={<CustomTooltip />} />\n    </AreaChart>\n    :\n    <LineChart\n      data={data}\n      margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\n    >\n      <YAxis tickFormatter={formatYAxis} />\n      <XAxis dataKey=\"name\" />\n      <CartesianGrid stroke=\"#d5d5d5\" strokeDasharray=\"5 5\" />\n      {/* <Line type=\"monotone\" name=\"Total\" dataKey=\"total\" stroke=\"#ff7300\" yAxisId={0} strokeWidth={3} /> */}\n      <Line type=\"monotone\" name=\"Daily\" dataKey=\"testsThatDay\" dot={{ r: 1 }} strokeDasharray=\"2 2\" stroke=\"#387908\" yAxisId={0} strokeWidth={1} />\n      <Line type=\"monotone\" name=\"3d daily avg\" dataKey=\"testsThatDay_avg\" dot={{ r: 1 }} stroke=\"#387908\" yAxisId={0} strokeWidth={2} />\n      <Line type=\"monotone\" name=\"Positive\" dataKey=\"positiveThatDay\" dot={{ r: 1 }} strokeDasharray=\"2 2\" stroke=\"#a3a3a3\" yAxisId={0} strokeWidth={1} />\n      <Line type=\"monotone\" name=\"3d daily avg\" dataKey=\"positiveThatDay_avg\" dot={{ r: 1 }} stroke=\"#a3a3a3\" yAxisId={0} strokeWidth={2} />\n      {/* <Line type=\"monotone\" name=\"Negative\" dataKey=\"negativeThatDay\" stroke=\"#00aeef\" yAxisId={0} strokeWidth={3} /> */}\n      <Legend verticalAlign=\"top\" />\n      <Tooltip content={<CustomTooltip />} />\n    </LineChart>\n\n  return <div>\n    <Grid container alignItems=\"center\" justify=\"space-between\" spacing={1}>\n      <Grid item container xs={12} sm={12} md={6} alignItems=\"center\" justify=\"flex-start\" spacing={1}>\n        <Grid item>\n          <Typography variant=\"body2\" noWrap>\n            {`Total: ${myShortNumber(total_tests)}\n                    Pos.:${(total_positives / total_tests * 100).toFixed(0)}%\n                    Neg.: ${(total_negatives / total_tests * 100).toFixed(0)}%\n                    `}\n          </Typography>\n        </Grid>\n      </Grid>\n    </Grid>\n    <ResponsiveContainer height={300} >\n      {chart}\n    </ResponsiveContainer>\n    <Typography variant=\"body2\" noWrap>\n      Data source: https://covidtracking.com/api/\n        </Typography>\n  </div>;\n}\n\nfunction maybeTestingTabFor(source) {\n  if (source.testingAsync) {\n    return {\n      id: 'testing',\n      label: 'Tests',\n      graph: GraphTestingWidget,\n    };\n  } else {\n    const maybeAncestor = maybeFindTesting(source);\n    if (maybeAncestor.testing) {\n      return {\n        id: 'testing',\n        label: `${maybeAncestor.name} Testing`,\n        graph: GraphTestingWidget,\n      };\n    } else {\n      return undefined;\n    }\n  }\n}\n\n\nfunction getURLParam(url, key) {\n  const params = new URLSearchParams(url);\n  if (params.has(key)) {\n    return params.get(key);\n  } else {\n    return undefined;\n  }\n}\n\nfunction pushChangeTo(history, key, value) {\n  const params = new URLSearchParams(history.location.search);\n  params.set(key, value);\n  history.location.search = params.toString();\n  history.push(history.location)\n}\n\nexport { maybeTestingTabFor };\n","import React from 'react';\nimport { getRefLines } from \"../Util\"\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph'\n\nconst GraphDaily = (props) => {\n  const [confirmedSeries, setConfimedSeries] = React.useState(null);\n  const [deathSeries, setDeathSeries] = React.useState(null);\n  const [hosptializationCurrentlySeries, setHospitalizationCurrentSeries] = React.useState(null);\n\n  React.useEffect(() => {\n    props.source.confirmDataSeriesAsync().then(data => setConfimedSeries(data));\n    props.source.deathDataSeriesAsync().then(data => setDeathSeries(data));\n    if (props.source.testingAsync) {\n      props.source.hospitalizationCurrentlyAsync().then(data => setHospitalizationCurrentSeries(data));\n    }\n  }, [props.source])\n\n  if (\n    !confirmedSeries || confirmedSeries.length === 0 ||\n    (props.source.testingAsync && (!hosptializationCurrentlySeries || hosptializationCurrentlySeries.length === 0)) ||\n    !deathSeries || deathSeries.length === 0\n  ) {\n    return <div> Loading</div>;\n  }\n\n  // end of init\n  const vKeyRefLines = getRefLines(props.source);\n\n  const series =\n    [\n      {\n        series: confirmedSeries\n          .change()\n          // .nDayAverage(7)\n          .setLabel(\"New Confirm\"),\n        color: \"#387908\",\n        covidspecial: true,\n        showMovingAverage: true,\n      },\n      {\n        series: deathSeries\n          .change()\n          // .nDayAverage(7)\n          .setLabel(\"New Death\"),\n        color: \"red\",\n        rightAxis: true,\n        covidspecial: true,\n        showMovingAverage: true,\n      },\n    ]\n  if (props.source.testingAsync) {\n    series.push(\n      {\n        series: hosptializationCurrentlySeries.setLabel(\"Hospitalized (left axis)\"),\n        color: \"blue\",\n        covidspecial: true,\n        // showMovingAverage: true,\n      }\n    );\n  }\n\n  return <AdvancedGraph\n    serieses={series}\n    vRefLines={vKeyRefLines}\n  />;\n};\n\nfunction maybeDailyTabFor(source) {\n  return {\n    id: 'daily',\n    label: 'Daily',\n    graph: GraphDaily\n  };\n}\n\nexport { maybeDailyTabFor };\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Badge from '@material-ui/core/Badge';\nimport { withStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'react-router-dom'\nimport { AtAGlance } from './AtAGlance.js'\nimport { ChildrenAtAGlance } from './ChildrenAtAGlance.js'\nimport { CovidCompare } from './CovidCompare.js'\nimport { GraphDaysToDoubleOverTime } from './GraphDaysToDoubleOverTime'\nimport { GraphGrowthRateOverTime } from './GraphGrowthRateOverTime'\nimport { maybeHospitalizationProjectionTabFor } from './GraphHospitalizationProjection';\nimport { maybeMapTabFor } from '../Map';\nimport { maybeRecoveryAndDeathTabFor } from './GraphRecoveryAndDeath.js'\nimport { maybeTestingTabFor } from './GraphTestingEffort'\nimport { maybeDailyTabFor } from './GraphDaily'\nimport { Country, State, County } from \"../UnitedStates\"\n\nconst styles = theme => ({\n  content: {\n    margin: '0 2px 2px 2px',\n  },\n  location: {\n    margin: '2px 0',\n  },\n  detailedToggles: {\n    margin: '12px 0',\n  },\n  tabContent: {\n    padding: '2px',\n  }\n});\n\nconst RibbonBadge = withStyles({\n  badge: {\n    borderRadius: '0px',\n    fontSize: '0.3rem',\n    transform: 'rotate(15deg)',\n    height: '10px',\n    minWidth: '10px',\n    right: '-15px',\n  }\n})(Badge);\n\n\nclass UnhookedGraphSection extends React.Component {\n\n  static getDerivedStateFromProps(props, state) {\n    const desired = UnhookedGraphSection.getDesiredState(props);\n    if (!state || state.tab !== desired.tab) {\n      return desired;\n    } else {\n      return null;\n    }\n  }\n\n  static getDesiredState(props) {\n    return { tab: getUnvalidated(props.location, 'tab') };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = UnhookedGraphSection.getDesiredState(props);\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const history = this.props.history;\n    const source = this.props.source;\n    const tabs = new Map();\n\n    tabs.set('glance', {\n      label: \"At a glance\",\n      content: AtAGlance,\n    });\n\n    if (!(source instanceof County)) {\n      tabs.set('childrenglance', {\n        label: \"Sub-Regions\",\n        content: ChildrenAtAGlance,\n        showRibbon: true,\n      });\n    }\n\n    const maybeDaily = maybeDailyTabFor(source);\n    if (maybeDaily) {\n      tabs.set(maybeDaily.id, {\n        label: maybeDaily.label,\n        content: maybeDaily.graph,\n      });\n    }\n\n    if (source instanceof County) {\n      tabs.set(\"compare\", {\n        label: \"Compare\",\n        content: CovidCompare,\n        showRibbon: true,\n      });\n    }\n\n    [maybeHospitalizationProjectionTabFor]\n      .map(factory => factory(source))\n      .filter(tab => tab)\n      .forEach(tab =>\n        tabs.set(tab.id, {\n          label: tab.label,\n          content: tab.graph,\n        }));\n\n    if (source instanceof State || source instanceof Country) {\n      const maybeTesting = maybeTestingTabFor(source)\n      if (maybeTesting) {\n        tabs.set(maybeTesting.id, {\n          label: maybeTesting.label,\n          content: maybeTesting.graph,\n        });\n      }\n    }\n    const maybeMap = maybeMapTabFor(source);\n    if (maybeMap) {\n      tabs.set(maybeMap.id, {\n        label: maybeMap.label,\n        content: maybeMap.content,\n        // showRibbon: true,  // TO SHOW THE RIBBON ADD A LINE LIKE THIS\n      });\n    }\n\n    tabs.set('growthRate', {\n      label: \"Growth\",\n      content: GraphGrowthRateOverTime,\n    });\n\n    tabs.set('days2x', {\n      label: \"Doubling\",\n      content: GraphDaysToDoubleOverTime,\n    });\n\n    const maybeRecovery = maybeRecoveryAndDeathTabFor(source);\n    if (maybeRecovery && (source instanceof State || source instanceof Country)) {\n      tabs.set(maybeRecovery.id, {\n        label: \"Recovery\",\n        content: maybeRecovery.graph,\n      });\n    }\n\n    const headings = [...tabs.keys()];\n    let tab;\n    if (headings.includes(this.state.tab)) {\n      tab = this.state.tab;\n    } else {\n      tab = headings[0];\n    }\n\n    const switchTo = (e, index) => {\n      const desire = headings[index];\n      this.setState({ tab: desire });\n      pushChangeTo(history, 'tab', desire);\n    };\n    const TabContent = tabs.get(tab).content;\n\n    return (\n      <div className={classes.content}>\n        <Tabs\n          value={headings.indexOf(tab)}\n          onChange={switchTo}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\">\n          {[...tabs.values()].map(tab => {\n            const label = tab.showRibbon ? <RibbonBadge badgeContent='New' color=\"error\">{tab.label}</RibbonBadge> : tab.label;\n            return <Tab label={label} key={tab.label} />;\n          })}\n        </Tabs>\n        <Paper className={classes.tabContent}>\n          <TabContent source={source} />\n        </Paper>\n      </div>\n    );\n  }\n}\nexport const GraphSection =\n  withRouter(withStyles(styles)(UnhookedGraphSection));\n\nfunction getUnvalidated(location, key) {\n  const params = new URLSearchParams(location.search);\n  if (params.has(key)) {\n    return params.get(key);\n  } else {\n    return undefined;\n  }\n}\n\nfunction pushChangeTo(history, key, value) {\n  const params = new URLSearchParams(history.location.search);\n  params.set(key, value);\n  history.location.search = params.toString();\n  history.push(history.location)\n}\n","import { State, Country, Metro } from './UnitedStates';\nimport { MapUS } from './MapUS'\n\nfunction maybeMapTabFor(source) {\n    if (source instanceof State) {\n        return {\n            id: 'map',\n            label: 'Map',\n            content: MapUS,\n        };\n    } else if (source instanceof Country) {\n        return {\n            id: 'map',\n            label: 'Map',\n            content: MapUS,\n        };\n    } else if (source instanceof Metro) {\n        return {\n            id: 'map',\n            label: 'Map',\n            content: MapUS,\n        };\n    } else {\n        return undefined;\n    }\n}\n\nexport { maybeMapTabFor }\n","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n\n\nfunction descendingComparator(a, b, orderBy) {\n\n  if (isNaN(a[orderBy] && !isNaN(b[orderBy]))) {\n    return 1;\n  }\n  if (isNaN(b[orderBy] && !isNaN(a[orderBy]))) {\n    return -1;\n  }\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction EnhancedTableHead(props) {\n  const { headCells, order, orderBy, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nexport { EnhancedTableHead, stableSort, getComparator }\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport {\n  myShortNumber,\n  myGoodWholeNumber,\n  myGoodShortNumber,\n  getStateNameByStateCode,\n} from \"./Util.js\";\nimport { Link as MaterialLink } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { EnhancedTableHead, stableSort, getComparator } from \"./TableSortHelper\";\nimport { reverse } from 'named-urls';\nimport { CountryContext } from \"./CountryContext\";\nimport { useContext } from 'react';\nimport routes from \"./Routes\"\n\nconst useStyles = makeStyles(theme => ({\n  row: {\n    padding: theme.spacing(1, 1),\n    justifyContent: \"space-between\",\n    display: \"flex\",\n  },\n  tag: {\n    display: \"inline-block\",\n    textAlign: \"center\",\n    backgroundColor: \"#f3f3f3\",\n    padding: theme.spacing(1, 1),\n    flex: 1,\n    margin: 3,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  topTag: {\n    fontSize: \"0.5rem\",\n  },\n  table: {\n    width: \"100%\"\n  }\n}));\n\nconst ListAllStates = (props) => {\n  let list = props.country.allStates()\n    .sort((a, b) => b.confirmed() - a.confirmed());\n  let countySummary =\n    <AllStateListRender states={list} />\n  return countySummary;\n}\n\nconst ListAllStatesPerCapita = (props) => {\n  let list = props.country.allStates()\n    .sort((a, b) => b.confirmed() - a.confirmed());\n  let countySummary =\n    <AllStateListCapita states={list} />\n  return countySummary;\n}\n\nconst ListAllStatesTesting = (props) => {\n  let list = props.country.allStates()\n    .sort((a, b) => b.confirmed() - a.confirmed());\n  let countySummary =\n    <AllStateListTesting states={list} />\n  return countySummary;\n}\n\nfunction prepareDataForDisplay(list) {\n  let extendlist = list.map(state => {\n    const row = state.summary();\n    let newrow = {};\n    newrow.newcases = row.newcases;\n    newrow.confirmed = row.confirmed;\n    newrow.deathsNew = row.deathsNew;\n    newrow.newpercent = row.newpercent;\n    newrow.death = row.deaths;\n    newrow.newEntry = (Number.isNaN(newrow.newpercent) || !isFinite(newrow.newpercent))\n      ? newrow.newcases\n      : `${(newrow.newpercent * 100).toFixed(1)}%`;\n    if (newrow.newcases === 0) {\n      newrow.newEntry = 0;\n    }\n    newrow.pop = state.population();\n    newrow.statename = state.name;\n    newrow.state = state.twoLetterName;\n    newrow.partsPerMil = newrow.confirmed * 1000000 / newrow.pop;\n    newrow.deathsPerMil = newrow.death * 1000000 / newrow.pop;\n    newrow.daysToDouble = row.daysToDouble;\n    newrow.daysToDoubleDeath = row.daysToDoubleDeath;\n    newrow.recovered = row.recovered;\n    return newrow;\n  });\n  return extendlist;\n}\n\nconst AllStateListCapita = (props) => {\n  const list = props.states;\n  const classes = useStyles();\n\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('confirmed');\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const myHeadCells = [\n    { id: 'state', numeric: false, disablePadding: false, label: 'Name' },\n    { id: 'confirmed', numeric: true, disablePadding: true, label: 'Total' },\n    { id: 'partsPerMil', numeric: true, disablePadding: false, label: '#/mil' },\n    { id: 'death', numeric: true, disablePadding: false, label: 'Deaths' },\n    { id: 'deathsPerMil', numeric: true, disablePadding: false, label: 'Deaths/mil' },\n    { id: 'pop', numeric: true, disablePadding: false, label: 'Pop.' },\n  ];\n\n  let extendlist = prepareDataForDisplay(list);\n\n  let countySummary =\n    <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n      <EnhancedTableHead\n        classes={classes}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        headCells={myHeadCells}\n      />\n      <TableBody>\n        {\n          stableSort(extendlist, getComparator(order, orderBy))\n            .map(row => {\n              return <TableRow key={row.state}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <MaterialLink component={RouterLink} to={reverse(routes.state, { state: row.state })}>\n                    {row.statename}\n                  </MaterialLink>\n                </TableCell>\n                <TableCell align=\"right\">{row.confirmed}</TableCell>\n                <TableCell align=\"right\">{myGoodWholeNumber(row.partsPerMil)}</TableCell>\n                <TableCell align=\"right\">{myGoodShortNumber(row.death)}</TableCell>\n                <TableCell align=\"right\">{myGoodWholeNumber(row.deathsPerMil)}</TableCell>\n                <TableCell align=\"right\">{(row.pop === 0) ? \"-\" : myGoodShortNumber(row.pop)}</TableCell>\n              </TableRow>;\n            })\n        }\n      </TableBody>\n    </Table>\n  return countySummary;\n};\n\nconst AllStateListRender = (props) => {\n  const list = props.states;\n  const classes = useStyles();\n\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('newcases');\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const myHeadCells = [\n    { id: 'state', numeric: false, disablePadding: false, label: 'Name' },\n    { id: 'confirmed', numeric: true, disablePadding: true, label: 'Total' },\n    { id: 'newcases', numeric: true, disablePadding: false, label: 'New' },\n    { id: 'recovered', numeric: true, disablePadding: false, label: 'Recovered' },\n    { id: 'death', numeric: true, disablePadding: false, label: 'Deaths' },\n    { id: 'deathsNew', numeric: true, disablePadding: false, label: 'Deaths New' },\n    { id: 'daysToDouble', numeric: true, disablePadding: false, label: 'Days 2x' },\n    { id: 'daysToDoubleDeath', numeric: true, disablePadding: false, label: 'Deaths 2x' },\n  ];\n\n  let extendlist = prepareDataForDisplay(list);\n\n  let countySummary =\n    <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n      <EnhancedTableHead\n        classes={classes}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        headCells={myHeadCells}\n      />\n      <TableBody>\n        {\n          stableSort(extendlist, getComparator(order, orderBy))\n            .map(row => {\n              let newcolumn = row.newcases ? `${myShortNumber(row.newcases)}(${row.newEntry})` : 0;\n              if (row.newcases === 0) {\n                newcolumn = \"-\";\n              } else {\n                newcolumn = <section>\n                  <div className={classes.topTag}>\n                    +{row.newEntry}\n                  </div>\n                  <div className={classes.mainTag}>\n                    {myShortNumber(row.newcases)} </div>\n                </section>;\n              }\n\n              return <TableRow key={row.state}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <MaterialLink component={RouterLink} to={reverse(routes.state, { state: row.state })}>\n                    {row.statename}\n                  </MaterialLink>\n                </TableCell>\n                <TableCell align=\"right\">{row.confirmed}</TableCell>\n                <TableCell align=\"right\"> {newcolumn} </TableCell>\n                <TableCell align=\"right\">{row.recovered ? myGoodShortNumber(row.recovered) : \"-\"}</TableCell>\n                <TableCell align=\"right\">{myGoodShortNumber(row.death)}</TableCell>\n                <TableCell align=\"right\">{myGoodShortNumber(row.deathsNew)}</TableCell>\n\n                <TableCell align=\"right\">{(!row.daysToDouble) ? \"-\" :\n                  ((row.daysToDouble > 365 || row.daysToDouble < 0) ? \"1 Year+\" : row.daysToDouble.toFixed(1))}</TableCell>\n                <TableCell align=\"right\">{(!row.daysToDoubleDeath) ? \"-\" :\n                  (row.daysToDoubleDeath > 365 ? \"1 Year+\" : row.daysToDoubleDeath.toFixed(1))}</TableCell>\n              </TableRow>;\n            })\n        }\n      </TableBody>\n    </Table>\n  return countySummary;\n};\n\nfunction prepareStatesTestingDataForDisplay(list) {\n  let extendlist = list.map(row => {\n    let newrow = {};\n    let totalTested = row.positive + row.negative;\n    newrow.statename = getStateNameByStateCode(row.state);\n    newrow.positiveNumber = row.positive ?? 0;\n    newrow.positiveRate = row.positive / totalTested * 100;\n    newrow.negativeNumber = row.negative ?? 0;\n    newrow.negativeRate = row.negative / totalTested * 100;\n    newrow.pending = row.pending ?? \"-\";\n    newrow.total = row.total;\n    newrow.testCoverage = row.testCoverage;\n    return newrow;\n  });\n  return extendlist;\n}\n\nconst AllStateListTesting = (props) => {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('confirmed');\n\n  const country = useContext(CountryContext);\n  const [sourceData, setSourceData] = React.useState(null);\n  React.useEffect(() => {\n    country.testingAllAsync()\n      .then(data => setSourceData(data));\n  }, [country])\n  if (!sourceData || sourceData.length === 0) {\n    return <div> Loading</div>;\n  }\n\n  let states_data = {};\n  for (let i = 0; i < sourceData.length; i++) {\n    let record = sourceData[i];\n    let state = record.state;\n    if ((state in states_data) && (states_data[state].date > record.date)) {\n      continue;\n    }\n    if (record.pending === null) {\n      // have to do this other sort doesn't work\n      record.pending = Number.NEGATIVE_INFINITY;\n    }\n    const stateObject = country.stateForId(record.fips);\n    record.testCoverage = record.total / stateObject.population();\n    states_data[state] = record;\n  }\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const myHeadCells = [\n    { id: 'statename', numeric: false, disablePadding: false, label: 'Name' },\n    { id: 'positiveNumber', numeric: true, disablePadding: false, label: 'Pos' },\n    { id: 'positiveRate', numeric: true, disablePadding: false, label: 'Pos%' },\n    { id: 'negativeNumber', numeric: true, disablePadding: false, label: 'Neg' },\n    { id: 'negativeRate', numeric: true, disablePadding: false, label: 'Neg%' },\n    { id: 'pending', numeric: true, disablePadding: false, label: 'Pending' },\n    { id: 'testCoverage', numeric: true, disablePadding: false, label: 'Test Coverage' },\n    { id: 'total', numeric: true, disablePadding: false, label: 'Total' },\n  ];\n\n  let list = Object.values(states_data);\n  let extendlist = prepareStatesTestingDataForDisplay(list);\n\n  let table =\n    <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n      <EnhancedTableHead\n        classes={classes}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        headCells={myHeadCells}\n      />\n      <TableBody>\n        {\n          stableSort(extendlist, getComparator(order, orderBy))\n            .map(row => {\n              return <TableRow key={row.state}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <MaterialLink component={RouterLink} to={reverse(routes.state, { state: row.state })}>\n                    {row.statename}\n                  </MaterialLink>\n                </TableCell>\n                <TableCell align=\"right\">{row.positiveNumber}</TableCell>\n                <TableCell align=\"right\">{row.positiveRate.toFixed(1)}%</TableCell>\n                <TableCell align=\"right\">{row.negativeNumber}</TableCell>\n                <TableCell align=\"right\">{row.negativeRate.toFixed(1)}%</TableCell>\n                <TableCell align=\"right\">{!isFinite(row.pending) ? \"-\" : row.pending}</TableCell>\n                <TableCell align=\"right\">{(row.testCoverage * 100).toFixed(1)} %</TableCell>\n                <TableCell align=\"right\">{row.total}</TableCell>\n              </TableRow>;\n            })\n        }\n      </TableBody>\n    </Table>\n  return table;\n};\n\nexport {\n  ListAllStates,\n  ListAllStatesPerCapita,\n  ListAllStatesTesting,\n}\n","import React from \"react\";\nimport {Helmet} from \"react-helmet\";\n\nconst Title = (props) => {\n  const title =\n      props.title\n          ? props.title + \" | COVID-19 Daily Numbers Visualized\"\n          : \"Covid-19.direct | COVID-19 Daily Numbers Visualized\";\n  const desc =\n      props.desc\n          ? props.desc\n          : \"US county-level COVID-19 30-day data visualized: \"\n              + \"confirmed cases, new cases & death curves. \"\n              + \"State-level testing results & hospitalization numbers.\";\n\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta name=\"description\" content={desc} />\n      <meta property=\"og:description\" content={desc} />\n    </Helmet>\n  );\n};\n\nexport { Title };\n","import React, { useContext } from 'react';\nimport { CountryContext } from \"./CountryContext\";\nimport { withHeader } from \"./ContentWrapping.js\"\nimport { MyTabs } from \"./MyTabs.js\"\nimport * as Util from \"./Util.js\"\nimport { USInfoTopWidget } from './USInfoTopWidget.js'\nimport { GraphSection } from './graphs/Graphs';\nimport {\n    ListAllStates,\n    ListAllStatesPerCapita,\n    ListAllStatesTesting,\n} from \"./ListAllStates.js\"\nimport { logger } from \"./AppModule\"\nimport { Title } from './Title';\n\nconst PageUS = withHeader((props) => {\n    const country = useContext(CountryContext);\n\n    const default_county_info = Util.getDefaultCounty();\n    const state = country.stateForTwoLetterName(default_county_info.state);\n    const county = state.countyForName(default_county_info.county)\n    logger.logEvent(\"PageUS\");\n\n    const tabs = [\n        <ListAllStates country={country} />,\n        <ListAllStatesTesting country={country} />,\n        <ListAllStatesPerCapita country={country} />,\n    ];\n\n    return (\n        <>\n            <Title\n                title={country.name}\n                desc={`${country.name} county-level COVID-19 30-day data visualized: `\n                          + `confirmed cases, new cases & death curves, `\n                          + `testing results & hospitalization numbers.`}\n            />\n            <USInfoTopWidget source={county || state} />\n            <GraphSection source={country} />\n            <MyTabs\n                labels={[\"States of USA\", \"Testing\", \"Capita\"]}\n                urlQueryKey=\"table\"\n                urlQueryValues={['cases', 'testing', 'capita']}\n                tabs={tabs}\n            />\n        </>\n    );\n});\n\nexport { PageUS }\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { myShortNumber, myGoodWholeNumber, myGoodShortNumber } from \"./Util.js\";\nimport { Link as MaterialLink } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { EnhancedTableHead, stableSort, getComparator } from \"./TableSortHelper\";\nimport { reverse } from 'named-urls';\nimport routes from \"./Routes\"\n\nconst useStyles = makeStyles(theme => ({\n  row: {\n    padding: theme.spacing(1, 1),\n    justifyContent: \"space-between\",\n    display: \"flex\",\n  },\n  tag: {\n    display: \"inline-block\",\n    textAlign: \"center\",\n    backgroundColor: \"#f3f3f3\",\n    padding: theme.spacing(1, 1),\n    flex: 1,\n    margin: 3,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  topTag: {\n    fontSize: \"0.5rem\",\n  },\n  table: {\n    width: \"100%\",\n    \"& a\": {\n      display: \"inline-block\",\n      height: \"100%\",\n      width: \"100%\",\n    },\n  },\n}));\n\nconst NearbyCounties = (props) => {\n  const county = props.county;\n  const allNearby = county.nearby();\n  if (allNearby) {\n    const nearby = allNearby.slice(0, 10);\n    return <CountyListRender countylist={nearby} />\n  } else {\n    return <></>;\n  }\n}\n\nconst ListCountiesForMetro = (props) => {\n  return <CountyListRender countylist={props.metro.allCounties()} />\n}\n\nfunction positiveCountiesIn(state) {\n  return state.allCounties().filter(c => c.totalConfirmed() > 0);\n}\n\nconst CountiesForStateWidget = (props) => {\n  return <CountyListRender countylist={positiveCountiesIn(props.state)} />;\n}\n\nconst ListStateCountiesCapita = (props) => {\n  return <CountyListRenderCapita countylist={positiveCountiesIn(props.state)} />;\n}\n\nfunction prepCountyDataForDisplay(list) {\n  let extendlist =\n    list\n      .map(county => [county, county.summary()])\n      .filter(([c, s]) => s)\n      .map(([county, sum]) => {\n        let newrow = {};\n        let newcases = sum.newcases;\n        let confirmed = sum.confirmed;\n        let newpercent = sum.newpercent;\n        let population = county.population();\n\n        newrow.partsPerMil = confirmed * 1000000 / population;\n\n        newrow.newEntry = (Number.isNaN(newpercent) || !isFinite(newpercent)) ? newcases : `${(newpercent * 100).toFixed(1)}%`;\n        if (newcases === 0) {\n          newrow.newEntry = 0;\n        }\n\n        if (county.name === \"Statewide Unallocated\") {\n          population = 0;\n          newrow.newEntry = newcases;\n        }\n        // note. doing this row overwrite can be dangerous... references.\n        newrow.newcases = newcases;\n        newrow.State = county.state().twoLetterName;\n        newrow.confirmed = confirmed;\n        newrow.newpercent = newpercent;\n        newrow.population = population;\n        newrow.County = county.name;\n        newrow.deathsPerMil = sum.deaths * 1000000 / population;\n        newrow.death = sum.deaths;\n        newrow.daysToDouble = sum.daysToDouble;\n        newrow.daysToDoubleDeath = sum.daysToDoubleDeath;\n        return newrow;\n      });\n  return extendlist;\n}\n\nconst CountyListRender = (props) => {\n  const list = props.countylist.sort((a, b) => b.total - a.total);\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('newcases');\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const myHeadCells = [\n    { id: 'County', numeric: false, disablePadding: false, label: 'Name' },\n    { id: 'confirmed', numeric: true, disablePadding: true, label: 'Total' },\n    { id: 'newcases', numeric: true, disablePadding: false, label: 'New' },\n    { id: 'partsPerMil', numeric: true, disablePadding: false, label: '#/Mil' },\n    { id: 'death', numeric: true, disablePadding: false, label: 'Deaths' },\n    { id: 'daysToDouble', numeric: true, disablePadding: false, label: 'Days 2x' },\n  ];\n\n  let extendlist = prepCountyDataForDisplay(list);\n\n  let countySummary =\n    <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n      <EnhancedTableHead\n        classes={classes}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        headCells={myHeadCells}\n      />\n      <TableBody>\n        {\n          stableSort(extendlist, getComparator(order, orderBy))\n            .map(row => {\n              let newcolumn = row.newcases ? `+${row.newcases}(${row.newEntry})` : 0;\n              if (row.newcases === 0) {\n                newcolumn = \"-\";\n              } else {\n                newcolumn = <section>\n                  <div className={classes.topTag}>\n                    +{row.newEntry}\n                  </div>\n                  <div className={classes.mainTag}>\n                    {myShortNumber(row.newcases)} </div>\n                </section>;\n              }\n\n              return <TableRow key={row.County}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <MaterialLink component={RouterLink} to={reverse(routes.county, { state: row.State, county: row.County })}>\n                    {row.County}\n                  </MaterialLink>\n                </TableCell>\n                <TableCell align=\"right\">{row.confirmed}</TableCell>\n                <TableCell align=\"right\"> {newcolumn} </TableCell>\n                <TableCell align=\"right\">{myGoodWholeNumber(row.partsPerMil)}</TableCell>\n                <TableCell align=\"right\">{myGoodShortNumber(row.death)}</TableCell>\n                <TableCell align=\"right\">{(!row.daysToDouble) ? \"-\" : ((row.daysToDouble > 10000) ? \"-\" : row.daysToDouble.toFixed(1))}</TableCell>\n              </TableRow>;\n            })\n        }\n      </TableBody>\n    </Table >\n\n  return countySummary;\n}\nconst CountyListRenderCapita = (props) => {\n  const list = props.countylist.sort((a, b) => b.total - a.total);\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('confirmed');\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const myHeadCells = [\n    { id: 'County', numeric: false, disablePadding: false, label: 'Name' },\n    { id: 'confirmed', numeric: true, disablePadding: false, label: 'Total' },\n    { id: 'partsPerMil', numeric: true, disablePadding: false, label: '#/Mil' },\n    { id: 'deathsPerMil', numeric: true, disablePadding: false, label: 'D/Mil' },\n    { id: 'death', numeric: true, disablePadding: false, label: 'Deaths' },\n    { id: 'population', numeric: true, disablePadding: false, label: 'Pop.' },\n  ];\n\n  let extendlist = prepCountyDataForDisplay(list);\n\n  let countySummary =\n    <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n      <EnhancedTableHead\n        classes={classes}\n        order={order}\n        orderBy={orderBy}\n        onRequestSort={handleRequestSort}\n        headCells={myHeadCells}\n      />\n      <TableBody>\n        {\n          stableSort(extendlist, getComparator(order, orderBy))\n            .map(row => {\n              return <TableRow key={row.County}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <MaterialLink component={RouterLink} to={reverse(routes.county, { county: row.County, state: row.State })}>\n                    {row.County}\n                  </MaterialLink>\n                </TableCell>\n                <TableCell align=\"right\">{row.confirmed}</TableCell>\n                <TableCell align=\"right\">{myGoodWholeNumber(row.partsPerMil)}</TableCell>\n                <TableCell align=\"right\">{myGoodWholeNumber(row.deathsPerMil)}</TableCell>\n                <TableCell align=\"right\">{myGoodShortNumber(row.death)}</TableCell>\n                <TableCell align=\"right\">{(row.population === 0) ? '-' : myGoodShortNumber(row.population)}</TableCell>\n              </TableRow>;\n            })\n        }\n      </TableBody>\n    </Table >\n\n  return countySummary;\n}\n\nexport {\n  NearbyCounties,\n  CountiesForStateWidget,\n  ListStateCountiesCapita,\n  ListCountiesForMetro,\n}\n","import React, { useContext } from 'react';\nimport { CountryContext } from \"./CountryContext\";\nimport * as Util from \"./Util\"\nimport { withHeader } from \"./ContentWrapping.js\"\nimport { MyTabs } from \"./MyTabs.js\"\nimport { USInfoTopWidget } from './USInfoTopWidget.js'\nimport { CountiesForStateWidget, ListStateCountiesCapita } from \"./CountyListRender.js\"\nimport { GraphSection } from './graphs/Graphs';\nimport { Title } from './Title';\n\nconst PageState = withHeader((props) => {\n    const country = useContext(CountryContext);\n    const state = country.stateForTwoLetterName(props.match.params.state);\n    const county = Util.getDefaultCountyForState(state);\n\n    Util.CookieSetLastCounty(state.twoLetterName, county ? county.name : null);\n\n    const tabs = [\n        <CountiesForStateWidget state={state} />,\n        <ListStateCountiesCapita state={state} />,\n    ];\n\n    return (\n        <>\n            <Title\n                title={`${state.name}`}\n                desc={`${state.name} COVID-19 30-day data visualized: `\n                          + `confirmed cases, new cases & death curves, `\n                          + `testing results & hospitalization numbers.`}\n            />\n            <USInfoTopWidget source={county || state} />\n            <GraphSection source={state} />\n            <MyTabs\n                labels={[`Counties of ${state.name} `, \"Per Capita\"]}\n                urlQueryKey=\"table\"\n                urlQueryValues={['cases', 'capita']}\n                tabs={tabs}\n            />\n        </>);\n});\n\nexport { PageState }\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        width: \"100%\"\n    },\n}));\n\nconst DetailCaseListWidget = (props) => {\n    const classes = useStyles();\n    const hospitals = props.hospitals.sort((a, b) => {\n        return ('' + a.HOSPITAL_NAME).localeCompare(b.HOSPITAL_NAME);\n    });\n\n    let list =\n        <>\n            <Typography variant=\"body1\">\n                Please follow\n                {' '}\n                <Link href=\"https://www.cdc.gov/coronavirus/2019-ncov/if-you-are-sick/steps-when-sick.html\">\n                    CDC guidance.\n                </Link>\n                {' '}\n                Make contact\n                with your doctor to make arrangments if\n                you suspect you are sick. Do not show up at a hospital unannounced\n                as that would overwhelm the hospital system.\n        </Typography>\n            <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell > Name</TableCell>\n                        <TableCell align=\"center\">City</TableCell>\n                        <TableCell align=\"left\">Licensed Beds</TableCell>\n                        <TableCell align=\"left\">Staffed Beds</TableCell>\n                        <TableCell align=\"left\">ICU Beds</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {hospitals.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.HOSPITAL_NAME}\n                            </TableCell>\n                            <TableCell align=\"center\">{row.HQ_CITY}</TableCell>\n                            <TableCell align=\"left\">{row.NUM_LICENSED_BEDS ? row.NUM_LICENSED_BEDS : \"-\"}</TableCell>\n                            <TableCell align=\"left\">{row.NUM_STAFFED_BEDS ? row.NUM_STAFFED_BEDS : \"-\"}</TableCell>\n                            <TableCell align=\"left\">{row.NUM_ICU_BEDS ? row.NUM_ICU_BEDS : \"-\"}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table >\n            <Typography variant=\"body2\" noWrap>\n                <Link href=\"https://www.arcgis.com/apps/opsdashboard/index.html#/8c4dcccd9e3845eb89f6401f919007f2\">\n                    Source: Definitive Health\n                </Link>\n            </Typography>\n        </>\n    return list;\n}\n\nfunction snapshotToArray(snapshot) {\n    var returnArr = []\n    snapshot.forEach(function (childSnapshot) {\n        returnArr.push(childSnapshot.data());\n    });\n    return returnArr;\n};\n\nasync function fetchCountyHospitals(county) {\n    const firebase = require(\"firebase\");\n    const db = firebase.firestore();\n    return await db.collection(\"DEFINITIVE_HOSPITALS\")\n        .where(\"COUNTY_NAME\", \"==\", county.name)\n        .where(\"STATE_NAME\", \"==\", county.state().name)\n        .get().then(querySnapshot => snapshotToArray(querySnapshot));\n}\n\nconst CountyHospitalsWidget = (props) => {\n    const [county_hospitals, setHospitals] = React.useState(null);\n    React.useEffect(() => {\n        fetchCountyHospitals(props.county).then((result, b) => {\n            setHospitals(result);\n        });\n    }, [props.state, props.county]);\n\n    if (!county_hospitals) {\n        return <div> Loading</div>;\n    }\n    return <DetailCaseListWidget hospitals={county_hospitals} />;\n}\n\nexport {\n    CountyHospitalsWidget,\n}\n","import React, { useContext } from 'react';\nimport { NearbyCounties } from \"./CountyListRender.js\"\nimport { withHeader } from \"./ContentWrapping.js\"\nimport { MyTabs } from \"./MyTabs.js\"\nimport { CountryContext } from \"./CountryContext\";\nimport { USInfoTopWidget } from './USInfoTopWidget.js'\nimport { CountyHospitalsWidget } from \"./Hospitals\"\nimport * as Util from \"./Util\"\nimport { GraphSection } from './graphs/Graphs';\nimport { SectionHeader } from \"./CovidUI\"\nimport { Title } from \"./Title\";\nimport { Link } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst CA_statusMap = {\n  \"4\": {\n    text: \"Widespread\",\n    color: \"purple\",\n  },\n  \"3\": {\n    text: \"Substantial\",\n    color: \"red\",\n  },\n  \"2\": {\n    text: \"Moderate\",\n    color: \"orange\",\n  },\n  \"1\": {\n    text: \"Minimal\",\n    color: \"orange\",\n  },\n}\n\nconst useStyles = makeStyles(theme => ({\n  CA: {\n    margin: 2,\n  },\n}));\n\nconst CountySpecific = (props) => {\n  const classes = useStyles();\n  if (props.source.state().fips() === \"06\") {\n    let level = CA_statusMap[props.source.ca_county_status];\n    if (level) {\n      const textStyle = {\n        color: level.color,\n        fontSize: 'x-large',\n      }\n      return <div className={classes.CA}>\n        <Link target=\"_blank\" href={\"https://covid19.ca.gov/safer-economy/\"} className={props.className}>\n          California County Status\n    </Link>\n        :\n        <span style={textStyle}>\n          {level.text}\n        </span>\n      </div>;\n    }\n  }\n  return null;\n};\n\nconst PageCounty = withHeader((props) => {\n  const country = useContext(CountryContext);\n  const state = country.stateForTwoLetterName(props.match.params.state);\n  const county = state.countyForName(props.match.params.county);\n\n  Util.CookieSetLastCounty(state.twoLetterName, county.name);\n\n  const tabs = [\n    <NearbyCounties county={county} />,\n    <CountyHospitalsWidget county={county} />,\n  ];\n  return (\n    <>\n      <Title\n        title={`${county.name}, ${state.twoLetterName}`}\n        desc={`${county.name} County COVID-19 30-day data visualized: `\n          + `confirmed cases, new cases & death curves.`}\n      />\n      <USInfoTopWidget source={county} />\n      <CountySpecific source={county} />\n      <GraphSection source={county} />\n      <BonusDashboards county={county} />\n      <MyTabs\n        labels={[\"Nearby\", \"Hospitals\"]}\n        urlQueryKey=\"table\"\n        urlQueryValues={['nearby', 'hospitals']}\n        tabs={tabs}\n      />\n    </>\n  );\n});\n\nconst BonusDashboards = (props) => {\n  const fips = props.county.fips();\n\n  if (fips === \"06085\") {\n    return (\n      <SectionHeader>\n        <a target=\"_blank\" href=\"https://www.sccgov.org/sites/phd/DiseaseInformation/novel-coronavirus/Pages/dashboard.aspx\" rel=\"noopener noreferrer\" >\n          Santa Clara County Coronavirus Data Dashboard\n               </a>\n      </SectionHeader>\n    );\n  } else if (fips === \"06081\") {\n    return (\n      <SectionHeader>\n        <a target=\"_blank\" href=\"https://www.smchealth.org/post/san-mateo-county-covid-19-data-1\" rel=\"noopener noreferrer\" >\n          San Mateo County COVID-19 Data\n                </a>\n      </SectionHeader>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport { PageCounty }\n","import React, { useContext } from 'react';\nimport { CountryContext } from \"./CountryContext\";\nimport { ListCountiesForMetro } from \"./CountyListRender.js\"\nimport { withHeader } from \"./ContentWrapping.js\"\nimport { MyTabs } from \"./MyTabs.js\"\nimport { USInfoTopWidget } from './USInfoTopWidget.js'\nimport { getDefaultCounty } from \"./Util\"\nimport { GraphSection } from \"./graphs/Graphs\"\nimport { Title } from \"./Title\";\n\nconst PageMetro = withHeader((props) => {\n    const country = useContext(CountryContext);\n    const metroByStates = country.metroByStatesForId(props.match.params.metro);\n\n    // The metro may span multiple states, so we have to see if the user's\n    // preferred county is a county in the metro and then figure out which metro\n    // object corresponds to the right state. Everything is awesome.\n    const def = getDefaultCounty();\n    // All the metro objects have all the counties, even if those counties are\n    // across state lines.\n    const any = metroByStates.values().next().value;\n    let county;\n    for (const candidate of any.allCounties()) {\n        if (def.county === candidate.name\n                && def.state === candidate.state().twoLetterName) {\n            county = candidate;\n            break;\n        }\n    }\n\n    // Can't find the preferred county, just pick the best one.\n    if (!county) {\n        county =\n            any\n                .allCounties()\n                .sort((a, b) => b.totalConfirmed() - a.totalConfirmed())[0];\n    }\n\n    const metro = county.metro();\n    const state = metro.state();\n\n    const tabs = [\n        <ListCountiesForMetro metro={metro} />,\n    ];\n\n    return (\n        <>\n            <Title\n                title={`${metro.name}, ${state.twoLetterName}`}\n                desc={`${metro.name} COVID-19 30-day data visualized: `\n                          + `confirmed cases, new cases & death curves, `\n                          + `testing results & hospitalization numbers.`}\n            />\n            <USInfoTopWidget source={county} />\n            <GraphSection source={metro} />\n            <MyTabs\n                labels={[metro.name]}\n                urlQueryKey=\"table\"\n                urlQueryValues={['cases']}\n                tabs={tabs}\n            />\n        </>\n    );\n});\nexport { PageMetro }\n","export class ChildrenComponent {\n\n  constructor(children) {\n    this.children_ = children;\n  }\n\n  children() {\n    return this.children_;\n  }\n}\n","export class DivisionTypesComponent {\n\n  constructor(divisions) {\n    this.divisions_ = divisions;\n  }\n\n  types() {\n    return this.divisions_;\n  }\n}\n","const geolib = require('geolib');\n\nexport class GeographyComponent {\n\n  constructor(latitude, longitude) {\n    this.position_ = {latitude, longitude};\n  }\n\n  distance(other) {\n    return geolib.getDistance(this.position_, other.position_);\n  }\n\n  position() {\n    return this.position_;\n  }\n}\n","export class ProjectionsComponent {\n\n  constructor(confirmed) {\n    this.confirmed_ = confirmed;\n  }\n\n  confirmed() {\n    return this.confirmed_;\n  }\n}\n","export class SearchIndexComponent {\n\n  constructor(termsToNames, namesToPaths) {\n    this.termsToNames_ = termsToNames;\n    this.namesToPaths_ = namesToPaths;\n    this.lettersToTerms_ = new Map();\n\n    for (const term of this.termsToNames_.keys()) {\n      const first = term[0].toLowerCase();\n      if (!this.lettersToTerms_.has(first)) {\n        this.lettersToTerms_.set(first, new Set());\n      }\n      this.lettersToTerms_.get(first).add(term);\n    }\n  }\n\n  search(query) {\n    const terms =\n        query.split(',').map(t => t.trim().toLowerCase()).filter(t => !!t);\n    \n    let whitelist = undefined;\n    for (const term of terms) {\n      whitelist = this.matchTerm_(term, whitelist);\n    }\n    \n    if (!whitelist) {\n      return [];\n    }\n\n    const results = [];\n    for (const name of whitelist) {\n      results.push({\n        name,\n        path: this.namesToPaths_.get(name),\n      });\n    }\n    return results;\n  }\n\n  matchTerm_(term, opt_whitelist) {\n    const matchingTerms = this.lettersToTerms_.get(term[0]);\n    const matchingNames = new Set();\n    if (!matchingTerms) {\n      return matchingNames;\n    }\n\n    for (const possibleTerm of matchingTerms) {\n      if (!possibleTerm.toLowerCase().startsWith(term)) {\n        continue;\n      }\n\n      for (const name of this.termsToNames_.get(possibleTerm)) {\n        if (opt_whitelist && !opt_whitelist.has(name)) {\n          continue;\n        }\n\n        matchingNames.add(name);\n      }\n    }\n\n    return matchingNames;\n  }\n}\n","/** A world contains all the entities and their components. */\nexport class World {\n\n  constructor(source) {\n    this.componentsByPath = new Map();\n    this.frontier = new Set();\n    this.source = source;\n  }\n\n  get(path, componentType) {\n    this.ensure_(path);\n\n    const asStr = path.string();\n    if (!this.componentsByPath.has(asStr)) {\n      return undefined;\n    } else {\n      return this.componentsByPath.get(asStr).get(componentType);\n    }\n  }\n\n  getMultiple(path, componentTypes) {\n    this.ensure_(path);\n\n    const asStr = path.string();\n    if (!this.componentsByPath.has(asStr)) {\n      return [];\n    } else {\n      const components = this.componentsByPath.get(asStr);\n      return componentTypes.map(c => components.get(c));\n    }\n  }\n\n  has(path, componentType) {\n    this.ensure_(path);\n\n    const asStr = path.string();\n    if (!this.componentsByPath.has(asStr)) {\n      return false;\n    } else {\n      return !!this.componentsByPath.get(asStr).get(componentType);\n    }\n  }\n\n  set(path, component) {\n    const asStr = path.string();\n    if (!this.componentsByPath.has(asStr)) {\n      this.componentsByPath.set(asStr, new Map());\n      this.frontier.add(asStr);\n    }\n    this.componentsByPath.get(asStr).set(component.constructor, component);\n  }\n\n  ensure_(target, componentType) {\n    const asStr = target.string();\n    const haveTarget = this.componentsByPath.has(asStr);\n    if (!this.frontier.has(asStr) && haveTarget) {\n      // We have fully loaded it\n      return;\n    } else if (haveTarget) {\n      // We have something for the target\n      const components = this.componentsByPath.get(asStr);\n      if (components.has(componentType)) {\n        // We at least have the component, so don't load more\n        return;\n      }\n    }\n\n    let fetched;\n    if (haveTarget) {\n      fetched =\n          this.source.fetch(\n              target,\n              new Set(this.componentsByPath.get(asStr).keys()));\n    } else {\n      fetched = this.source.fetch(target, new Set());\n    }\n\n    for (const [path, components] of fetched) {\n      this.frontier.add(path.string());\n      components.forEach(c => {\n        this.set(path, c);\n      });\n    }\n\n    this.frontier.delete(asStr);\n  }\n}\n","import { BasicDataComponent } from './BasicDataComponent';\nimport { ChildrenComponent } from './ChildrenComponent';\nimport { DataSeries } from './DataSeries';\nimport { DivisionTypesComponent } from './DivisionTypesComponent';\nimport { GeographyComponent } from './GeographyComponent';\nimport { NameComponent } from './NameComponent';\nimport { Path } from './Path';\nimport { PopulationComponent } from './PopulationComponent';\nimport { ProjectionsComponent } from './ProjectionsComponent';\nimport { SearchIndexComponent } from './SearchIndexComponent';\nimport { World } from './World';\nimport { fetchWorldData } from \"../PublicAllData\"\n\n// const earthBaseData = require('../data/WorldData.json');\nconst dataKeys = ['data'];\nvar cachedData = null;\n\nexport const SEARCH_INDEX_PATH = Path.parse('/_search_index');\n\n// export function createBasicEarth() {\n//   return new World(new BasicEarthSource(earthBaseData));\n// }\n\nexport async function createBasicEarthAsync() {\n  if (!cachedData) {\n    cachedData = await fetchWorldData();\n  }\n  console.log(cachedData);\n  return new World(new BasicEarthSource(cachedData));\n}\n\nclass BasicEarthSource {\n\n  constructor(baseData) {\n    this.baseData = baseData;\n  }\n\n  fetch(path, have) {\n    if (SEARCH_INDEX_PATH.equals(path)) {\n      return [[path, [this.buildSearchIndex_()]]];\n    } else if (path.matches('/:country/:division')\n      || path.matches('/:country/:division/:province/:division')) {\n      // We don't know anything about ourselves, so just return\n      return [];\n    }\n\n    const ourComponents = [];\n\n    const data = resolve(path, this.baseData);\n    if (!have.has(BasicDataComponent)) {\n      ourComponents.push(...this.basicComponentsFor_(data['data']));\n    }\n    if (!have.has(ProjectionsComponent)) {\n      ourComponents.push(\n        ...this.projectionsComponentsFor_(data['data']['projections']));\n    }\n\n    if (have.has(DivisionTypesComponent)) {\n      return [[path, ourComponents]];\n    }\n\n    const children =\n      Object.entries(data).filter(([child,]) => !dataKeys.includes(child));\n    const division = divisionUnder(path);\n    if (!division) {\n      if (children.length > 0) {\n        throw new Error(`Unknown division for ${path.string()}`);\n      } else {\n        return [[path, ourComponents]];\n      }\n    } else if (children.length === 0) {\n      return [[path, ourComponents]];\n    }\n\n    ourComponents.push(new DivisionTypesComponent([division]));\n    const divisionRoot = division.id ? path.child(division.id) : path;\n    const childrenPaths = [];\n    const childrenComponents = [];\n    for (const [child, data] of children) {\n      const childPath = divisionRoot.child(child);\n      childrenPaths.push(childPath);\n      childrenComponents.push([childPath, this.basicComponentsFor_(data['data'])]);\n    }\n\n    return [\n      [path, ourComponents],\n      [divisionRoot, [new ChildrenComponent(childrenPaths)]],\n      ...childrenComponents,\n    ];\n  }\n\n  basicComponentsFor_(data) {\n    const components = [\n      new NameComponent(data['name']),\n      new BasicDataComponent(\n        DataSeries.fromTimestamps(\"Confirmed\", data['Confirmed']),\n        DataSeries.fromTimestamps(\"Active\", data['Active']),\n        DataSeries.fromTimestamps(\"Recovered\", data['Recovered']),\n        DataSeries.fromTimestamps(\"Deaths\", data['Deaths'])),\n    ];\n    if (data['latitude'] && data['longitude']) {\n      components.push(new GeographyComponent(data['latitude'], data['longitude']));\n    }\n    if (data['population']) {\n      components.push(new PopulationComponent(data['population']));\n    }\n    return components;\n  }\n\n  projectionsComponentsFor_(projections) {\n    if (!projections) {\n      return [];\n    }\n\n    return [\n      new ProjectionsComponent(\n        DataSeries.fromTimestamps(\n          \"Confirmed (Projected)\", projections['Confirmed'])),\n    ];\n  }\n\n  buildSearchIndex_() {\n    const termsToNames = new Map();\n    const namesToPath = new Map();\n\n    const frontier = [[Path.root(), [], this.baseData]];\n    while (frontier.length > 0) {\n      const [path, ancestorTerms, data] = frontier.pop();\n\n      const name = data.data.name;\n      if (!termsToNames.has(name)) {\n        termsToNames.set(name, []);\n      }\n\n      const terms = [name].concat(ancestorTerms);\n      const fullName = terms.join(', ');\n      namesToPath.set(fullName, path);\n\n      for (const term of terms) {\n        termsToNames.get(term).push(fullName);\n      }\n\n      const division = divisionUnder(path);\n      const divisionPath =\n        division && division.id ? path.child(division.id) : path;\n      let passTerms;\n      if (path.matches('/')) {\n        passTerms = [];\n      } else {\n        passTerms = terms;\n      }\n\n      for (const key in data) {\n        if (dataKeys.includes(key)) {\n          continue;\n        }\n\n        frontier.push([divisionPath.child(key), passTerms, data[key]]);\n      }\n    }\n\n    return new SearchIndexComponent(termsToNames, namesToPath);\n  }\n}\n\nfunction resolve(path, baseData) {\n  if (path.matches('/')) {\n    return baseData;\n  } else if (path.matches('/:country')) {\n    return baseData[path.components[0]];\n  } else if (path.matches('/:country/:division/:province')) {\n    return baseData[path.components[0]][path.components[2]];\n  } else if (path.matches('/:country/:division/:province/:division/:county')) {\n    return baseData[path.components[0]][path.components[2]][path.components[4]];\n  } else {\n    return undefined;\n  }\n}\n\nfunction divisionUnder(path) {\n  if (path.matches('/')) {\n    return {\n      id: '',\n      singular: 'Country',\n      plural: 'Countries',\n    };\n  } else if (path.matches('/US')) {\n    return {\n      id: 'state',\n      singular: 'State',\n      plural: 'States',\n    };\n  } else if (path.matches('/:country')) {\n    return {\n      id: 'province',\n      singular: 'Province',\n      plural: 'Provinces',\n    };\n  } else if (path.matches('/US/state/:state')) {\n    return {\n      id: 'county',\n      singular: 'County',\n      plural: 'Counties',\n    };\n  } else if (path.matches('/US/state/:state/county/:county')) {\n    return {\n      id: 'source',\n      singular: 'Source',\n      plural: 'Sources',\n    };\n  } else if (path.matches('/:country/:division/:province')) {\n    return {\n      id: 'city',\n      singular: 'City',\n      plural: 'Cities',\n    };\n  } else {\n    return undefined;\n  }\n}\n","import PropTypes from 'prop-types';\nimport React, {useContext} from 'react';\nimport {AutoSizer, List} from 'react-virtualized';\nimport {ClickAwayListener, InputBase, Link as MaterialLink, Paper } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LocationSearchingIcon from '@material-ui/icons/LocationSearching';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport {fade, makeStyles} from '@material-ui/core/styles';\n\nimport {SEARCH_INDEX_PATH} from '../../models/Earth';\nimport {Path} from '../../models/Path';\nimport {SearchIndexComponent} from '../../models/SearchIndexComponent';\nimport {WorldContext} from '../../WorldContext';\n\nconst RESULT_HEIGHT = 28;\nconst RESULTS_MAX_HEIGHT = 150;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    alignItems: 'center',\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    borderRadius: theme.shape.borderRadius,\n    display: 'flex',\n    height: '2em',\n    position: 'relative',\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    [theme.breakpoints.down('xs')]: {\n      marginLeft: 0,\n      marginBottom: theme.spacing(1),\n    },\n  },\n  searchIcon: {\n    height: '100%',\n    padding: theme.spacing(0, 1),\n    pointerEvents: 'none',\n    position: 'absolute',\n  },\n  input: {\n    color: 'inherit',\n    flexGrow: 1,\n    paddingLeft: `calc(1em + ${theme.spacing(2.5)}px)`,\n    position: 'relative',\n    [theme.breakpoints.down('xs')]: {\n      maxWidth: '20ch',\n    },\n  },\n  divider: {\n    backgroundColor: `rgba(255, 255, 255, 0.7)`,\n    height: '70%',\n    marginLeft: theme.spacing(1),\n    position: 'relative',\n    width: '1px',\n  },\n  iconButton: {\n    color: theme.palette.common.white,\n    height: '100%',\n    padding: theme.spacing(0, 1),\n    position: 'relative',\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  resultsContainer: {\n    alignSelf: 'flex-start',\n    borderRadius: '4px',\n    color: theme.palette.text.primary,\n    marginTop: '4px',\n    maxHeight: '150px',\n    maxWidth: '100vh',\n    padding: '4px',\n    position: 'absolute',\n    top: '100%',\n    userSelect: 'none',\n    width: '350px',\n    zIndex: 9999,\n    '&.hide': {\n      display: 'none',\n    },\n  },\n  resultsList: {\n    '&:focus': {\n      outline: 'none',\n    },\n  },\n  result: {\n    background: '#fff',\n    lineHeight: RESULT_HEIGHT + 'px',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n  },\n}));\n\nexport const SearchInput = (props) => {\n  const classes = useStyles();\n  const world = useContext(WorldContext);\n\n  const [results, setResults] = React.useState([]);\n\n  // Force the search index to lazy load\n  React.useEffect(() => {\n    world.get(Path.root(), SearchIndexComponent);\n  });\n\n  const onClose = () => {\n    setResults([]);\n  };\n\n  const onChange = (e) => {\n    const search = world.get(SEARCH_INDEX_PATH, SearchIndexComponent);\n    if (!search) {\n      return;\n    }\n\n    setResults(search.search(e.target.value));\n  };\n\n  const onChoice = (e, path) => {\n    e.preventDefault();\n    setResults([]);\n    props.onChoice(path);\n  };\n\n  const resultRenderer = ({index, key, style}) => {\n    const {name, path} = results[index];\n\n    return (\n      <div key={key} style={style} className={classes.result}>\n        <MaterialLink href=\"#\" onClick={(e) => onChoice(e, path)}>\n          {name}\n        </MaterialLink>\n      </div>\n    );\n  };\n\n  return (\n    <ClickAwayListener onClickAway={onClose}>\n      <div className={`${classes.root} ${props.className || ''}`}>\n        <SearchIcon className={classes.searchIcon} />\n        <InputBase\n            className={classes.input}\n            onChange={onChange}\n            placerholder=\"Search...\" />\n        {props.onGeolocate &&\n            <Divider className={classes.divider} />\n        }\n        {props.onGeolocate &&\n            <IconButton\n                size=\"small\"\n                className={classes.iconButton}\n                onClick={props.onGeolocate}>\n              <LocationSearchingIcon />\n            </IconButton>\n        }\n        <Paper\n            className={\n              `${classes.resultsContainer} `\n                  + (results.length === 0 ? 'hide' : '')\n            }\n            elevation={3}>\n          <AutoSizer disableHeight>\n            {({width}) => (\n              <List\n                  className={classes.resultsList}\n                  rowCount={results.length}\n                  rowHeight={RESULT_HEIGHT}\n                  rowRenderer={resultRenderer}\n                  width={width}\n                  height={Math.min(RESULTS_MAX_HEIGHT, RESULT_HEIGHT * results.length)}\n              />\n            )}\n          </AutoSizer>\n        </Paper>\n      </div>\n    </ClickAwayListener>\n  );\n};\nSearchInput.propTypes = {\n  className: PropTypes.string,\n  onChoice: PropTypes.func.isRequired,\n  onGeolocate: PropTypes.func,\n};\n","import React, { useContext } from 'react';\nimport {fade, makeStyles, useTheme} from '@material-ui/core/styles';\nimport {useHistory} from 'react-router-dom'\nimport {AppBar as MaterialAppBar, Toolbar, Typography} from '@material-ui/core';\n\nimport {DonateLink} from './DonateLink';\nimport {SEARCH_INDEX_PATH} from '../../models/Earth';\nimport {SearchIndexComponent} from '../../models/SearchIndexComponent';\nimport {SearchInput} from './SearchInput';\nimport {SocialMediaButtons} from './SocialMediaButtons';\nimport {WorldContext} from '../../WorldContext';\nimport {fetchPrecisePoliticalLocation} from '../../GeoLocation'\n\nconst RELIEF_COLOR = '#fff';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    color: RELIEF_COLOR,\n    display: 'flex',\n  },\n  nameAndSearch: {\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.down('xs')]: {\n      display: 'initial',\n    },\n  },\n  appName: {\n    overflow: 'visible',\n  },\n  search: {\n    marginLeft: theme.spacing(4),\n  },\n  donations: {\n    background: RELIEF_COLOR,\n    borderRadius: '8px',\n    display: 'block',\n    marginLeft: '16px',\n    padding: '6px 8px',\n    textAlign: 'center',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      filter: `drop-shadow(0 0 2px ${fade(RELIEF_COLOR, 0.95)})`,\n      textDecoration: 'none',\n      transform: 'translateY(-1px)',\n    },\n  },\n  expander: {\n    flexGrow: 1,\n  },\n  socialButtons: {\n    fontSize: '1.5625em',\n    lineHeight: '1em',\n    whiteSpace: 'nowrap',\n    '& > *': {\n      marginLeft: '4px',\n      verticalAlign: 'middle',\n    }\n  },\n  socialButton: {\n    '&:hover': {\n      filter: `drop-shadow(0 0 2px ${fade(RELIEF_COLOR, 0.95)})`,\n      transform: 'translateY(-1px)',\n    },\n  },\n  actions: {\n    alignItems: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n    flexShrink: 2,\n    justifyContent: 'flex-end',\n    textAlign: 'end',\n  },\n}));\n\nexport const AppBar = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <MaterialAppBar position=\"relative\">\n      <Toolbar className={classes.appBar}>\n        <div className={classes.nameAndSearch}>\n          <Typography noWrap className={classes.appName} variant=\"h6\">\n            COVID-19.direct\n          </Typography>\n          <NavigatingSearchInput className={`${classes.search} ${classes.expander}`} />\n        </div>\n\n        <div className={classes.expander} />\n\n        <div className={classes.actions}>\n          <SocialMediaButtons\n            backgroundColor=\"#fff\"\n            buttonClassName={classes.socialButton}\n            className={classes.socialButtons}\n            iconColor={theme.palette.primary.main}\n          />\n\n          <DonateLink className={classes.donations} message=\"Buy us a coffee!\" />\n        </div>\n      </Toolbar>\n    </MaterialAppBar>\n  );\n};\n\nconst NavigatingSearchInput = (props) => {\n  const history = useHistory();\n  const world = useContext(WorldContext);\n\n  const navigate = (path) => {\n    history.push(\"/country\" + path.string());\n  };\n\n  const locationLookup = async () => {\n    const search = world.get(SEARCH_INDEX_PATH, SearchIndexComponent);\n    const location = await fetchPrecisePoliticalLocation();\n    if (!search) {\n      return;\n    }\n    let terms = [];\n    if (location.county && location.stateName) {\n      terms.push(location.county, location.stateName);\n    }\n    terms.push(location.country)\n    const allMatches = search.search(terms.join(\", \"));\n    if (allMatches && allMatches.length > 0) {\n      history.push(\"/country\" + allMatches[0].path.string())\n    }\n  }\n\n  return (\n    <SearchInput\n        onChoice={navigate}\n        onGeolocate={locationLookup}\n        {...props} />\n  );\n};\n","import Disqus from \"disqus-react\"\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {FacebookProvider, Comments as FacebookComments} from 'react-facebook';\nimport {Paper, Tab, Tabs} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst disqusConfig = {\n  url: \"https://covid-19.direct/country/\",\n  identifier: \"world-frontpage\",\n  title: \"world page\"\n};\n\n// Facebook comments are lazily loaded, so we have to render it ahead of time\n// even though it'd be better to not.\nconst useStyles = makeStyles(theme => ({\n  'scrollPane': {\n    overflow: 'scroll',\n    maxHeight: '80vh',\n  },\n  'hide': {\n    display: 'none',\n  },\n}));\n\nexport const Discussion = (props) => {\n  const classes = useStyles();\n\n  const sources = [{\n    'label': 'Disqus comments',\n    'content':\n        <Disqus.DiscussionEmbed\n            shortname={\"covid19direct-world\"}\n            config={disqusConfig}\n        />\n  }, {\n    'label': 'Facebook',\n    'content':\n      <FacebookProvider appId=\"201788627783795\">\n        <FacebookComments href=\"https://covid-19.direct/\" />\n      </FacebookProvider>,\n  }];\n\n  const [source, setSource] = React.useState(0);\n  const change = (e, to) => {\n    setSource(to);\n  };\n\n  return (\n    <Paper className={props.className}>\n      <Tabs value={source} onChange={change}>\n        {sources.map(({label}, i) =>\n          <Tab key={label} label={label} value={i} />\n        )}\n      </Tabs>\n\n      <div className={classes.scrollPane}>\n        {sources.map(({label, content}, i) =>\n          <div key={label} className={source !== i ? classes.hide : ''}>\n            {content}\n          </div>\n        )}\n      </div>\n    </Paper>\n  );\n};\n\nDiscussion.propTypes = {\n  className: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport {Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel, useMediaQuery} from '@material-ui/core';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport { myShortNumber } from \"../../Util.js\";\n\nconst useStyles = makeStyles(theme => ({\n  squishText: {\n    hyphens: 'auto',\n  },\n}));\n\n/** A table that is sortable by its columns. */\nexport const SortableTable = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const squish = useMediaQuery(theme.breakpoints.down('xs'));\n  const {columns, rows, defaultSortColumn} = props;\n\n  const [orderingBy, setOrderingBy] = React.useState(defaultSortColumn);\n  const [direction, setDirection] = React.useState(orderingBy.defaultDirection);\n\n  const sortFn = (a, b) =>\n      compareStable(\n          a, b, orderingBy.key, columns, direction === orderingBy.defaultDirection);\n  const sorted = [...rows].sort((a, b) =>\n      direction === 'asc' ? sortFn(a, b) : sortFn(b, a));\n\n  const createUpdateSort = (column) => () => {\n    setOrderingBy(column);\n    setDirection(\n        orderingBy === column\n            ? opposite(direction) : column.defaultDirection);\n  };\n\n  return (\n    <Table size=\"small\" className={squish ? classes.squishText : ''}>\n      <TableHead>\n        <TableRow>\n          {columns.map((column) =>\n            <TableCell key={column.key}>\n              <TableSortLabel\n                  active={orderingBy.key === column.key}\n                  direction={\n                    orderingBy === column ? direction : column.defaultDirection}\n                  hideSortIcon={squish}\n                  onClick={createUpdateSort(column)}\n              >\n                {squish ? column.shortLabel || column.label : column.label}\n              </TableSortLabel>\n            </TableCell>\n          )}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {sorted.map((row) =>\n          <TableRow key={row.id}>\n            {columns.map(({key, contextKey, renderShortNumber}) =>\n              <TableCell key={key}>\n                {render(row[key], renderShortNumber)}\n                {row[contextKey] && ` (${row[contextKey]})`}\n              </TableCell>\n            )}\n          </TableRow>\n        )}\n      </TableBody>\n    </Table>\n  );\n};\n\nconst columnPropType =\n    PropTypes.exact({\n        // The attribute in the object to lookup\n        key: PropTypes.string.isRequired,\n        // The label of the column\n        label: PropTypes.string.isRequired,\n        // The label to show when on a small screen\n        shortLabel: PropTypes.string,\n        // The default sort direction for the column\n        defaultDirection: PropTypes.oneOf(['desc', 'asc']).isRequired,\n        // An optional key of something to show inside parenthesis next to the\n        // main value, as context\n        contextKey: PropTypes.string,\n    });\n\nSortableTable.propTypes = {\n  columns: PropTypes.arrayOf(columnPropType).isRequired,\n  rows: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  })).isRequired,\n  defaultSortColumn: columnPropType.isRequired,\n};\n\nfunction opposite(direction) {\n  return direction === 'desc' ? 'asc' : 'desc';\n}\n\nfunction render(value, short) {\n  if (typeof value === 'number') {\n    if (short) {\n      return isNaN(value) ? '' : myShortNumber(value);\n    }\n    return isNaN(value) ? '' : value.toFixed(1).replace(/\\.?0*$/, '');\n  } else {\n    return value || '';\n  }\n}\n\nfunction valueFor(row, key) {\n  // First check if there even is a value\n  if (row[key] === undefined || row[key] === null) {\n    return undefined;\n  }\n\n  // Check if the value itself has a key object, this lets us compare React\n  // components.\n  if (row[key].key) {\n    return row[key].key;\n  } else {\n    return row[key];\n  }\n};\n\nfunction compareOn(a, b, key, emptyLast) {\n  const ak = valueFor(a, key);\n  const bk = valueFor(b, key);\n\n  if (isNaN(ak) && !isNaN(bk)) {\n    return emptyLast ? 1 : -1;\n  } else if (!isNaN(ak) && isNaN(bk)) {\n    return emptyLast ? -1 : 1;\n  } else if (ak < bk) {\n    return -1;\n  } else if (ak > bk) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\n\nfunction compareStable(a, b, key, columns, emptyLast) {\n  const preferred = compareOn(a, b, key, emptyLast);\n  if (preferred !== 0) {\n    return preferred;\n  }\n\n  // The preferred key exactly matched, so find a differentiating column\n  for (const column of columns) {\n    const attempt = compareOn(a, b, column.key);\n    if (attempt !== 0) {\n      return attempt;\n    }\n  }\n\n  return compareOn(a, b, 'id');\n};\n\n","import PropTypes from 'prop-types';\nimport React, {useContext} from 'react';\nimport {Link as MaterialLink} from '@material-ui/core';\nimport {Link as RouterLink} from 'react-router-dom';\n\nimport {BasicDataComponent} from '../../models/BasicDataComponent';\nimport {ChildrenComponent} from '../../models/ChildrenComponent';\nimport {NameComponent} from '../../models/NameComponent';\nimport {PopulationComponent} from '../../models/PopulationComponent';\nimport {Path} from '../../models/Path';\nimport {SortableTable} from './SortableTable';\nimport {WorldContext} from '../../WorldContext';\nimport { MyTabs } from \"../../MyTabs.js\"\n\n/** A table for showing basic data about children of a division entity. */\nexport const DivisionTableMain = (props) => {\n  const world = useContext(WorldContext);\n  const children =\n      world.get(props.parent, ChildrenComponent).children();\n\n  const columns = [\n    {key: 'name', label: 'Name', defaultDirection: 'asc'},\n    { key: 'confirmed', label: 'Confirmed', defaultDirection: 'desc' },\n    { key: 'confirmedNew', label: 'New', defaultDirection: 'desc' },\n    { key: 'active', label: 'Active', defaultDirection: 'desc' },\n    { key: 'recovered', label: 'Recovered', defaultDirection: 'desc' },\n    {key: 'died', label: 'Died',  defaultDirection: 'desc'},\n  ];\n  const defaultSortColumn = columns[1];\n\n  let picked;\n  if (props.pickLowest) {\n    const {count, quantifier} = props.pickLowest;\n    picked =\n        children.sort((a, b) => quantifier(a) - quantifier(b))\n            .slice(0, count);\n  } else {\n    picked = children;\n  }\n\n  const rows = [];\n  for (const child of picked) {\n    if (props.filter && !props.filter(child)) {\n      continue;\n    }\n\n    const [name, basic] =\n        world.getMultiple(child, [NameComponent, BasicDataComponent]);\n    if (!name || !basic) {\n      continue;\n    }\n\n    const confirmed = basic.confirmed().lastValue();\n    const active = basic.active().lastValue();\n    const recovered = basic.recovered().lastValue();\n    const newConfirmed = basic.confirmed().change().lastValue();\n    const confirmedChange =\n      !newConfirmed || newConfirmed === confirmed\n        ? ''\n        : Math.round(newConfirmed / confirmed * 1000) / 10 + '%';\n    rows.push({\n      id: child.string(),\n      name: \n          <MaterialLink key={name.english()} component={RouterLink} to={'/country' + child.string()}>\n            {name.english()}\n          </MaterialLink>,\n      confirmed: confirmed,\n      confirmedNew: newConfirmed,\n      confirmedChange, // unused for now\n      active: active,\n      recovered: recovered,\n      died: basic.died().lastValue(),\n    });\n  }\n\n  return (\n    <div className={props.className}>\n      {/* <Typography variant=\"h6\">{props.plural}</Typography> */}\n      <SortableTable\n          columns={columns}\n          rows={rows}\n          defaultSortColumn={defaultSortColumn}\n      />\n    </div>\n  );\n};\n\nDivisionTableMain.propTypes = {\n  parent: PropTypes.instanceOf(Path).isRequired,\n  plural: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  filter: PropTypes.func,\n  pickLowest: PropTypes.exact({\n    count: PropTypes.number.isRequired,\n    quantifier: PropTypes.func.isRequired,\n  }),\n};\n\nexport const DivisionTableCapita = (props) => {\n  const world = useContext(WorldContext);\n  const children =\n      world.get(props.parent, ChildrenComponent).children();\n\n  const columns = [\n    {key: 'name', label: 'Name', defaultDirection: 'asc'},\n    {key: 'confirmedPerMillion', label: 'Confirmed/mil', shortLabel: 'Conf. / mil', defaultDirection: 'desc'},\n    {key: 'deathsPerMillion', label: 'Deaths/mil', shortLabel: 'D/m', defaultDirection: 'desc'},\n    {key: 'activePerMillion', label: 'Active/mil', shortLabel: 'A/m', defaultDirection: 'desc'},\n    {key: 'recoveredPerMillion', label: 'Recovered/mil', shortLabel: 'R/m', defaultDirection: 'desc'},\n    { key: 'population', label: 'Population', shortLabel: 'Pop.', defaultDirection: 'desc', renderShortNumber:true},\n  ];\n  const defaultSortColumn = columns[1];\n\n  let picked;\n  if (props.pickLowest) {\n    const {count, quantifier} = props.pickLowest;\n    picked =\n        children.sort((a, b) => quantifier(a) - quantifier(b))\n            .slice(0, count);\n  } else {\n    picked = children;\n  }\n\n  const rows = [];\n  for (const child of picked) {\n    if (props.filter && !props.filter(child)) {\n      continue;\n    }\n\n    const [name, basic, population] =\n        world.getMultiple(child, [NameComponent, BasicDataComponent, PopulationComponent]);\n    if (!name || !basic) {\n      continue;\n    }\n\n    const pop = population.population();\n    const confirmed = basic.confirmed().lastValue();\n    const confirmedPerMillion =\n        population\n            ? Math.round(confirmed /pop  * 1000000)\n            : '';\n\n    const deaths = basic.died().lastValue();\n    const deathsPerMillion =\n        population\n            ? Math.round(deaths / pop * 1000000)\n            : '';\n    const active = basic.active().lastValue();\n    const activePerMillion =\n        population\n            ? Math.round(active / pop * 1000000)\n            : '';\n    const recovered = basic.recovered().lastValue();\n    const recoveredPerMillion =\n        population\n            ? Math.round(recovered / pop * 1000000)\n            : '';\n\n    rows.push({\n      id: child.string(),\n      name: \n          <MaterialLink key={name.english()} component={RouterLink} to={'/country' + child.string()}>\n            {name.english()}\n          </MaterialLink>,\n      confirmedPerMillion,\n      deathsPerMillion,\n      activePerMillion,\n      recoveredPerMillion,\n      population: pop,\n    });\n  }\n\n  return (\n    <div className={props.className}>\n      {/* <Typography variant=\"h6\">{props.plural}</Typography> */}\n      <SortableTable\n          columns={columns}\n          rows={rows}\n          defaultSortColumn={defaultSortColumn}\n      />\n    </div>\n  );\n};\n\nDivisionTableCapita.propTypes = DivisionTableMain.propTypes;\n\nexport const DivisionTableDaysToDouble = (props) => {\n  const world = useContext(WorldContext);\n  const children =\n      world.get(props.parent, ChildrenComponent).children();\n\n  const columns = [\n    {key: 'name', label: 'Name', defaultDirection: 'asc'},\n    {key: 'confirmedDoublingInterval', label: 'Confirmed', shortLabel: 'Conf.', defaultDirection: 'asc'},\n    {key: 'deathsDoublingInterval', label: 'Deaths',  defaultDirection: 'asc'},\n    {key: 'recoveredDoublingInterval', label: 'Recovered',  defaultDirection: 'asc'},\n  ];\n  const defaultSortColumn = columns[1];\n\n  let picked;\n  if (props.pickLowest) {\n    const {count, quantifier} = props.pickLowest;\n    picked =\n        children.sort((a, b) => quantifier(a) - quantifier(b))\n            .slice(0, count);\n  } else {\n    picked = children;\n  }\n\n  const rows = [];\n  for (const child of picked) {\n    if (props.filter && !props.filter(child)) {\n      continue;\n    }\n\n    const [name, basic] =\n        world.getMultiple(child, [NameComponent, BasicDataComponent]);\n    if (!name || !basic) {\n      continue;\n    }\n    rows.push({\n      id: child.string(),\n      name: \n          <MaterialLink key={name.english()} component={RouterLink} to={'/country' + child.string()}>\n            {name.english()}\n          </MaterialLink>,\n      confirmedDoublingInterval: basic.confirmed().doublingInterval().lastValue(),\n      deathsDoublingInterval: basic.died().doublingInterval().lastValue(),\n      recoveredDoublingInterval: basic.recovered().doublingInterval().lastValue(),\n    });\n  }\n\nDivisionTableDaysToDouble.propTypes = DivisionTableMain.propTypes;\n\n  return (\n    <div className={props.className}>\n      {/* <Typography variant=\"h6\">{props.plural}</Typography> */}\n      <SortableTable\n          columns={columns}\n          rows={rows}\n          defaultSortColumn={defaultSortColumn}\n      />\n    </div>\n  );\n};\n\nexport const DivisionTab = (props) => {\n  const tabs = [\n    <DivisionTableMain {...props} />,\n    <DivisionTableCapita {...props} />,\n    <DivisionTableDaysToDouble {...props} />,\n  ];\n\n  return (\n    <MyTabs\n    labels={[props.plural, \"Capita\", \"Days to 2x\"]}\n    urlQueryKey=\"table\"\n    urlQueryValues={['main', 'capita', \"daysto2x\"]}\n    tabs={tabs}\n  />);\n}","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { Chip, Paper, Typography } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link as MaterialLink } from '@material-ui/core';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport { AdvancedGraph } from '../components/graphs/AdvancedGraph';\nimport { AppBar } from '../components/chrome/AppBar';\nimport { BasicDataComponent } from '../models/BasicDataComponent';\nimport { Discussion } from '../components/chrome/Discussion';\nimport { DivisionTab } from '../components/tables/DivisionTable';\nimport { DivisionTypesComponent } from '../models/DivisionTypesComponent';\nimport { ChildrenComponent } from '../models/ChildrenComponent';\nimport { Footer } from '../Footer';\nimport { GeographyComponent } from '../models/GeographyComponent';\nimport { NameComponent } from '../models/NameComponent';\nimport { Path } from '../models/Path';\nimport { ProjectionsComponent } from '../models/ProjectionsComponent';\nimport { SearchInput } from '../components/chrome/SearchInput';\nimport { WorldContext } from '../WorldContext';\nimport { MapUS } from \"../MapUS\"\nimport { myShortNumber } from \"../Util.js\";\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { PopulationComponent } from '../models/PopulationComponent';\n\nconst shortNumber = require('short-number');\n\nconst HORIZONTAL_MARGIN = '16px';\nconst NEARBY_TO_SHOW = 10;\n\nconst useStyles = makeStyles(theme => ({\n  body: {\n    background: '#fafafa',\n  },\n  content: {\n    padding: HORIZONTAL_MARGIN,\n    //margin: HORIZONTAL_MARGIN,\n  },\n  section: {\n    margin: '16px 0 24px 0',\n    overflow: 'scroll',\n  },\n  tag: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n    backgroundColor: \"#f3f3f3\",\n    borderRadius: 10,\n    flexGrow: \"1\",\n    margin: 3,\n    color: \"black\",\n    textDecoration: \"none\",\n  },\n  tagSelected: {\n    color: \"#FFFFFF\",\n    backgroundColor: \"#00aeef\",\n  },\n  tagTitle: {\n    marginTop: 5,\n  },\n  tagSection: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    alignContent: \"flex-end\",\n  },\n  topTag: {\n    fontSize: \"0.5rem\",\n  },\n  smallTag: {\n    fontSize: \"0.5rem\",\n  },\n  mainTag: {\n    fontSize: \"1.0rem\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  row: {\n    padding: theme.spacing(1, 1),\n    justifyContent: \"space-between\",\n    display: \"flex\",\n  },\n  rowNoBeds: {\n    justifyContent: \"center\",\n  },\n}));\n\nconst MapWorld = withRouter((props) => {\n  return <MapUS  {...props} />;\n});\n\nexport const PageRegion = withRouter((props) => {\n  const classes = useStyles();\n  const world = useContext(WorldContext);\n  const path = Path.parse('/' + props.match.params[0]);\n\n  if (path.matches('/US')) {\n    return <Redirect to=\"/US\" />;\n  } else if (path.matches('/US/state/:state')) {\n    return <Redirect to={\"/state/\" + path.components[2]} />;\n  } else if (path.matches('/US/state/:state/county/:county')) {\n    return <Redirect to={\"/county/\" + path.components[2] + '/' + path.components[4]} />;\n  }\n\n  const [basic, divisions, geography] =\n    world.getMultiple(\n      path, [\n      BasicDataComponent,\n      DivisionTypesComponent,\n      GeographyComponent,\n      ProjectionsComponent,\n    ]);\n  if (!basic) {\n    throw new Error(`${path.string()} has no basic component`);\n  }\n\n  const parentDivision = path.parent();\n  const showNearby = geography && parentDivision;\n  const couldBeNearby = (candidate) =>\n    !path.equals(candidate) && world.has(candidate, GeographyComponent);\n  const distanceTo = (candidate) => {\n    const theirGeography = world.get(candidate, GeographyComponent);\n    // This is kind of garbage, we're comparing a point to a point. Really\n    // should be comparing bounds, but we don't have those.\n    return geography.distance(theirGeography);\n  };\n  const showMap = geography || !parentDivision;\n\n  return (\n    <div className={classes.body}>\n      <AppBar />\n\n      <Paper className={classes.content}>\n        <Title className={classes.section} path={path} />\n        <LocationSummaryTitle className={classes.section} path={path} />\n\n        <Graphs className={classes.section} path={path} />\n        {\n          showMap &&\n          <MapWorld source={basic} geography={geography} />\n        }\n\n        <a href=\"#division\" name=\"division\" >\n        </a>\n        {divisions &&\n          divisions.types().map(({ id, plural }) =>\n            <DivisionTab\n              key={id}\n              plural={plural}\n              parent={id ? path.child(id) : path}\n              className={classes.section}\n            />\n          )}\n\n        {showNearby &&\n          <DivisionTab\n            parent={parentDivision}\n            plural=\"Nearby\"\n            className={classes.section}\n            filter={couldBeNearby}\n            pickLowest={{\n              count: NEARBY_TO_SHOW,\n              quantifier: distanceTo,\n            }}\n          />}\n      </Paper>\n\n\n      <Discussion className={classes.content} />\n\n      <Footer />\n    </div>\n  );\n});\n\nconst useTitleStyles = makeStyles(theme => ({\n  noOverflow: {\n    overflow: 'hidden',\n  },\n  container: {\n    alignItems: 'flex-end',\n    display: 'flex',\n    flexWrap: 'wrap',\n    margin: '0 -12px',\n    width: 'calc(100% - 24px)',\n  },\n  tagSticky: {\n    backgroundColor: \"#FFFFFF\",\n    position: \"sticky\",\n    top: 0,\n    left: 0,\n    zIndex: \"1\",\n  },\n  tagContainer: {\n    alignItems: 'flex-end',\n    display: 'flex',\n    flexWrap: 'nowrap',\n    // margin: '0 -12px', // ??\n    width: 'calc(100% - 24px)',\n  },\n  node: {\n    margin: '0 12px 16px 12px',\n  },\n  text: {\n    padding: '0 8px',\n    marginLeft: '-8px',\n    marginRight: '8px',\n  },\n  parentLink: {\n    borderRadius: '8px',\n    color: fade(theme.palette.text.primary, 0.5),\n    textDecoration: 'none',\n    '&:hover': {\n      background: '#efefef',\n    },\n  },\n  numbers: {\n    color: theme.palette.text.secondary,\n    display: 'flex',\n    flexWrap: 'wrap',\n\n    [theme.breakpoints.down('xs')]: {\n      display: 'initial',\n    },\n  },\n  number: {\n    borderLeft: '2px solid',\n    borderTop: '2px solid',\n    flexGrow: 1,\n    padding: '4px 0 4px 4px',\n    '&:not(:last-child)': {\n      paddingRight: '4px',\n    },\n  },\n}));\n\nconst Tag = withRouter((props) => {\n  let title = props.title;\n\n  const routeTo = props.link;\n  const selected = props.selected; // match.url === routeTo;\n  const confirmNumbers = props.numbers.find(s => s.plural === \"cases\");\n  const confirmed = confirmNumbers.value;\n  const confirmedNew = confirmNumbers.change;\n\n  const deathsNumbers = props.numbers.find(s => s.plural === \"deaths\");\n  const deaths = deathsNumbers.value;\n  const deathsNew = deathsNumbers.change;\n\n  const classes = useStyles();\n  return <RouterLink className={`${classes.tag} ${selected ? classes.tagSelected : ''}`} href={routeTo} to={routeTo}>\n    <div className={classes.tagTitle}> {title} </div>\n    <div className={`${classes.row} `} >\n      <section className={classes.tagSection}>\n        <div className={classes.topTag}>\n          +{myShortNumber(confirmedNew)}\n        </div>\n        <div className={classes.mainTag}>\n          {myShortNumber(confirmed)} </div>\n        <div className={classes.smallTag}>\n          Confirmed </div>\n      </section>\n      <section className={classes.tagSection}>\n        <div className={classes.topTag}>\n          +{myShortNumber(deathsNew)}\n        </div>\n        <div className={classes.main1GTag}>\n          {myShortNumber(deaths)} </div>\n        <div className={classes.smallTag}>\n          Deaths </div>\n      </section>\n    </div>\n  </RouterLink>;\n});\n\n\nconst WilsonTitle = (props) => {\n  const classes = useTitleStyles();\n  const tagclasses = useStyles();\n  const world = useContext(WorldContext);\n  const names = props.names;\n  const divisions = world.get(props.path, DivisionTypesComponent);\n  const first = divisions && divisions.types()[0];\n  const children =\n    first && world.get(\n      first.id ? props.path.child(first.id) : props.path,\n      ChildrenComponent);\n\n  return (\n    <div className={classes.tagSticky} >\n      <div className={classes.tagContainer}>\n        {\n          first && children &&\n          <MaterialLink className={tagclasses.tag} href=\"#division\">\n            <div className={tagclasses.tagTitle}> Dive in </div>\n            <div className={`${tagclasses.row} ${tagclasses.rowNoBeds}`} >\n              <section className={tagclasses.tagSection}>\n                <div className={tagclasses.topTag}>\n                </div>\n                <div className={tagclasses.mainTag}>\n                  {children.children().length}\n                </div>\n                <div className={tagclasses.smallTag}>\n                  {first.plural}\n                </div>\n              </section>\n            </div>\n          </MaterialLink>\n        }\n        {names.map(({ path, text, numbers, squish, link }, i) =>\n          <Tag\n            key={path.string()}\n            title={text}\n            selected={!squish}\n            numbers={numbers}\n            link={link}\n          >\n          </Tag>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction getNames(world, path) {\n  const name = world.get(path, NameComponent);\n  if (!name) {\n    return \"\";\n  }\n\n  const names = [{\n    path: path,\n    text: name.english(),\n  }];\n\n  let parentCursor = path.parent();\n  while (parentCursor) {\n    const parentName = world.get(parentCursor, NameComponent);\n    if (parentName) {\n      names.push({\n        path: parentCursor,\n        text: parentName.english(),\n        link: '/country' + parentCursor.string(),\n        squish: true,\n      });\n    }\n    parentCursor = parentCursor.parent();\n  }\n\n  for (const name of names) {\n    const basic = world.get(name.path, BasicDataComponent);\n    name.numbers = [\n      {\n        plural: 'cases',\n        color: '#00aeef',\n        value: basic.confirmed().lastValue(),\n        change: basic.confirmed().change().lastValue(),\n      },\n      {\n        plural: 'deaths',\n        color: 'red',\n        value: basic.died().lastValue(),\n        change: basic.died().change().lastValue(),\n      },\n    ];\n\n    if (!name.squish) {\n      name.numbers.push({\n        plural: 'active',\n        color: 'purple',\n        value: basic.active().lastValue(),\n        change: basic.active().change().lastValue(),\n      }, {\n        plural: 'recovered',\n        color: 'green',\n        value: basic.recovered().lastValue(),\n        change: basic.recovered().change().lastValue(),\n      });\n    }\n  }\n  return names;\n};\n\nconst Title = (props) => {\n  const world = useContext(WorldContext);\n  const names = getNames(world, props.path);\n\n  return <WilsonTitle names={names} path={props.path} />;\n};\n\nconst useSummaryStyle = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    justifyContent: \"space-around\",\n  },\n  aspect: {\n    flexDirection: \"column\",\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: '4px',\n    margin: '5px 5px',\n    flexGrow: 1,\n    overflow: 'hidden',\n  },\n  innerDiv: {\n    flexDirection: \"column\",\n    alignContent: 'center',\n    alignItems: 'center',\n    display: 'flex',\n    flexWrap: 'wrap',\n    // padding: '4px',\n    // margin: '5px 5px',\n    flexGrow: 1,\n  },\n  label: {\n    fontSize: '.7em',\n  },\n  total: {\n    flexGrow: 1,\n    fontSize: '1.1em',\n  },\n  change: {\n    flexGrow: 1,\n    fontSize: '0.5em',\n    minHeight: \"0.5em\"\n  },\n}));\n\nconst LocationSummaryTitle = (props) => {\n  const world = useContext(WorldContext);\n  const names = getNames(world, props.path);\n\n  const numbers = names[0].numbers;\n  const classes = useSummaryStyle();\n\n  return (\n    <div className={classes.container}>\n      {numbers.map(({ plural, color, value, change }) =>\n        value > 0 && (\n          <Paper className={classes.aspect} >\n            <div className={classes.innerDiv} style={{ color: color }}>\n              <div className={classes.change}>\n                {change > 0 && `+${shortNumber(change)}`}\n              </div>\n              <div className={classes.total}>\n                {shortNumber(value)}\n              </div>\n              <div className={classes.label}>\n                {plural}\n              </div>\n            </div>\n          </Paper>\n        )\n      )}\n    </div>\n  );\n};\n\nTitle.propTypes = {\n  className: PropTypes.string,\n  path: PropTypes.instanceOf(Path).isRequired,\n};\n\nconst useGraphStyles = makeStyles(theme => ({\n  graph: {\n    border: '1px solid',\n    borderColor: theme.palette.divider,\n    borderRadius: '4px',\n    padding: '8px',\n  },\n  comparisons: {\n    alignItems: 'center',\n    display: 'flex',\n    margin: theme.spacing(1, 0),\n  },\n  comparisonSearch: {\n    backgroundColor: theme.palette.action.hover,\n    margin: theme.spacing(0, 2),\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  chip: {\n    margin: theme.spacing(0, 1),\n  },\n}));\n\nconst Graphs = (props) => {\n  const classes = useGraphStyles();\n  const world = useContext(WorldContext);\n  const name = world.get(props.path, NameComponent);\n  const basic = world.get(props.path, BasicDataComponent);\n  const population = world.get(props.path, PopulationComponent);\n\n  const [comparingWith, setComparingWith] = React.useState(() => []);\n  const addComparison = (path) => {\n    const name = world.get(path, NameComponent);\n    const basic = world.get(path, BasicDataComponent);\n    const population = world.get(path, PopulationComponent);\n    setComparingWith(comparingWith.concat([{\n      path,\n      name,\n      basic,\n      population\n    }]));\n  };\n  const removeComparison = (i) => {\n    const copied = [...comparingWith];\n    copied.splice(i, 1);\n    setComparingWith(copied);\n  };\n\n  return (\n    <div className={props.className}>\n      <div className={classes.comparisons}>\n        <Typography>Compare with: </Typography>\n        <SearchInput\n          className={classes.comparisonSearch}\n          onChoice={addComparison}\n        />\n        {comparingWith.map(({ path, name }, i) => {\n          return (\n            <Chip\n              key={path.string()}\n              className={classes.chip}\n              onDelete={() => removeComparison(i)}\n              label={name.english()}\n            />\n          );\n        })}\n      </div>\n\n      {[DailyChangeGraph, DailyTotalGraph, DoublingGraph].map((Graph, i) => (\n        <Graph\n          key={i}\n          name={name}\n          basic={basic}\n          population={population}\n          comparingWith={comparingWith}\n          className={classes.graph}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst baseToggleButtonStyles = {\n  height: 'initial',\n  textTransform: 'initial',\n};\n\nconst useLegendStyles = makeStyles(theme => ({\n  serieses: {\n    border: `1px solid ${fade(theme.palette.action.active, 0.12)}`,\n    display: 'flex',\n    flexWrap: 'wrap',\n    maxWidth: '500px',\n  },\n  series: {\n    border: 'none',\n    color: fade(theme.palette.action.active, 0.12),\n    '&.selected': {\n      backgroundColor: 'initial',\n      color: fade(theme.palette.action.active, 0.8),\n      fontWeight: 'initial',\n    },\n    ...baseToggleButtonStyles,\n  },\n  icon: {\n    paddingRight: '4px',\n  },\n}));\n\nconst Legend = (props) => {\n  const classes = useLegendStyles();\n  console.log(props.spec)\n  return (\n    <ToggleButtonGroup\n      exclusive={true}\n      value={props.selected}\n      onChange={(event, desired) => props.onChange(desired)}\n      className={classes.serieses}>\n      {props.spec.map(series => {\n        console.log(series.key);\n        return <ToggleButton\n          key={series.key}\n          value={series.key}\n          classes={{ root: classes.series, selected: 'selected' }}>\n          {series.series.label_}\n        </ToggleButton>\n      }\n      )}\n    </ToggleButtonGroup>\n  );\n};\n\nconst useDisplayStyles = makeStyles(theme => ({\n  options: {\n    display: 'initial',\n  },\n  option: {\n    ...baseToggleButtonStyles,\n  },\n}));\n\nconst Display = (props) => {\n  const classes = useDisplayStyles();\n\n  return (\n    <ToggleButtonGroup\n      exclusive\n      value={props.selected}\n      onChange={(event, desired) => desired && props.onChange(desired)}\n      className={classes.options}>\n      {[...props.displays.entries()].map(([key, data]) =>\n        <ToggleButton key={key} value={key} className={classes.option}>\n          {data.label}\n        </ToggleButton>\n      )}\n    </ToggleButtonGroup>\n  );\n};\n\nconst DailyChangeGraph = (props) => {\n  const name = props.name;\n  const basic = props.basic;\n  const population = props.population.population();;\n  const isCompareMode = props.comparingWith.length > 0;\n  const aligned = false;  // hard coding for now, provide GUI later\n\n  const scales = new Map([\n    ['capita', {\n      label: 'Capita',\n      capita: true,\n    }],\n    ['value', {\n      label: 'Value',\n      capita: false,\n    }],\n  ]);\n  const [scale, setScale] = React.useState(scales.keys().next().value)\n  const perCapita = scales.get(scale).capita;\n\n  const serieseDef = [\n    {\n      seriesGen: (source) => source.confirmed().change(),\n      color: '#7ed0d0',\n      key: \"confirm\",\n    },\n    {\n      seriesGen: (source) => source.confirmed().fitVirusCV19Prediction().change().dropFirst(),\n      color: 'pink',\n      key: \"trend\",\n    },\n    {\n      seriesGen: (source) => source.recovered().change(),\n      color: 'green',\n      key: \"recovery\",\n    },\n    {\n      seriesGen: (source) => source.died().change(),\n      color: 'red',\n      key: \"death\",\n    },\n  ];\n\n  let t0point = basic.confirmed().pointLargerEqualThan(100);\n\n  const serieses = serieseDef.map(s => {\n    let series = s.seriesGen(basic);\n    if (t0point && aligned) {\n      series.setT0(t0point[0].unix())\n    }\n    return {\n      ...s,\n      series: series,\n    }\n  })\n\n  let graphSeries = serieses.map(s => s);\n\n  const [selected, setSelected] = React.useState(serieses[0].key);\n\n  let compareSeriesSelector = null;\n\n  if (isCompareMode) {\n    compareSeriesSelector =\n      <div>\n        <Legend\n          spec={serieses}\n          selected={selected}\n          onChange={setSelected}\n        />\n        <Display\n          displays={scales}\n          selected={scale}\n          onChange={setScale}\n        ></Display>\n\n      </div>\n    const colors = [\n      '#7ed0d0',\n      'pink',\n      'green',\n      'red',\n      'purple',\n      'black',\n    ];\n    let colorIndex = 0;\n\n    let compareserieses = serieseDef.map(s => {\n      let series = s.seriesGen(basic);\n      if (perCapita) {\n        series = series.capita(population / 1000000).suffixLabel(`${name.english()} (per mil)`);\n      }\n      if (t0point && aligned) {\n        series.setT0(t0point[0].unix())\n      }\n      return {\n        ...s,\n        color: \"#ff7300\",\n        series: series,\n      }\n    })\n    graphSeries = compareserieses.filter(s => {\n      return s.key === selected;\n    });\n    for (const { name, basic, population } of props.comparingWith) {\n      basic.confirmed().points();\n      let t0point = basic.confirmed().pointLargerEqualThan(100);\n      let series = serieseDef.find(s => s.key === selected).seriesGen(basic).suffixLabel(`${name.english()}`);\n      if (perCapita) {\n        series = series.capita(population.population() / 1000000).suffixLabel(\"(per mil)\");\n      }\n      if (t0point && aligned) {\n        series.setT0(t0point[0].unix())\n      }\n      graphSeries.push({\n        series: series,\n        color: colors[colorIndex++],\n        stipple: true,\n      });\n    }\n  }\n\n  return (\n    <div>\n      {compareSeriesSelector}\n      <AdvancedGraph\n        className={props.className}\n        serieses={graphSeries}\n        alignT0={aligned}\n      />\n    </div>\n  );\n};\n\nconst DailyTotalGraph = (props) => {\n  const basic = props.basic;\n\n  return (\n    <AdvancedGraph\n      className={props.className}\n      serieses={[{\n        series: basic.confirmed(),\n        color: 'teal',\n        trend: 'orange',\n        initial: 'off',\n      }, {\n        series: basic.died(),\n        color: 'red',\n        trend: '#ce889f',\n      }, {\n        series: basic.recovered(),\n        color: 'green',\n        trend: '#668000',\n      }, {\n        series: basic.active(),\n        color: 'purple',\n        initial: 'off',\n      }, {\n        series: basic.confirmed().fitVirusCV19Prediction(),\n        color: 'pink',\n        initial: 'off',\n      },\n      ]}\n    />\n  );\n};\n\nconst DoublingGraph = (props) => {\n  const basic = props.basic;\n\n  return (\n    <AdvancedGraph\n      className={props.className}\n      serieses={[{\n        series: basic.confirmed().doublingInterval(),\n        color: 'teal',\n        trend: '#7ed0d0',\n      }, {\n        series: basic.died().doublingInterval(),\n        color: 'red',\n        trend: '#ce889f',\n      },\n      ]}\n    />\n  );\n};\n","import React, { useContext } from 'react';\nimport { withHeader } from \"./ContentWrapping.js\"\nimport { CountryContext } from \"./CountryContext\";\nimport { USInfoTopWidget } from './USInfoTopWidget.js'\nimport * as Util from \"./Util.js\"\nimport { Box } from '@material-ui/core';\nimport { Title } from './Title';\n\nconst textStyle = {\n    color: 'white',\n    fontSize: 'x-large',\n}\n\nconst Page404 = withHeader(() => {\n    const country = useContext(CountryContext);\n    const default_county_info = Util.getDefaultCounty();\n    const state = country.stateForTwoLetterName(default_county_info.state)\n    const county = state.countyForName(default_county_info.county)\n    return (\n        <>\n            <Title\n                title=\"Page not found\"\n                desc={`${country.name} county-level COVID-19 30-day data visualized: `\n                          + `confirmed cases, new cases & death curves, `\n                          + `testing results & hospitalization numbers.`}\n            />\n            <USInfoTopWidget source={county || state} />\n            <Box\n                display=\"flex\"\n                height={80}\n                bgcolor=\"#00aeef\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n            >\n                <h1 style={textStyle}>\n                    Oops! That page couldn&apos;t be found.\n                </h1>\n            </Box>\n        </>\n    );\n});\n\nexport { Page404 }\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const compactTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#00aeef',\n        },\n        secondary: {\n            main: '#00aeef',\n        },\n    },\n    overrides: {\n        MuiTableCell: {\n            sizeSmall: {  //This can be referred from Material UI API documentation.\n                padding: '1px 1px 1px 1px',\n            },\n        },\n        MuiToggleButton: {\n            sizeSmall: {\n                //This can be referred from Material UI API documentation.\n                maxHeight: 24,\n            }\n        }\n    },\n});\n","import React from 'react';\nimport { Switch, Redirect, Route, withRouter } from 'react-router-dom'\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Splash } from './Splash.js';\nimport { fetchApproximatePoliticalLocation } from \"./GeoLocation\"\nimport { logger } from \"./AppModule\"\nimport { PageUS } from \"./PageUS\"\nimport { PageState } from \"./PageState\"\nimport { PageCounty } from \"./PageCounty\"\nimport { PageMetro } from \"./PageMetro\"\nimport { PageRegion } from \"./pages/PageRegion\";\nimport { Page404 } from \"./Page404\"\nimport { Country } from \"./UnitedStates\";\nimport { CountryContext } from \"./CountryContext\";\nimport { Title } from \"./Title\";\nimport { compactTheme } from \"./Theme.js\";\nimport { reverse } from 'named-urls';\nimport routes from \"./Routes\";\nimport { makeCountyFromDescription } from \"./Util\"\n\nimport { WorldContext } from './WorldContext';\nimport { createBasicEarthAsync } from './models/Earth';\nimport { SearchIndexComponent } from './models/SearchIndexComponent';\nimport { SEARCH_INDEX_PATH } from './models/Earth';\n\nconst App = (props) => {\n  return <BrowserRouter>\n    <Title />\n    <ThemeProvider theme={compactTheme}>\n      <MainApp  {...props} />\n    </ThemeProvider>\n  </BrowserRouter>;\n};\n\nconst MainApp = withRouter((props) => {\n  const [earth, setEarth] = React.useState(null);\n  const [country, setCountry] = React.useState(null);\n  const [myCounty, setMyCounty] = React.useState(null);\n  const [nonUSCountry, setNonUSCountry] = React.useState(null);\n  const ROW_special = props.location.pathname.startsWith(\"/country\")\n    && !props.location.pathname.startsWith(\"/country/US\");\n  React.useEffect(() => {\n    if (ROW_special) {\n      createBasicEarthAsync().then(data => setEarth(data));\n    }\n    const myCountry = new Country();\n    setCountry(myCountry);\n\n    fetchApproximatePoliticalLocation().then(countyDescr => {\n      if (countyDescr.country === \"United States of America\" || countyDescr.county) {\n        const county = makeCountyFromDescription(myCountry, countyDescr);\n        setMyCounty(county);\n        logger.logEvent(\"AppStart\", {\n          myCounty: county,\n        });\n      } else {\n        setNonUSCountry(countyDescr.country);\n      }\n    });\n  }, [ROW_special]);\n\n  if ((ROW_special && earth === null) || country === null) {\n    return <Splash />\n  }\n\n  if (props.location.pathname === \"/\") {\n    if (myCounty) {\n      return <Redirect to={reverse(routes.county, {\n        state: myCounty.state().twoLetterName,\n        county: myCounty.name,\n      })} />;\n    }\n\n    if (nonUSCountry) {\n      const search = earth.get(SEARCH_INDEX_PATH, SearchIndexComponent);\n      console.log(\"----------------------------:\" + nonUSCountry);\n      console.log(nonUSCountry);\n      const allMatches = search.search(nonUSCountry);\n\n      if (allMatches && allMatches.length > 0) {\n        return <Redirect to={\"/country\" + allMatches[0].path.string()} />;\n      }\n    }\n    return <Splash />\n  }\n\n  if (ROW_special) {\n    return (\n      <WorldContext.Provider value={earth}>\n        <CountryContext.Provider value={country}>\n          <SafeRoutes />\n        </CountryContext.Provider>\n      </WorldContext.Provider>\n    );\n  };\n\n  return (\n    <CountryContext.Provider value={country}>\n      <SafeRoutes />\n    </CountryContext.Provider>\n  );\n\n});\n\nclass UnhookedSafeRoutes extends React.Component {\n\n  static getDerivedStateFromProps(props, state) {\n    if (state.location !== props.location) {\n      return UnhookedSafeRoutes.successStateFor(props);\n    } else {\n      return null;\n    }\n  }\n\n  static successStateFor(props) {\n    return { errored: false, location: props.location };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = UnhookedSafeRoutes.successStateFor(props);\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ errored: true });\n  }\n\n  render() {\n    if (this.state.errored) {\n      // Is lying really so bad in this situation? It's probably a 404 anyway...\n      return <Page404 />;\n    } else {\n      return (\n        <Switch>\n          <Route exact path={routes.county} component={PageCounty} />\n          <Route exact path={routes.state} component={PageState} />\n          <Route exact path={routes.united_states} component={PageUS} />\n          <Route exact path={routes.metro} component={PageMetro} />\n          <Route exact path={routes.united_states_recovery} component={PageUS} />\n          <Route exact path={routes.region} component={PageRegion} />\n          <Route exact path=\"*\" component={Page404} status={404} />\n        </Switch>\n      );\n    }\n  }\n}\nconst SafeRoutes = withRouter(UnhookedSafeRoutes);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}