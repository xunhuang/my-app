{"version":3,"sources":["USCountyInfo.js","Splash.js","CountyListRender.js","GraphNewCases.js","GraphTestingEffort.js","App.js","serviceWorker.js","index.js"],"names":["TableLookup","CasesData","getDistance","require","CountyList","moment","makeTable","reduce","m","c","table_key","State","County","state_short_name","county_name","lookupCountyInfo","key","USState_Population","getCountySummary","cases","g","result","county","countuy","state_name","group","push","Object","keys","total","sum","people_count","pop","Population2010","NaN","casesForCounty","filter","casesForState","countyDataForState","sort","a","b","casesForCountySummary","casesSummary","mycases","newcases","confirmed_date","values","newcasenum","format","confirmed","newpercent","toFixed","useStyles","makeStyles","theme","grow","flexGrow","title","display","color","background","padding","margin","borderRadius","subtitle","rootSplash","justifyContent","alignItems","width","height","Splash","props","classes","className","Toolbar","Typography","variant","noWrap","shortNumber","myShortNumber","n","isNaN","replace","Number","states","row","spacing","tag","textAlign","backgroundColor","flex","table","NearbyCounties","countyInfo","state","countySummary","nearby","centerCounty","item","Math","abs","Latitude","Longitude","map","distance","d","latitude","longitude","nearbyCounties","slice","getStateNameByStateCode","countylist","callback","CountiesForStateWidget","list","USCounty","AllStatesListWidget","today","g_group","current","casesData","AllStateListRender","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","newEntry","statename","component","scope","onClick","CountyListRender","newcounty","newstate","customtooltip","CustomTooltip","active","newcase","pending_help","payload","label","p","pending_confirmed","pending_newcase","name","BasicGraphNewCases","data","cases_data","fulldate","sorted_keys","toDate","v","countyFromNewCases","length","newdata","second_last","last","newlast","top","right","left","bottom","content","dataKey","stroke","strokeDasharray","type","yAxisId","strokeWidth","verticalAlign","value","tested","positive","testsThatDay","positiveThatDay","GraphTestingWidget","t","md","date","floor","i","GraphUSTesting","GraphStateTesting","statedata","tagSelected","tagTitle","marginTop","topTag","fontSize","smallTag","mainTag","Cookies","superagent","firebase","firebaseConfig","initializeApp","ApproxIPLocation","firestore","cookie","getJSON","fetchApproxIPLocation","location","get","query","lat","lon","then","res","body","catch","err","county_info","set","expires","post","apiKey","lng","console","log","TabPanel","children","index","other","role","hidden","id","aria-labelledby","Box","a11yProps","LinkTab","Tab","event","preventDefault","USCountyInfoWidget","withRouter","React","useState","tabvalue","setTabvalue","state_title","county_title","handleChange","newValue","HospitalBeds","Hospitals","graphlistSection","county_cases","state_mycases","state_summary","county_summary","us_summary","state_hospitals","state_countylist","hospitals","beds","Tabs","onChange","href","selected","browseTo","history","browseToState","search","Tag","functions","httpsCallable","DetailCaseList","sort_by_date","StateDetailCaseListWidget","state_cases","EntireUSDetailCaseListWidget","DetailCaseListWidget","comments_en","SearchBox","counties","classNamePrefix","defaultValue","placeholder","isDisabled","isLoading","isClearable","isRtl","isSearchable","options","param","encodeURIComponent","MainApp","setCounty","setState","setCaseData","useEffect","getCaseData","abc","casesdata","generationTime","fetchCounty","mycounty","results","state_code","pathname","exact","path","render","EntireUSWidget","CountyWidget","match","params","StateWidget","DataCrediWidget","target","rel","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.0ac93874.chunk.js","sourcesContent":["\nconst getDistance = require('geolib').getDistance;\nconst CountyList = require(\"./data/county_gps.json\");\nconst moment = require(\"moment\");\n\nfunction countyModuleInit(casesdata) {\n    makeTable();\n    CasesData = casesdata;\n}\n\nvar TableLookup;\nvar CasesData;\n\nfunction makeTable() {\n    if (!TableLookup) {\n        TableLookup = CountyList.reduce((m, c) => {\n            let key = table_key(c.State, c.County);\n            m[key] = c;\n            return m;\n        }, {});\n    }\n}\n\nfunction table_key(state_short_name, county_name) {\n    return state_short_name + \":\" + county_name;\n}\n\nfunction lookupCountyInfo(state_short_name, county_name) {\n    makeTable();\n    let key = table_key(state_short_name, county_name);\n    return TableLookup[key];\n}\n\nfunction nearbyCounties(state_short_name, county_name) {\n    let centerCounty = lookupCountyInfo(state_short_name, county_name);\n    if (!centerCounty) {\n        return null;\n    }\n    let reduced_list = CountyList.filter((item) => {\n        return Math.abs(Number(centerCounty.Latitude) - Number(item.Latitude)) < 1.5 &&\n            Math.abs(Number(centerCounty.Longitude) - Number(item.Longitude)) < 1.5\n    });\n\n    let add_distance = reduced_list.map(c => {\n        c.distance =\n            c.d = getDistance(\n                { latitude: c.Latitude, longitude: c.Longitude },\n                { latitude: centerCounty.Latitude, longitude: centerCounty.Longitude }\n            );\n        return c;\n    });\n\n    return add_distance;\n}\n\nconst USState_Population =\n{\n    \"CA\": 39937489,\n    \"TX\": 29472295,\n    \"FL\": 21992985,\n    \"NY\": 19440469,\n    \"PA\": 12820878,\n    \"IL\": 12659682,\n    \"OH\": 11747694,\n    \"GA\": 10736059,\n    \"NC\": 10611862,\n    \"MI\": 10045029,\n    \"NJ\": 8936574,\n    \"VA\": 8626207,\n    \"WA\": 7797095,\n    \"AZ\": 7378494,\n    \"MA\": 6976597,\n    \"TN\": 6897576,\n    \"IN\": 6745354,\n    \"MO\": 6169270,\n    \"MD\": 6083116,\n    \"WI\": 5851754,\n    \"CO\": 5845526,\n    \"MN\": 5700671,\n    \"SC\": 5210095,\n    \"AL\": 4908621,\n    \"LA\": 4645184,\n    \"KY\": 4499692,\n    \"OR\": 4301089,\n    \"OK\": 3954821,\n    \"CT\": 3563077,\n    \"UT\": 3282115,\n    \"IA\": 3179849,\n    \"NV\": 3139658,\n    \"AR\": 3038999,\n    \"PR\": 3032165,\n    \"MS\": 2989260,\n    \"KS\": 2910357,\n    \"NM\": 2096640,\n    \"NE\": 1952570,\n    \"ID\": 1826156,\n    \"WV\": 1778070,\n    \"HI\": 1412687,\n    \"NH\": 1371246,\n    \"ME\": 1345790,\n    \"MT\": 1086759,\n    \"RI\": 1056161,\n    \"DE\": 982895,\n    \"SD\": 903027,\n    \"ND\": 761723,\n    \"AK\": 734002,\n    \"DC\": 720687,\n    \"VT\": 628061,\n    \"WY\": 567025\n}\n\nfunction getAllStatesSummary(cases) {\n    const today = moment().format(\"M/D\");\n    let g_group = cases.reduce((result, c) => {\n        let current = result[c.state_name];\n        if (!current) {\n            current = {\n                confirmed: 0,\n                newcases: 0,\n            }\n        }\n        current.confirmed += c.people_count;\n        if (c.confirmed_date === today) {\n            current.newcases += c.people_count;\n        }\n        result[c.state_name] = current;\n        return result;\n    }, {});\n\n    let r = Object.keys(g_group).reduce((result, key) => {\n        let item = g_group[key];\n        result.push({\n            state: key,\n            confirmed: item.confirmed,\n            newcases: item.newcases,\n            newpercent: ((item.newcases / (item.confirmed - item.newcases)) * 100).toFixed(0),\n            Population2010: USState_Population[key],\n        })\n        return result;\n    }, []);\n    return r;\n}\n\nfunction getCountySummary(cases) {\n    let g = cases.reduce((result, c) => {\n        if (!c.county || c.county === \"undefined\" || c.countuy === \"Unassigned\" || c.county === \"Unknown\") {\n            c.county = \"Unknown\";\n        }\n\n        let key = c.state_name + \",\" + c.county;\n\n        let group = result[key];\n        if (group) {\n            group.push(c);\n        } else {\n            group = [c];\n        }\n        result[key] = group;\n        return result;\n    }, {});\n\n    let g_group = Object.keys(g).reduce((result, key) => {\n        let county = g[key];\n        let total = county.reduce((sum, c) => {\n            sum += c.people_count;\n            return sum;\n        }, 0);\n        let c = lookupCountyInfo(county[0].state_name, county[0].county);\n        let pop = c ? c.Population2010 : NaN;\n        result.push({\n            total: total,\n            county: county[0].county,\n            County: county[0].county,\n            state_name: county[0].state_name,\n            State: county[0].state_name,\n            Population2010: pop,\n        });\n        return result;\n    }, []);\n\n    return g_group;\n}\n\nfunction casesForCounty(state_short_name, county_name) {\n    return CasesData.filter(c => {\n        return (c.state_name === state_short_name && c.county === county_name);\n    });\n}\n\nfunction casesForState(state_short_name) {\n    return CasesData.filter(c => {\n        return (c.state_name === state_short_name);\n    });\n}\n\nfunction countyDataForState(state_short_name) {\n    let state_case = CasesData.filter(c => {\n        return (c.state_name === state_short_name);\n    });\n    return getCountySummary(state_case).sort((a, b) => b.total - a.total);\n}\n\nfunction hospitalsForState(state_short_name) {\n    let state_countylist = CountyList.filter(c => {\n        return (c.State === state_short_name);\n    });\n    let hospitals = 0;\n    let beds = 0;\n    state_countylist.map(c => {\n        if (c.Hospitals) {\n            hospitals += c.Hospitals;\n        }\n        if (c.HospitalBeds) {\n            beds += c.HospitalBeds;\n        }\n        return null;\n    })\n    return {\n        hospitals: hospitals,\n        beds: beds,\n    }\n}\n\nfunction casesForCountySummary(state_short_name, county_name) {\n    return casesSummary(casesForCounty(state_short_name, county_name));\n}\n\nfunction casesForStateSummary(state_short_name) {\n    return casesSummary(casesForState(state_short_name));\n}\n\nfunction casesForUS(state_short_name) {\n    return CasesData;\n}\n\nfunction casesSummary(mycases) {\n    const newcases = mycases.reduce((m, c) => {\n        let a = m[c.confirmed_date];\n        if (!a) a = 0;\n        a += c.people_count;\n        m[c.confirmed_date] = a;\n        return m;\n    }, {});\n    let total = Object.values(newcases).reduce((a, b) => a + b, 0);\n    const today = moment().format(\"M/D\");\n    var newcasenum = newcases[today];\n    if (!newcasenum) {\n        newcasenum = 0;\n    }\n    return {\n        confirmed: total,\n        newcases: newcasenum,\n        newpercent: ((newcasenum / (total - newcasenum)) * 100).toFixed(0),\n    }\n}\n\nexport {\n    countyModuleInit,\n    lookupCountyInfo,\n    nearbyCounties,\n    casesForCounty,\n    casesForState,\n    casesForUS,\n    casesSummary,\n    casesForCountySummary,\n    casesForStateSummary,\n    hospitalsForState,\n    countyDataForState,\n    getCountySummary,\n    getAllStatesSummary,\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography'\n\nconst useStyles = makeStyles(theme => ({\n    grow: {\n        flexGrow: 1,\n    },\n    title: {\n        display: 'block',\n        color: '#FFFFFF',\n        background: '#00aeef',\n        padding: 25,\n        margin: 25,\n        borderRadius: 20,\n\n    },\n    subtitle: {\n        display: 'block',\n        color: '#00aeef',\n        padding: 5,\n        margin: 5,\n    },\n    rootSplash: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"60vh\",\n        flexGrow: 1,\n    },\n}));\n\nconst Splash = (props) => {\n    const classes = useStyles();\n    return (\n        <div className={classes.rootSplash}>\n            <div>\n                <Toolbar>\n                    <div className={classes.grow}> </div>\n                    <Typography className={classes.title} variant=\"h2\" noWrap>\n                        Stay Calm\n        </Typography>\n                    <div className={classes.grow}> </div>\n                </Toolbar>\n                <Toolbar>\n                    <div className={classes.grow}> </div>\n                    <Typography className={classes.subtitle} variant=\"h5\" noWrap>\n                        this too shall pass\n          </Typography>\n                    <div className={classes.grow}> </div>\n                </Toolbar>\n            </div>\n        </div>);\n}\n\nexport { Splash }\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { lookupCountyInfo, nearbyCounties } from \"./USCountyInfo.js\";\nimport * as USCounty from \"./USCountyInfo.js\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\n\nvar shortNumber = require('short-number');\n\nfunction myShortNumber(n) {\n    if (!n) {\n        return \"0\";\n    }\n    if (isNaN(n)) {\n        n = n.replace(/,/g, '');\n        n = Number(n);\n    }\n    return shortNumber(n);\n}\n\n\nconst states = require('us-state-codes');\n\nconst useStyles = makeStyles(theme => ({\n    row: {\n        padding: theme.spacing(1, 1),\n        justifyContent: \"space-between\",\n        display: \"flex\",\n    },\n    tag: {\n        display: \"inline-block\",\n        textAlign: \"center\",\n        backgroundColor: \"#f3f3f3\",\n        padding: theme.spacing(1, 1),\n        flex: 1,\n        margin: 3,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    table: {\n        width: \"100%\"\n    }\n}));\n\nconst NearbyCounties = (props) => {\n    let countyInfo = lookupCountyInfo(props.state, props.county);\n    let countySummary = <div></div>;\n    if (countyInfo) {\n        let nearby =\n            nearbyCounties(props.state, props.county)\n                .sort((a, b) => a.distance - b.distance)\n                .slice(0, 10)\n            ;\n        countySummary =\n            <div>\n                <h3> Nearby Counties of {props.county}, {states.getStateNameByStateCode(props.state)} </h3>\n                <CountyListRender countylist={nearby} callback={props.callback} />\n            </div>;\n    }\n    return countySummary;\n}\nconst CountiesForStateWidget = (props) => {\n    let countyInfo = true;\n    let countySummary = <div></div>;\n    if (countyInfo) {\n        let list = USCounty.countyDataForState(props.state);\n        countySummary =\n            <div>\n                <h3> Counties of {states.getStateNameByStateCode(props.state)} </h3>\n                <CountyListRender countylist={list} callback={props.callback} />\n            </div>;\n    }\n    return countySummary;\n}\n\nconst AllStatesListWidget = (props) => {\n    let list = USCounty.getAllStatesSummary(props.casesData)\n        .sort((a, b) => b.confirmed - a.confirmed);\n    let countySummary =\n        <div>\n            <h3> States of USA </h3>\n            <AllStateListRender countylist={list} callback={props.callback} />\n        </div>;\n    return countySummary;\n}\n\nconst AllStateListRender = (props) => {\n    const list = props.countylist;\n    const classes = useStyles();\n    let countySummary =\n        <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                    <TableCell > Name</TableCell>\n                    <TableCell align=\"center\">Total</TableCell>\n                    <TableCell align=\"center\">New</TableCell>\n                    <TableCell align=\"center\">Population</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {\n                    list.map(row => {\n                        let newcases = row.newcases;\n                        let confirmed = row.confirmed;\n                        let newpercent = row.newpercent;\n                        let newEntry = (Number.isNaN(newpercent)) ? newcases : `${newcases}(+${newpercent}%)`;\n                        if (newcases === 0) {\n                            newEntry = 0;\n                        }\n                        let statename = states.getStateNameByStateCode(row.state);\n                        if (!statename) {\n                            statename = row.state;\n                        }\n                        let pop = row.Population2010 ? row.Population2010 : 0;\n                        return <TableRow key={statename}>\n                            <TableCell component=\"th\" scope=\"row\" onClick={() => {\n                                props.callback(row.state)\n                            }}>\n                                {statename}\n                            </TableCell>\n                            <TableCell align=\"center\">{confirmed}</TableCell>\n                            <TableCell align=\"center\"> {newEntry} </TableCell>\n                            <TableCell align=\"center\">{myShortNumber(pop)}</TableCell>\n                        </TableRow>;\n                    })\n                }\n            </TableBody>\n        </Table>;\n    return countySummary;\n};\n\nconst CountyListRender = (props) => {\n    const list = props.countylist;\n    const classes = useStyles();\n    function clicked(newcounty, newstate) {\n        if (props.callback) {\n            props.callback(newcounty, newstate);\n        }\n    }\n    let countySummary =\n        <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n            <TableHead>\n                <TableRow>\n                    <TableCell > Name</TableCell>\n                    <TableCell align=\"center\">Total</TableCell>\n                    <TableCell align=\"center\">New</TableCell>\n                    <TableCell align=\"center\">Population</TableCell>\n                </TableRow>\n            </TableHead>\n            <TableBody>\n                {\n                    list.map(row => {\n                        let sum = USCounty.casesForCountySummary(row.State, row.County);\n                        let newcases = sum.newcases;\n                        let confirmed = sum.confirmed;\n                        let newpercent = sum.newpercent;\n                        let newEntry = (Number.isNaN(newpercent)) ? newcases : `${newcases}(+${newpercent}%)`;\n                        if (newcases === 0) {\n                            newEntry = 0;\n                        }\n                        return <TableRow key={row.County}>\n                            <TableCell component=\"th\" scope=\"row\" onClick={() => { clicked(row.County, row.State); }}>\n                                {row.County}\n                            </TableCell>\n                            <TableCell align=\"center\">{confirmed}</TableCell>\n                            <TableCell align=\"center\"> {newEntry} </TableCell>\n                            <TableCell align=\"center\">{myShortNumber(row.Population2010)}</TableCell>\n                        </TableRow>;\n                    })\n                }\n            </TableBody>\n        </Table>;\n    return countySummary;\n}\n\nexport {\n    NearbyCounties,\n    CountiesForStateWidget,\n    AllStatesListWidget,\n}","import React from 'react';\nimport { ResponsiveContainer, LineChart, Line, YAxis, XAxis, Tooltip, CartesianGrid, Legend } from 'recharts';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst moment = require(\"moment\");\n\nconst useStyles = makeStyles(theme => ({\n    customtooltip: {\n        backgroundColor: \"#FFFFFF\",\n    }\n}));\n\nfunction countyFromNewCases(cases_data) {\n    let newcases = cases_data.reduce((m, c) => {\n        let a = m[c.fulldate];\n        if (!a) a = 0;\n        a += c.people_count;\n        m[c.fulldate] = a;\n        return m;\n    }, {});\n\n    const today = moment().format(\"MM/DD/YYYY\");\n    var newcasenum = newcases[today];\n    if (!newcasenum) {\n        newcases[today] = 0;\n    }\n\n    let sorted_keys = Object.keys(newcases).sort(function (a, b) {\n        return moment(a, \"MM/DD/YYY\").toDate() - moment(b, \"MM/DD/YYY\").toDate();\n    });\n    let total = 0;\n    return sorted_keys.map(key => {\n        let v = newcases[key];\n        total += v;\n\n        const day = moment(key).format(\"M/D\");\n\n        return {\n            name: day,\n            confirmed: total,\n            newcase: v,\n        };\n    });\n}\n\nconst CustomTooltip = (props) => {\n    const classes = useStyles();\n    const { active } = props;\n    if (active) {\n        const today = moment().format(\"M/D\");\n        const { payload, label } = props;\n        let confirmed;\n        let newcase;\n\n        payload.map(p => {\n            p = p.payload;\n            if (\"confirmed\" in p) {\n                confirmed = p.confirmed;\n            }\n            if (\"pending_confirmed\" in p) {\n                confirmed = p.pending_confirmed;\n            }\n            if (\"newcase\" in p) {\n                newcase = p.newcase;\n            }\n            if (\"pending_newcase\" in p) {\n                newcase = p.pending_newcase;\n            }\n            return null;\n        });\n\n        let pending_help;\n        if (today === payload[0].payload.name) {\n            pending_help = \"Last # potentially incomplete\";\n        }\n\n        return (\n            <div className={classes.customtooltip}>\n                <Typography variant=\"body1\" noWrap>\n                    {label}\n                </Typography>\n                <Typography variant=\"body2\" noWrap>\n                    {`Confirmed: ${confirmed}`}\n                </Typography>\n                <Typography variant=\"body2\" noWrap>\n                    {`New: ${newcase}`}\n                </Typography>\n                <Typography variant=\"body2\" noWrap>\n                    {pending_help}\n                </Typography>\n            </div>\n        );\n    }\n    return null;\n}\n\nconst BasicGraphNewCases = (props) => {\n\n    let data = countyFromNewCases(props.casesData);\n\n    if (data.length > 2) {\n        let newdata = data.slice(0, data.length - 2);\n        let second_last = data[data.length - 2];\n        let last = data[data.length - 1];\n        second_last.pending_confirmed = second_last.confirmed;\n        second_last.pending_newcase = second_last.newcase;\n        let newlast = {\n            name: last.name,\n            pending_confirmed: last.confirmed,\n            pending_newcase: last.newcase,\n        };\n        newdata.push(second_last);\n        newdata.push(newlast);\n        data = newdata;\n    }\n\n    return <ResponsiveContainer height={300} >\n        <LineChart\n            data={data}\n            margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\n        >\n            <Tooltip content={<CustomTooltip />} />\n            <XAxis dataKey=\"name\" />\n            <YAxis />\n            {/* <YAxis scale=\"log\" domain={['auto', 'auto']} /> */}\n            <CartesianGrid stroke=\"#f5f5f5\" strokeDasharray=\"5 5\" />\n            <Line type=\"monotone\" dataKey=\"confirmed\" stroke=\"#ff7300\" yAxisId={0} strokeWidth={3} />\n            <Line type=\"monotone\" dataKey=\"newcase\" stroke=\"#387908\" yAxisId={0} strokeWidth={3} />\n            <Line type=\"monotone\" dataKey=\"pending_confirmed\" stroke=\"#ff7300\" strokeDasharray=\"1 1\" strokeWidth={3} />\n            <Line type=\"monotone\" dataKey=\"pending_newcase\" stroke=\"#387908\" strokeDasharray=\"1 1\" strokeWidth={3} />\n            <Legend verticalAlign=\"top\" payload={[\n                { value: 'Total Confirmed', type: 'line', color: '#ff7300' },\n                { value: 'New', type: 'line', color: '#389708' },\n            ]} />\n        </LineChart></ResponsiveContainer>;\n}\n\nexport { BasicGraphNewCases };\n","import React from 'react';\nimport { ResponsiveContainer, LineChart, Line, YAxis, XAxis, Tooltip, CartesianGrid, Legend } from 'recharts';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    customtooltip: {\n        backgroundColor: \"#FFFFFF\",\n    }\n}));\n\nconst CustomTooltip = (props) => {\n    const classes = useStyles();\n    const { active } = props;\n    if (active) {\n        const { payload, label } = props;\n\n        let tested;\n        let positive;\n\n        payload.map(p => {\n            p = p.payload;\n            if (\"testsThatDay\" in p) {\n                tested = p.testsThatDay;\n            }\n            if (\"positiveThatDay\" in p) {\n                positive = p.positiveThatDay;\n            }\n            return null;\n        });\n\n        return (\n            <div className={classes.customtooltip}>\n                <Typography variant=\"body1\" noWrap>\n                    {label}\n                </Typography>\n                <Typography variant=\"body2\" noWrap>\n                    {`Tested: ${tested}`}\n                </Typography>\n                <Typography variant=\"body2\" noWrap>\n                    {`Positve : ${positive}`}\n                </Typography>\n                <Typography variant=\"body2\" noWrap>\n                    {`Positve Rate : ${(positive / tested * 100).toFixed(1)} %`}\n                </Typography>\n            </div>\n        );\n    }\n    return null;\n}\n\nconst GraphTestingWidget = (props) => {\n    const data = props.data.map(t => {\n        let md = t.date % 1000;\n        let m = Math.floor(md / 100);\n        let d = md % 100;\n        t.name = `${m}/${d}`;\n        return t;\n    })\n\n    for (let i = 0; i < data.length; i++) {\n        data[i].testsThatDay = (i === 0) ? data[i].total : data[i].total - data[i - 1].total;\n        data[i].positiveThatDay = (i === 0) ? data[i].positive : data[i].positive - data[i - 1].positive;\n    }\n\n    return <div>\n        <ResponsiveContainer height={300} >\n            <LineChart\n                data={data}\n                margin={{ top: 5, right: 30, left: 5, bottom: 5 }}\n            >\n                <YAxis />\n                <XAxis dataKey=\"name\" />\n                <CartesianGrid stroke=\"#f5f5f5\" strokeDasharray=\"5 5\" />\n                {/* <Line type=\"monotone\" name=\"Total Tested\" dataKey=\"total\" stroke=\"#387908\" yAxisId={0} strokeWidth={3} />\n            <Line type=\"monotone\" name=\"Tested Positive\" dataKey=\"positive\" stroke=\"#ff7300\" yAxisId={0} strokeWidth={3} /> */}\n                <Line type=\"monotone\" name=\"Daily Tested \" dataKey=\"testsThatDay\" stroke=\"#387908\" yAxisId={0} strokeWidth={3} />\n                <Line type=\"monotone\" name=\"Positive\" dataKey=\"positiveThatDay\" stroke=\"#ff7300\" yAxisId={0} strokeWidth={3} />\n                <Legend verticalAlign=\"top\" />\n                <Tooltip content={<CustomTooltip />} />\n            </LineChart>\n        </ResponsiveContainer>\n        <Typography variant=\"body2\" noWrap>\n            Data source: https://covidtracking.com/api/\n        </Typography>\n    </div>;\n}\n\nconst GraphUSTesting = (props) => {\n    const data = require(\"./data/us_testing.json\");\n    return <GraphTestingWidget data={data} />;\n}\n\nconst GraphStateTesting = (props) => {\n    const usdata = require(\"./data/state_testing.json\");\n    const statedata =\n        usdata.\n            filter(d => d.state === props.state)\n            .sort((a, b) => a.date - b.date);\n\n    return <GraphTestingWidget data={statedata} />;\n}\n\nexport { GraphUSTesting, GraphStateTesting };\n","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom'\nimport { BrowserRouter } from 'react-router-dom';\nimport { GoogleMap, Marker, LoadScript } from '@react-google-maps/api'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { countyModuleInit, lookupCountyInfo } from \"./USCountyInfo.js\";\nimport * as USCounty from \"./USCountyInfo.js\";\nimport Select from 'react-select';\nimport { Splash } from './Splash.js';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\n\n\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { NearbyCounties, CountiesForStateWidget, AllStatesListWidget } from \"./CountyListRender.js\"\nimport { BasicGraphNewCases } from \"./GraphNewCases.js\"\nimport { GraphUSTesting, GraphStateTesting } from \"./GraphTestingEffort\"\n\nconst useStyles = makeStyles(theme => ({\n  row: {\n    padding: theme.spacing(1, 1),\n    justifyContent: \"space-between\",\n    display: \"flex\",\n  },\n  tag: {\n    display: \"inline-block\",\n    textAlign: \"center\",\n    backgroundColor: \"#f3f3f3\",\n    borderRadius: 10,\n    flex: 1,\n    margin: 3,\n  },\n  tagSelected: {\n    display: \"inline-block\",\n    textAlign: \"center\",\n    color: \"#FFFFFF\",\n    backgroundColor: \"#00aeef\",\n    borderRadius: 10,\n    flex: 1,\n    margin: 3,\n  },\n  tagTitle: {\n    marginTop: 5,\n  },\n  topTag: {\n    fontSize: \"0.55rem\",\n  },\n  smallTag: {\n    fontSize: \"0.6rem\",\n  },\n  mainTag: {\n    fontSize: \"1.3rem\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  table: {\n    width: \"100%\"\n  },\n}));\n\nvar shortNumber = require('short-number');\n\nfunction myShortNumber(n) {\n  if (!n) {\n    return \"0\";\n  }\n  if (isNaN(n)) {\n    n = n.replace(/,/g, '');\n    n = Number(n);\n  }\n  return shortNumber(n);\n}\n\nconst states = require('us-state-codes');\nconst Cookies = require(\"js-cookie\");\nconst superagent = require(\"superagent\");\nconst moment = require(\"moment\");\nconst firebase = require(\"firebase\");\n\nrequire(\"firebase/firestore\");\nconst firebaseConfig = require('./firebaseConfig.json');\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nvar Hospitals = require('./hospitals.json');\nvar ApproxIPLocation;\n\nasync function fetchCounty() {\n  let cookie = Cookies.getJSON(\"covidLocation\");\n  if (cookie) {\n    return cookie;\n  }\n  let location = await fetchApproxIPLocation();\n\n  let county_info = await superagent\n    .get(\"https://geo.fcc.gov/api/census/area\")\n    .query({\n      lat: location.latitude,\n      lon: location.longitude,\n      format: \"json\",\n    }).then(res => {\n      return res.body;\n    })\n    .catch(err => {\n      return null;\n    });\n\n  Cookies.set(\"covidLocation\", county_info, {\n    expires: 1  // 1 day\n  });\n\n  return county_info;\n}\n\nasync function fetchApproxIPLocation() {\n  return await superagent\n    .post(`https://www.googleapis.com/geolocation/v1/geolocate?key=${firebaseConfig.apiKey}`)\n    .then(res => {\n      ApproxIPLocation = {\n        longitude: res.body.location.lng,\n        latitude: res.body.location.lat,\n      }\n      console.log(res.body);\n      return ApproxIPLocation;\n    })\n    .catch(err => {\n      return null;\n    });\n}\n\nfunction snapshotToArrayData(snapshot) {\n  var returnArr = []\n  snapshot.forEach(function (childSnapshot) {\n    returnArr.push(childSnapshot.data());\n  });\n  return returnArr;\n}\n\nasync function getCountyFromDb(state_short_name, county_name) {\n  let counties = await db.collection(\"US_COUNTIES\")\n    .where(\"STATE_SHORT_NAME\", \"==\", state_short_name)\n    .where(\"NAME\", \"==\", county_name)\n    .get().then((querySnapshot) => {\n      return snapshotToArrayData(querySnapshot);\n    });\n\n  if (counties.length === 1) {\n    return counties[0];\n  }\n\n  if (counties && counties.length !== 0) {\n    console.log(\"duplicate counties names in the same state\");\n    console.log(counties);\n  }\n  return null;\n}\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={event => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\n\n\nconst USCountyInfoWidget = withRouter((props) => {\n  const classes = useStyles();\n  const value = props.state ? (props.county ? 0 : 1) : 2;\n  const [tabvalue, setTabvalue] = React.useState(0);\n\n  const state = props.state ? props.state : \"CA\";\n  const county = props.county ? props.county : USCounty.countyDataForState(state)[0].County;\n\n  let state_title = states.getStateNameByStateCode(state);\n  let county_title = county;\n  let US_title = \"US\";\n\n  const handleChange = (event, newValue) => {\n    setTabvalue(newValue);\n  }\n\n  let countyInfo = lookupCountyInfo(state, county);\n  if (!countyInfo) {\n    countyInfo = {\n      HospitalBeds: \"N/A\",\n      Hospitals: \"N/A\",\n    }\n  }\n\n  let county_cases = USCounty.casesForCounty(state, county);\n  let state_mycases = USCounty.casesForState(state);\n  let state_summary = USCounty.casesForStateSummary(state);\n  let county_summary = USCounty.casesForCountySummary(state, county);\n  let us_summary = USCounty.casesSummary(props.casesData);\n  let state_hospitals = USCounty.hospitalsForState(state);\n\n  let graphlistSection;\n  if (value === 0) {\n    graphlistSection = <div>\n      <Tabs\n        variant=\"fullWidth\"\n        value={tabvalue}\n        onChange={handleChange}\n        aria-label=\"nav tabs example\"\n      >\n        <LinkTab label=\"Confirmed Cases\" href=\"/drafts\" {...a11yProps(0)} />\n        <LinkTab label={`${state_title} Testing Efforts`} href=\"/trash\" {...a11yProps(1)} />\n      </Tabs>\n      <TabPanel value={tabvalue} index={0}>\n        <BasicGraphNewCases casesData={county_cases} />\n      </TabPanel>\n      <TabPanel value={tabvalue} index={1}>\n        <GraphStateTesting state={state} />\n      </TabPanel>\n    </div>;\n  }\n  if (value === 1) {\n    graphlistSection = <div>\n      <Tabs\n        variant=\"fullWidth\"\n        value={tabvalue}\n        onChange={handleChange}\n        aria-label=\"nav tabs example\"\n      >\n        <LinkTab label=\"Confirmed Cases\" href=\"/drafts\" {...a11yProps(0)} />\n        <LinkTab label={`${state_title} Testing Efforts`} href=\"/trash\" {...a11yProps(1)} />\n      </Tabs>\n      <TabPanel value={tabvalue} index={0}>\n        <BasicGraphNewCases casesData={state_mycases} />\n      </TabPanel>\n      <TabPanel value={tabvalue} index={1}>\n        <GraphStateTesting state={state} />\n      </TabPanel>\n    </div>;\n  }\n  if (value === 2) {\n    graphlistSection = <div>\n      <Tabs\n        variant=\"fullWidth\"\n        value={tabvalue}\n        onChange={handleChange}\n        aria-label=\"nav tabs example\"\n      >\n        <LinkTab label=\"Confirmed Cases\" href=\"/drafts\" {...a11yProps(0)} />\n        <LinkTab label=\"National Testing\" href=\"/trash\" {...a11yProps(1)} />\n      </Tabs>\n      <TabPanel value={tabvalue} index={0}>\n        <BasicGraphNewCases casesData={props.casesData} />\n      </TabPanel>\n      <TabPanel value={tabvalue} index={1}>\n        <GraphUSTesting />\n      </TabPanel>\n    </div>;\n  }\n\n  return <div>\n    <div className={classes.row} >\n      <Tag\n        title={county_title}\n        confirmed={county_summary.confirmed}\n        newcases={county_summary.newcases}\n        hospitals={countyInfo.Hospitals}\n        beds={countyInfo.HospitalBeds}\n        selected={value === 0}\n        callback={() => {\n          browseTo(props.history, state, county);\n        }}\n      />\n      <Tag title={state_title}\n        confirmed={state_summary.confirmed}\n        newcases={state_summary.newcases}\n        hospitals={state_hospitals.hospitals}\n        beds={state_hospitals.beds}\n        selected={value === 1}\n        callback={() => {\n          browseToState(props.history, state);\n        }}\n      />\n      <Tag\n        title={US_title}\n        confirmed={us_summary.confirmed}\n        newcases={us_summary.newcases}\n        hospitals={6146}\n        beds={924107}\n        selected={value === 2}\n        callback={() => {\n          browseToUSPage(props.history);\n        }}\n      />\n    </div>\n    <div>\n      {graphlistSection}\n    </div>\n  </div >;\n});\n\nconst Tag = (props) => {\n  const classes = useStyles();\n  return <div className={props.selected ? classes.tagSelected : classes.tag}\n    onClick={() => {\n      if (props.callback) {\n        props.callback();\n      }\n    }}\n  >\n    <div className={classes.tagTitle}> {props.title} </div>\n    <div className={classes.row} >\n      <section>\n        <div className={classes.topTag}>\n          +{myShortNumber(props.newcases)}\n        </div>\n        <div className={classes.mainTag}>\n          {myShortNumber(props.confirmed)} </div>\n        <div className={classes.smallTag}>\n          Confirmed </div>\n      </section>\n      <section>\n        <div className={classes.topTag}>\n          {myShortNumber(props.beds)} Beds\n          </div>\n        <div className={classes.mainTag}>\n          {myShortNumber(props.hospitals)} </div>\n        <div className={classes.smallTag}>\n          Hospitals </div>\n      </section>\n    </div>\n  </div >;\n};\n\nconst BasicMap = (props) => {\n  const center = {\n    lat: 44.58,\n    lng: -96.451580,\n  }\n\n  let hospitals = Hospitals.features.map(a => {\n    return <Marker position={{\n      lat: a.geometry.coordinates[1],\n      lng: a.geometry.coordinates[0],\n    }}\n      title={a.properties.NAME}\n    />;\n  })\n\n  return <div className='map'>\n    <div className='map-container'>\n      <LoadScript\n        id=\"script-loader\"\n        googleMapsApiKey={firebaseConfig.apiKey}\n      >\n        <GoogleMap\n          id='traffic-example'\n          mapContainerStyle={{\n            height: \"100vh\",\n            width: \"100%\"\n          }}\n          zoom={4}\n          center={center}\n        >\n          <Marker position={center} />\n          {hospitals}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  </div>;\n}\n\nasync function getCaseData() {\n  let result = await firebase.functions().httpsCallable('datajsonNew')();\n  return result;\n}\n\nconst DetailCaseList = (props) => {\n  let countyInfo = lookupCountyInfo(props.state, props.county);\n  let county_cases = USCounty.casesForCounty(props.state, props.county).sort(sort_by_date);\n  let countySummary = <div />;\n  if (countyInfo) {\n    countySummary =\n      <div>\n        <h3> Case details for {props.county}, {states.getStateNameByStateCode(props.state)} </h3>\n        <DetailCaseListWidget cases={county_cases} />\n      </div>\n  }\n  return countySummary;\n}\n\nfunction sort_by_date(a, b) {\n  return moment(b.fulldate).toDate() - moment(a.fulldate).toDate();\n};\n\nconst StateDetailCaseListWidget = (props) => {\n  let state_cases = USCounty.casesForState(props.state).sort(sort_by_date);\n  let countySummary =\n    <div>\n      <h3> Case details for {states.getStateNameByStateCode(props.state)} </h3>\n      <DetailCaseListWidget cases={state_cases} />\n    </div>\n  return countySummary;\n}\nconst EntireUSDetailCaseListWidget = (props) => {\n  let state_cases = USCounty.casesForUS().sort(sort_by_date);\n  let countySummary =\n    <div>\n      <h3> Case details for United States </h3>\n      <DetailCaseListWidget cases={state_cases} />\n    </div>\n  return countySummary;\n}\n\nconst DetailCaseListWidget = (props) => {\n  const classes = useStyles();\n  const cases = props.cases;\n  let list =\n    <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n      <TableHead>\n        <TableRow>\n          <TableCell > Date</TableCell>\n          <TableCell align=\"center\">Count</TableCell>\n          <TableCell align=\"left\">Detail</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {cases.map(row => (\n          <TableRow key={row.id}>\n            <TableCell component=\"th\" scope=\"row\">\n              {row.confirmed_date}\n            </TableCell>\n            <TableCell align=\"center\">{row.people_count}</TableCell>\n            <TableCell align=\"left\">{row.comments_en}</TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table >\n  return list;\n}\n\nconst SearchBox = (props) => {\n\n  let summary = USCounty.getCountySummary(props.casesData);\n  let counties = summary.sort((a, b) => b.total - a.total)\n    .map(c => {\n      return {\n        label: `${c.county} , ${c.state_name} (${c.total})`,\n        value: c,\n      };\n    });\n  return <Select\n    className=\"basic-single\"\n    classNamePrefix=\"select\"\n    defaultValue={\"\"}\n    placeholder={\"Search for a County\"}\n    isDisabled={false}\n    isLoading={false}\n    isClearable={true}\n    isRtl={false}\n    isSearchable={true}\n    name=\"county_selection\"\n    options={counties}\n    onChange={param => {\n      console.log(param);\n      if (props.callback) {\n        props.callback(param.value.county, param.value.state_name);\n      }\n\n    }}\n  />;\n}\n\nconst App = (props) => {\n  return <BrowserRouter>\n    <MainApp  {...props} />\n  </BrowserRouter>;\n};\n\nfunction browseTo(history, state, county) {\n  history.push(\n    \"/county/\" + encodeURIComponent(state) + \"/\" + encodeURIComponent(county),\n    history.search,\n  );\n}\n\nfunction browseToState(history, state) {\n  history.push(\n    \"/state/\" + encodeURIComponent(state),\n    history.search,\n  );\n}\n\nfunction browseToUSPage(history) {\n  history.push(\n    \"/US\",\n    history.search,\n  );\n}\n\nconst MainApp = withRouter((props) => {\n  const [county, setCounty] = React.useState(\"Santa Clara\");\n  const [state, setState] = React.useState(\"CA\");\n  const [casesData, setCaseData] = React.useState(null);\n  React.useEffect(() => {\n    getCaseData().then(abc => {\n      countyModuleInit(abc.data.data, abc.generationTime);\n      setCaseData(abc.data.data);\n    });\n    fetchCounty().then(mycounty => {\n      setCounty(mycounty.results[0].county_name);\n      setState(mycounty.results[0].state_code);\n    });\n  }, []);\n  if (casesData === null || state === null) {\n    return <Splash />\n  }\n\n  if (props.location.pathname === \"/\") {\n    browseTo(props.history, state, county);\n  }\n  return (\n    <div>\n      <Switch>\n        {/* <Route exact path='/' component={App2} /> */}\n        <Route exact path='/county/:state/:county' render={(props) => <CountyWidget {...props} casesData={casesData} />} />\n        <Route exact path='/state/:state' render={(props) => <StateWidget {...props} casesData={casesData} />} />\n        <Route exact path='/US' render={(props) => <EntireUSWidget {...props} casesData={casesData} />} />\n      </Switch>\n    </div>\n  );\n});\n\nconst EntireUSWidget = (props) => {\n  const casesData = props.casesData;\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>COVID-19.direct: US Counties</h2>\n        <SearchBox\n          casesData={casesData}\n          callback={(newcounty, newstate) => {\n            browseTo(props.history, newstate, newcounty);\n          }}\n        />\n        <USCountyInfoWidget\n          casesData={casesData}\n          callback={(newcounty, newstate) => {\n            browseTo(props.history, newstate, newcounty);\n          }}\n        />\n        <AllStatesListWidget\n          casesData={casesData}\n          callback={(newstate) => {\n            browseToState(props.history, newstate);\n          }}\n        ></AllStatesListWidget>\n        <EntireUSDetailCaseListWidget />\n        <DataCrediWidget />\n      </header>\n    </div>\n  );\n}\n\nconst CountyWidget = (props) => {\n  const state = props.match.params.state;\n  const county = props.match.params.county;\n  const casesData = props.casesData;\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>COVID-19.direct: US Counties</h2>\n        <SearchBox\n          casesData={casesData}\n          callback={(newcounty, newstate) => {\n            browseTo(props.history, newstate, newcounty);\n          }}\n        />\n        <USCountyInfoWidget\n          casesData={casesData}\n          county={county}\n          state={state}\n          callback={(newcounty, newstate) => {\n            browseTo(props.history, newstate, newcounty);\n          }}\n        />\n        <NearbyCounties\n          casesData={casesData}\n          county={county}\n          state={state}\n          callback={(newcounty, newstate) => {\n            browseTo(props.history, newstate, newcounty);\n          }}\n        />\n        <DetailCaseList\n          county={county}\n          state={state}\n        />\n        <DataCrediWidget />\n      </header>\n    </div>\n  );\n}\nconst StateWidget = (props) => {\n  const state = props.match.params.state;\n  const county = props.match.params.county;\n  const casesData = props.casesData;\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>COVID-19.direct: US Counties</h2>\n        <SearchBox\n          casesData={casesData}\n          callback={(newcounty, newstate) => {\n            browseTo(props.history, newstate, newcounty);\n          }}\n        />\n        <USCountyInfoWidget\n          casesData={casesData}\n          county={county}\n          state={state}\n          callback={(newcounty, newstate) => {\n            browseTo(props.history, newstate, newcounty);\n          }}\n        />\n        <CountiesForStateWidget\n          casesData={casesData}\n          county={county}\n          state={state}\n          callback={(newcounty, newstate) => {\n            browseTo(props.history, newstate, newcounty);\n          }}\n        />\n        <StateDetailCaseListWidget\n          state={state}\n        />\n        <DataCrediWidget />\n      </header>\n    </div>\n  );\n}\n\nconst DataCrediWidget = () => {\n  return (\n    <div>\n      <h4> Data Sources </h4>\n      <li>\n        <a target=\"_blank\" href=\"https://github.com/CSSEGISandData/COVID-19\" rel=\"noopener noreferrer\" >\n          Johns Hopkins CSSE\n          </a>\n      </li>\n      <li>\n        <a target=\"_blank\" href=\"https://coronavirus.1point3acres.com/en\" rel=\"noopener noreferrer\" >\n          1point3acres.com\n          </a>\n      </li>\n\n      <li>\n        <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/User:Michael_J/County_table\" rel=\"noopener noreferrer\" >\n          Wikipedia county info\n          </a>\n      </li>\n      <li>\n        <a target=\"_blank\" href=\"https://hifld-geoplatform.opendata.arcgis.com/search?groupIds=2900322cc0b14948a74dca886b7d7cfc\" rel=\"noopener noreferrer\" >\n          Homeland Infrastructure Foundation-Level Data (HIFLD)\n           </a>\n      </li>\n      <li>\n        <a target=\"_blank\" href=\"https://covidtracking.com/api/\" rel=\"noopener noreferrer\" >\n          Covid tracking API\n           </a>\n      </li>\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}